{"version":3,"sources":["webpack://node_modules/antd/es/style/color/tinyColor.less","webpack://node_modules/antd/es/style/mixins/reset.less","webpack://node_modules/antd/es/list/style/index.less","webpack://node_modules/antd/es/list/style/bordered.less","webpack://node_modules/antd/es/list/style/responsive.less","webpack://node_modules/antd/es/list/style/rtl.less","webpack://src/pages/passages/pages/psgList/psgList.less","webpack://src/components/myMarkdown/myMarkdown.css","webpack://src/pages/passages/pages/psgDetail/psgDetail.less"],"names":[],"mappings":"AAAC,UCGC,qBAAA,CACA,QAAA,CACA,SAAA,CACA,qBAAA,CACA,cAAA,CACA,yBAAA,CACA,kBAAA,CACA,eAAA,CACA,mCAAA,CCFA,iBAMF,CFfC,YEYG,YAMJ,CAHE,qBACE,eAAA,CACA,gBAKJ,CAPE,6CAMI,eAIN,CAAE,eACE,eAAA,CACA,iBAEJ,CAJE,sBAII,kBAAA,CACA,iBAGN,CACE,eACE,eAAA,CACA,iBACJ,CAEE,qBACE,YAAA,CACA,qBAAA,CACA,cAAA,CACA,iBAAJ,CAGE,gBACE,QAAA,CACA,SAAA,CACA,eADJ,CAIE,eACE,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,cAAA,CACA,qBAFJ,CAII,oBACE,YAAA,CACA,QAAA,CACA,sBAAA,CACA,cAFN,CAIM,2BACE,iBAFR,CAIM,4BACE,QAAA,CACA,OAAA,CACA,qBAFR,CAIM,0BACE,iBAAA,CACA,qBAAA,CACA,cAAA,CACA,kBAFR,CAFM,4BAMI,qBAAA,CACA,kBADV,CAEU,kCACE,aAAZ,CAIM,gCACE,qBAAA,CACA,cAAA,CACA,kBAFR,CAKI,sBACE,aAAA,CACA,gBAAA,CACA,SAAA,CACA,WAAA,CACA,eAHN,CAKM,yBACE,iBAAA,CACA,oBAAA,CACA,aAAA,CACA,qBAAA,CACA,cAAA,CACA,kBAAA,CACA,iBAHR,CAKQ,qCACE,cAHV,CAOM,4BACE,iBAAA,CACA,OAAA,CACA,OAAA,CACA,SAAA,CACA,WAAA,CACA,eAAA,CACA,wBALR,CAcE,kCACE,sBATJ,CAYE,kCAEE,gBAAA,CACA,mBAVJ,CAaE,gBACE,cAAA,CACA,qBAAA,CACA,cAAA,CACA,iBAXJ,CAcE,+BACE,+BAZJ,CAaI,0CACE,kBAXN,CAeE,iCACE,+BAbJ,CAgBE,gDACE,4BAdJ,CAiBE,gDACE,eAfJ,CFnJC,iHEsKG,+BAhBJ,CAmBE,4BACE,iBAjBJ,CAoBE,4BACE,gBAlBJ,CAqBE,kCACE,kBAnBJ,CAqBI,uCACE,aAAA,CACA,QAnBN,CAsBI,wCACE,gBApBN,CAuBI,uCACE,kBArBN,CAuBM,6CACE,kBAAA,CACA,qBAAA,CACA,cAAA,CACA,gBArBR,CAyBI,yCACE,eAAA,CACA,gBAvBN,CAqBI,4CAKI,cAvBR,CAwBQ,wDACE,cAtBV,CFzLC,uCEsNG,aAAA,CACA,cAAA,CACA,kBAAA,CACA,aAAA,CACA,gBAAA,CACA,kBA1BJ,CA8BE,uBACE,aA5BJ,CAgCE,+EAGM,WAhCR,CFvMC,mBGGC,wBAAA,CACA,iBDuMF,CF3MC,0GGgBG,kBAAA,CACA,iBDsMJ,CFvNC,wCGqBG,gBDqMJ,CF1NC,8IG8BK,gBDmMN,CFjOC,8IGwCK,iBDgMN,CExOA,oCAWM,8DACE,gBFmON,CACF,CE9NA,oCAEI,eACE,cF+NJ,CE9NI,sBACE,gBFgON,CFvPD,kCI8BK,sBF4NJ,CE3NI,uCACE,eF6NN,CE3NI,wCACE,qBF6NN,CACF,CG1PE,cACE,aAAA,CACA,gBH4PJ,CG9PE,qDAMI,aH2PN,CFxQC,mCKmBK,eHwPN,CF3QC,yCK2BS,cAAA,CACA,gBHmPV,CF/QC,oCKmCO,iBAAA,CACA,aH+OR,CFnRC,4DKyCS,eAAA,CACA,iBH6OV,CFvRC,0CKgDS,UAAA,CACA,MH0OV,CF3RC,qDK0DO,iBAAA,CACA,aHoOR,CF/RC,sDKiEO,iBHiOR,CFlSC,sEKuEW,eAAA,CACA,iBH8NZ,CFtSC,6FKoFS,UHqNV,CG7MA,oCL5FC,0FK4GS,iBAAA,CACA,aHqMR,CACF,CG/LA,oCLpHC,oCKyHS,iBAAA,CACA,aH8LR,CFxTD,qDKqIS,qBHsLR,CACF,CI5TA,cACE,8BACF,CAFA,mCAGI,gBAAA,CACA,aAAA,CACA,SAEJ,CACA,iCAEI,aAAA,CACA,aAAJ,CAHA,kCAMI,gBAAA,CACA,aAAJ,CAPA,oCAUI,UAAJ,CAVA,iCAaI,eAAA,CACA,UAAJ,CAdA,sCAgBM,wBACN,CAjBA,2CAkBQ,SAER,CApBA,sCAuBI,oBAAA,CACA,cAAJ,CChCA,MACI,2BAA4B,CAC5B,yBACJ,CAEA,KACI,cAAe,CACf,kCACJ,CAEA,KACI,qFAA2F,CAC3F,UAAsB,CACtB,eACJ,CAEA,OACI,eAAgB,CACjB,aAAc,CAEb,uBACJ,CAEA,0CACC,OACC,gBACD,CACD,CAEA,0CACC,OACC,gBACD,CACD,CAEA,4CAEI,eACJ,CAEA,EACI,aACJ,CACA,kBAMI,iBAAkB,CAClB,eAAgB,CAChB,kBAAmB,CACnB,eAAiB,CACjB,eAAgB,CAChB,WACJ,CACA,4GAMI,oBACJ,CAqBA,oFAEI,iBACJ,CACA,GACI,gBAAiB,CACjB,eAEJ,CACA,MAFI,4BAMJ,CAJA,GACI,gBAAiB,CACjB,iBAEJ,CAEA,GACI,eAAgB,CAChB,gBACJ,CACA,GACI,gBACJ,CAIA,MAFI,aAKJ,CAHA,GAEI,UACJ,CACA,4BAMI,aACJ,CACA,YAEI,QACJ,CACA,GACI,UAAW,CACX,SAAU,CACV,aAAc,CACd,wBAAyB,CACzB,QAAc,CACd,eAAgB,CAChB,sBACJ,CAEA,WACI,oBACJ,CACA,MAEI,iBACJ,CACA,8BAEI,YACJ,CACA,4BAEI,eACJ,CACA,WACI,6BAA8B,CAC9B,cAAe,CACf,UACJ,CACA,sBACI,eACJ,CACA,MACI,SAAU,CACV,iBACJ,CACA,SACI,wBAAyB,CACzB,QAAS,CACT,SACJ,CACA,6BAEI,wBACJ,CACA,SACI,eAAiB,CACjB,wBAAyB,CACzB,eAGJ,CACA,kBAHI,QAAS,CACT,gBAMJ,CAJA,SACI,wBAGJ,CACA,0CAEI,YACJ,CACA,wCAEI,eACJ,CAEA,kBACI,gBACJ,CAEA,cACI,uCAAwC,CACxC,4BACJ,CAEA,mBAGI,wBAAyB,CACzB,wBAAyB,CACzB,iBAAkB,CAElB,iBAAwB,CACxB,cACJ,CAEA,KACI,wBAAyB,CACzB,aACJ,CAEA,WACI,kBAAmB,CACnB,eAAgB,CAChB,eAAgB,CAChB,kBACJ,CAGA,yBACE,kBACF,CAEA,aACI,KACI,cACJ,CACA,UAEI,uBACJ,CACA,IACI,oBACJ,CACJ,CAEA,WACC,wBACD,CACA,yBACC,YAAa,CACV,aAAc,CACd,gBAAiB,CACjB,wBAAyB,CACzB,QAAS,CACT,iBAAkB,CAClB,UAAc,CACd,sBACJ,CAEA,6BACC,cACD,CAEA,oBACI,kBACJ,CAEA,0BACC,eAAgB,CAChB,WACD,CASA,8EACC,eAAgB,CAChB,iBACD,CACA,mBACI,iBAAkB,CAClB,mBAAwB,CACxB,cAAgB,CAChB,aACJ,CAEA,QACI,aAAc,CACd,SACJ,CAEA,QACI,eAAe,CACf,mBACJ,CAEA,cACI,kBACJ,CAEA,mBACI,qBAAsB,CACtB,wBACJ,CAEA,wBACI,wBAAyB,CAGzB,yCAAiB,CAAjB,kBAAiB,CAAjB,gBACJ,CAGA,0BACI,oCACJ,CAEA,8CACI,yCACJ,CAEA,wFAEI,kBACJ,CAEA,mCAEI,wBAA0C,CAA1C,yCACJ,CAEA,SACI,aACJ,CAEA,sBACI,QACJ,CAEA,wBACI,oBAAqB,CACrB,UACJ,CAEA,gCACI,wBACJ,CAEA,uCACI,UAAY,CACZ,eACJ,CAEA,sCACI,wBAAyB,CACzB,6EACJ,CCrWA,sBACE,gBAAA,CACA,iBAAA,CACA,aAAA,CACA,gBACF,CACA,qBACE,iBACF,CAFA,0BAGI,cAEJ,CACA,wBACE,cAAA,CACA,cACF,CAHA,6BAII,aAAA,CACC,wBAAA,CACA,uBAAA,CACA,eAAA,CACA,eAAA,CACA,2BAAA,CACA,mBAEL,CACA,gBACE,8BACF,CAFA,sCAGI,iBAAA,CACA,gBAEJ","file":"9.5216f7da.chunk.css","sourcesContent":["/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\n.tinyColorMixin() {\n@functions: ~`(function() {\n// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// 2016-07-07, Brian Grinstead, MIT License\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by inputToRgb\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n// Conversion Functions\n// --------------------\n\n// rgbToHsl, rgbToHsv, hslToRgb, hsvToRgb modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// rgbToRgb\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// rgbToHsl\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// hslToRgb\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// rgbToHsv\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// hsvToRgb\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// rgbToHex\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// rgbaToHex\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// rgbaToArgbHex\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// equals\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// contrast\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// isReadable\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// mostReadable\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via hexNames[hex]\nvar hexNames = tinycolor.hexNames = flip(names);\n\n// Utilities\n// ---------\n\n// { 'name1': 'val1' } becomes { 'val1': 'name1' }\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// isValidCSSUnit\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see matchers above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// stringInputToObject\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns { r, g, b } or { h, s, l } or { h, s, v}\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\nthis.tinycolor = tinycolor;\n\n})()`;\n}\n// It is hacky way to make this function will be compiled preferentially by less\n// resolve error: `ReferenceError: colorPalette is not defined`\n// https://github.com/ant-design/ant-motion/issues/44\n.tinyColorMixin();\n","@import '../themes/index';\n\n.reset-component() {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  color: @text-color;\n  font-size: @font-size-base;\n  font-variant: @font-variant-base;\n  line-height: @line-height-base;\n  list-style: none;\n  font-feature-settings: @font-feature-settings-base;\n}\n","/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\n/* stylelint-disable no-duplicate-selectors */\n/* stylelint-disable */\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\n.ant-list {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  color: rgba(0, 0, 0, 0.85);\n  font-size: 14px;\n  font-variant: tabular-nums;\n  line-height: 1.5715;\n  list-style: none;\n  font-feature-settings: 'tnum';\n  position: relative;\n}\n.ant-list * {\n  outline: none;\n}\n.ant-list-pagination {\n  margin-top: 24px;\n  text-align: right;\n}\n.ant-list-pagination .ant-pagination-options {\n  text-align: left;\n}\n.ant-list-more {\n  margin-top: 12px;\n  text-align: center;\n}\n.ant-list-more button {\n  padding-right: 32px;\n  padding-left: 32px;\n}\n.ant-list-spin {\n  min-height: 40px;\n  text-align: center;\n}\n.ant-list-empty-text {\n  padding: 16px;\n  color: rgba(0, 0, 0, 0.25);\n  font-size: 14px;\n  text-align: center;\n}\n.ant-list-items {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n.ant-list-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 0;\n  color: rgba(0, 0, 0, 0.85);\n}\n.ant-list-item-meta {\n  display: flex;\n  flex: 1;\n  align-items: flex-start;\n  max-width: 100%;\n}\n.ant-list-item-meta-avatar {\n  margin-right: 16px;\n}\n.ant-list-item-meta-content {\n  flex: 1 0;\n  width: 0;\n  color: rgba(0, 0, 0, 0.85);\n}\n.ant-list-item-meta-title {\n  margin-bottom: 4px;\n  color: rgba(0, 0, 0, 0.85);\n  font-size: 14px;\n  line-height: 1.5715;\n}\n.ant-list-item-meta-title > a {\n  color: rgba(0, 0, 0, 0.85);\n  transition: all 0.3s;\n}\n.ant-list-item-meta-title > a:hover {\n  color: #1890ff;\n}\n.ant-list-item-meta-description {\n  color: rgba(0, 0, 0, 0.45);\n  font-size: 14px;\n  line-height: 1.5715;\n}\n.ant-list-item-action {\n  flex: 0 0 auto;\n  margin-left: 48px;\n  padding: 0;\n  font-size: 0;\n  list-style: none;\n}\n.ant-list-item-action > li {\n  position: relative;\n  display: inline-block;\n  padding: 0 8px;\n  color: rgba(0, 0, 0, 0.45);\n  font-size: 14px;\n  line-height: 1.5715;\n  text-align: center;\n}\n.ant-list-item-action > li:first-child {\n  padding-left: 0;\n}\n.ant-list-item-action-split {\n  position: absolute;\n  top: 50%;\n  right: 0;\n  width: 1px;\n  height: 14px;\n  margin-top: -7px;\n  background-color: #f0f0f0;\n}\n.ant-list-header {\n  background: transparent;\n}\n.ant-list-footer {\n  background: transparent;\n}\n.ant-list-header,\n.ant-list-footer {\n  padding-top: 12px;\n  padding-bottom: 12px;\n}\n.ant-list-empty {\n  padding: 16px 0;\n  color: rgba(0, 0, 0, 0.45);\n  font-size: 12px;\n  text-align: center;\n}\n.ant-list-split .ant-list-item {\n  border-bottom: 1px solid #f0f0f0;\n}\n.ant-list-split .ant-list-item:last-child {\n  border-bottom: none;\n}\n.ant-list-split .ant-list-header {\n  border-bottom: 1px solid #f0f0f0;\n}\n.ant-list-split.ant-list-empty .ant-list-footer {\n  border-top: 1px solid #f0f0f0;\n}\n.ant-list-loading .ant-list-spin-nested-loading {\n  min-height: 32px;\n}\n.ant-list-split.ant-list-something-after-last-item .ant-spin-container > .ant-list-items > .ant-list-item:last-child {\n  border-bottom: 1px solid #f0f0f0;\n}\n.ant-list-lg .ant-list-item {\n  padding: 16px 24px;\n}\n.ant-list-sm .ant-list-item {\n  padding: 8px 16px;\n}\n.ant-list-vertical .ant-list-item {\n  align-items: initial;\n}\n.ant-list-vertical .ant-list-item-main {\n  display: block;\n  flex: 1;\n}\n.ant-list-vertical .ant-list-item-extra {\n  margin-left: 40px;\n}\n.ant-list-vertical .ant-list-item-meta {\n  margin-bottom: 16px;\n}\n.ant-list-vertical .ant-list-item-meta-title {\n  margin-bottom: 12px;\n  color: rgba(0, 0, 0, 0.85);\n  font-size: 16px;\n  line-height: 24px;\n}\n.ant-list-vertical .ant-list-item-action {\n  margin-top: 16px;\n  margin-left: auto;\n}\n.ant-list-vertical .ant-list-item-action > li {\n  padding: 0 16px;\n}\n.ant-list-vertical .ant-list-item-action > li:first-child {\n  padding-left: 0;\n}\n.ant-list-grid .ant-col > .ant-list-item {\n  display: block;\n  max-width: 100%;\n  margin-bottom: 16px;\n  padding-top: 0;\n  padding-bottom: 0;\n  border-bottom: none;\n}\n.ant-list-item-no-flex {\n  display: block;\n}\n.ant-list:not(.ant-list-vertical) .ant-list-item-no-flex .ant-list-item-action {\n  float: right;\n}\n.ant-list-bordered {\n  border: 1px solid #d9d9d9;\n  border-radius: 2px;\n}\n.ant-list-bordered .ant-list-header {\n  padding-right: 24px;\n  padding-left: 24px;\n}\n.ant-list-bordered .ant-list-footer {\n  padding-right: 24px;\n  padding-left: 24px;\n}\n.ant-list-bordered .ant-list-item {\n  padding-right: 24px;\n  padding-left: 24px;\n}\n.ant-list-bordered .ant-list-pagination {\n  margin: 16px 24px;\n}\n.ant-list-bordered.ant-list-sm .ant-list-item {\n  padding: 8px 16px;\n}\n.ant-list-bordered.ant-list-sm .ant-list-header,\n.ant-list-bordered.ant-list-sm .ant-list-footer {\n  padding: 8px 16px;\n}\n.ant-list-bordered.ant-list-lg .ant-list-item {\n  padding: 16px 24px;\n}\n.ant-list-bordered.ant-list-lg .ant-list-header,\n.ant-list-bordered.ant-list-lg .ant-list-footer {\n  padding: 16px 24px;\n}\n@media screen and (max-width: 768px) {\n  .ant-list-item-action {\n    margin-left: 24px;\n  }\n  .ant-list-vertical .ant-list-item-extra {\n    margin-left: 24px;\n  }\n}\n@media screen and (max-width: 576px) {\n  .ant-list-item {\n    flex-wrap: wrap;\n  }\n  .ant-list-item-action {\n    margin-left: 12px;\n  }\n  .ant-list-vertical .ant-list-item {\n    flex-wrap: wrap-reverse;\n  }\n  .ant-list-vertical .ant-list-item-main {\n    min-width: 220px;\n  }\n  .ant-list-vertical .ant-list-item-extra {\n    margin: auto auto 16px;\n  }\n}\n.ant-list-rtl {\n  direction: rtl;\n  text-align: right;\n}\n.ant-list-rtl .ReactVirtualized__List .ant-list-item {\n  direction: rtl;\n}\n.ant-list-rtl .ant-list-pagination {\n  text-align: left;\n}\n.ant-list-rtl .ant-list-item-meta-avatar {\n  margin-right: 0;\n  margin-left: 16px;\n}\n.ant-list-rtl .ant-list-item-action {\n  margin-right: 48px;\n  margin-left: 0;\n}\n.ant-list.ant-list-rtl .ant-list-item-action > li:first-child {\n  padding-right: 0;\n  padding-left: 16px;\n}\n.ant-list-rtl .ant-list-item-action-split {\n  right: auto;\n  left: 0;\n}\n.ant-list-rtl.ant-list-vertical .ant-list-item-extra {\n  margin-right: 40px;\n  margin-left: 0;\n}\n.ant-list-rtl.ant-list-vertical .ant-list-item-action {\n  margin-right: auto;\n}\n.ant-list-rtl .ant-list-vertical .ant-list-item-action > li:first-child {\n  padding-right: 0;\n  padding-left: 16px;\n}\n.ant-list-rtl .ant-list:not(.ant-list-vertical) .ant-list-item-no-flex .ant-list-item-action {\n  float: left;\n}\n@media screen and (max-width: 768px) {\n  .ant-list-rtl .ant-list-item-action {\n    margin-right: 24px;\n    margin-left: 0;\n  }\n  .ant-list-rtl .ant-list-vertical .ant-list-item-extra {\n    margin-right: 24px;\n    margin-left: 0;\n  }\n}\n@media screen and (max-width: 576px) {\n  .ant-list-rtl .ant-list-item-action {\n    margin-right: 22px;\n    margin-left: 0;\n  }\n  .ant-list-rtl.ant-list-vertical .ant-list-item-extra {\n    margin: auto auto 16px;\n  }\n}\n","@import '../../style/themes/index';\n\n.@{list-prefix-cls}-bordered {\n  border: 1px solid @border-color-base;\n  border-radius: @border-radius-base;\n  .@{list-prefix-cls}-header {\n    padding-right: @padding-lg;\n    padding-left: @padding-lg;\n  }\n\n  .@{list-prefix-cls}-footer {\n    padding-right: @padding-lg;\n    padding-left: @padding-lg;\n  }\n\n  .@{list-prefix-cls}-item {\n    padding-right: @padding-lg;\n    padding-left: @padding-lg;\n  }\n\n  .@{list-prefix-cls}-pagination {\n    margin: @margin-md @margin-lg;\n  }\n\n  &.@{list-prefix-cls}-sm {\n    .@{list-prefix-cls}-item {\n      padding: @list-item-padding-sm;\n    }\n    .@{list-prefix-cls}-header,\n    .@{list-prefix-cls}-footer {\n      padding: @list-item-padding-sm;\n    }\n  }\n\n  &.@{list-prefix-cls}-lg {\n    .@{list-prefix-cls}-item {\n      padding: @list-item-padding-lg;\n    }\n    .@{list-prefix-cls}-header,\n    .@{list-prefix-cls}-footer {\n      padding: @list-item-padding-lg;\n    }\n  }\n}\n","@media screen and (max-width: @screen-md) {\n  .@{list-prefix-cls} {\n    &-item {\n      &-action {\n        margin-left: 24px;\n      }\n    }\n  }\n\n  .@{list-prefix-cls}-vertical {\n    .@{list-prefix-cls}-item {\n      &-extra {\n        margin-left: 24px;\n      }\n    }\n  }\n}\n\n@media screen and (max-width: @screen-sm) {\n  .@{list-prefix-cls} {\n    &-item {\n      flex-wrap: wrap;\n      &-action {\n        margin-left: 12px;\n      }\n    }\n  }\n\n  .@{list-prefix-cls}-vertical {\n    .@{list-prefix-cls}-item {\n      flex-wrap: wrap-reverse;\n      &-main {\n        min-width: 220px;\n      }\n      &-extra {\n        margin: auto auto 16px;\n      }\n    }\n  }\n}\n","@import '../../style/themes/index';\n@import '../../style/mixins/index';\n@import './customize.less';\n\n@list-prefix-cls: ~'@{ant-prefix}-list';\n\n.@{list-prefix-cls} {\n  &-rtl {\n    direction: rtl;\n    text-align: right;\n\n    // fix for virtual scroll style attribute > (direction:ltr)\n    .ReactVirtualized__List .@{list-prefix-cls}-item {\n      direction: rtl;\n    }\n  }\n\n  &-pagination {\n    .@{list-prefix-cls}-rtl & {\n      text-align: left;\n    }\n  }\n\n  &-item {\n    &-meta {\n      &-avatar {\n        .@{list-prefix-cls}-rtl & {\n          margin-right: 0;\n          margin-left: @list-item-meta-avatar-margin-right;\n        }\n      }\n    }\n\n    &-action {\n      .@{list-prefix-cls}-rtl & {\n        margin-right: 48px;\n        margin-left: 0;\n      }\n\n      & > li:first-child {\n        .@{list-prefix-cls}.@{list-prefix-cls}-rtl & {\n          padding-right: 0;\n          padding-left: @padding-md;\n        }\n      }\n\n      &-split {\n        .@{list-prefix-cls}-rtl & {\n          right: auto;\n          left: 0;\n        }\n      }\n    }\n  }\n\n  &-vertical &-item {\n    &-extra {\n      .@{list-prefix-cls}-rtl& {\n        margin-right: 40px;\n        margin-left: 0;\n      }\n    }\n\n    &-action {\n      .@{list-prefix-cls}-rtl& {\n        margin-right: auto;\n      }\n\n      > li {\n        &:first-child {\n          .@{list-prefix-cls}-rtl & {\n            padding-right: 0;\n            padding-left: @padding-md;\n          }\n        }\n      }\n    }\n  }\n\n  // Horizontal\n  &:not(.@{list-prefix-cls}-vertical) {\n    .@{list-prefix-cls}-item-no-flex {\n      .@{list-prefix-cls}-item-action {\n        .@{list-prefix-cls}-rtl & {\n          float: left;\n        }\n      }\n    }\n  }\n}\n\n// responsive\n@media screen and (max-width: @screen-md) {\n  .@{list-prefix-cls} {\n    &-item {\n      &-action {\n        .@{list-prefix-cls}-rtl & {\n          margin-right: 24px;\n          margin-left: 0;\n        }\n      }\n    }\n  }\n\n  .@{list-prefix-cls}-vertical {\n    .@{list-prefix-cls}-item {\n      &-extra {\n        .@{list-prefix-cls}-rtl & {\n          margin-right: 24px;\n          margin-left: 0;\n        }\n      }\n    }\n  }\n}\n\n@media screen and (max-width: @screen-sm) {\n  .@{list-prefix-cls} {\n    &-item {\n      &-action {\n        .@{list-prefix-cls}-rtl & {\n          margin-right: 22px;\n          margin-left: 0;\n        }\n      }\n    }\n  }\n\n  .@{list-prefix-cls}-vertical {\n    .@{list-prefix-cls}-item {\n      &-extra {\n        // to override margins on rtl view\n        .@{list-prefix-cls}-rtl& {\n          margin: auto auto 16px;\n        }\n      }\n    }\n  }\n}\n",".psgList-left{\n  border-right: 1px solid #f0f0f0;\n  .pagList-left-search{\n    margin: 1rem auto;\n    display: block;\n    width: 90%;\n  }\n}\n.psgList-main{\n  .pick-intelligence{\n    margin: 0 auto;\n    display: block;\n  }\n  .psgList-main-title{\n    font-size: 1.3rem;\n    color: #1e90ff;\n  }\n  .psgList-main-context{\n    color: #777;\n  }\n  .psgList-main-icon{\n    padding: .5rem 0;\n    color: #AAA;\n    span{\n      padding-left: 0 !important;\n      span{\n        padding: 0;\n      }\n    }\n  }\n  .psgList-main-icon span{\n    display: inline-block;\n    padding: 0 10px;\n  }\n}",":root {\n    --side-bar-bg-color: #fafafa;\n    --control-text-color: #777;\n}\n\nhtml {\n    font-size: 16px;\n    -webkit-font-smoothing: antialiased;\n}\n\nbody {\n    font-family: \"Clear Sans\", \"Helvetica Neue\", Helvetica, Arial, 'Segoe UI Emoji', sans-serif;\n    color: rgb(51, 51, 51);\n    line-height: 1.6;\n}\n\n#write {\n    max-width: 860px;\n  \tmargin: 0 auto;\n  \tpadding: 30px;\n    padding-bottom: 100px;\n}\n\n@media only screen and (min-width: 1400px) {\n\t#write {\n\t\tmax-width: 1024px;\n\t}\n}\n\n@media only screen and (min-width: 1800px) {\n\t#write {\n\t\tmax-width: 1200px;\n\t}\n}\n\n#write > ul:first-child,\n#write > ol:first-child{\n    margin-top: 30px;\n}\n\na {\n    color: #4183C4;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    position: relative;\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n    font-weight: bold;\n    line-height: 1.4;\n    cursor: text;\n}\nh1:hover a.anchor,\nh2:hover a.anchor,\nh3:hover a.anchor,\nh4:hover a.anchor,\nh5:hover a.anchor,\nh6:hover a.anchor {\n    text-decoration: none;\n}\nh1 tt,\nh1 code {\n    font-size: inherit;\n}\nh2 tt,\nh2 code {\n    font-size: inherit;\n}\nh3 tt,\nh3 code {\n    font-size: inherit;\n}\nh4 tt,\nh4 code {\n    font-size: inherit;\n}\nh5 tt,\nh5 code {\n    font-size: inherit;\n}\nh6 tt,\nh6 code {\n    font-size: inherit;\n}\nh1 {\n    font-size: 2.25em;\n    line-height: 1.2;\n    border-bottom: 1px solid #eee;\n}\nh2 {\n    font-size: 1.75em;\n    line-height: 1.225;\n    border-bottom: 1px solid #eee;\n}\n\nh3 {\n    font-size: 1.5em;\n    line-height: 1.43;\n}\nh4 {\n    font-size: 1.25em;\n}\nh5 {\n    font-size: 1em;\n}\nh6 {\n   font-size: 1em;\n    color: #777;\n}\np,\nblockquote,\nul,\nol,\ndl,\ntable{\n    margin: 0.8em 0;\n}\nli>ol,\nli>ul {\n    margin: 0 0;\n}\nhr {\n    height: 2px;\n    padding: 0;\n    margin: 16px 0;\n    background-color: #e7e7e7;\n    border: 0 none;\n    overflow: hidden;\n    box-sizing: content-box;\n}\n\nli p.first {\n    display: inline-block;\n}\nul,\nol {\n    padding-left: 30px;\n}\nul:first-child,\nol:first-child {\n    margin-top: 0;\n}\nul:last-child,\nol:last-child {\n    margin-bottom: 0;\n}\nblockquote {\n    border-left: 4px solid #dfe2e5;\n    padding: 0 15px;\n    color: #777777;\n}\nblockquote blockquote {\n    padding-right: 0;\n}\ntable {\n    padding: 0;\n    word-break: initial;\n}\ntable tr {\n    border: 1px solid #dfe2e5;\n    margin: 0;\n    padding: 0;\n}\ntable tr:nth-child(2n),\nthead {\n    background-color: #f8f8f8;\n}\ntable th {\n    font-weight: bold;\n    border: 1px solid #dfe2e5;\n    border-bottom: 0;\n    margin: 0;\n    padding: 6px 13px;\n}\ntable td {\n    border: 1px solid #dfe2e5;\n    margin: 0;\n    padding: 6px 13px;\n}\ntable th:first-child,\ntable td:first-child {\n    margin-top: 0;\n}\ntable th:last-child,\ntable td:last-child {\n    margin-bottom: 0;\n}\n\n.CodeMirror-lines {\n    padding-left: 4px;\n}\n\n.code-tooltip {\n    box-shadow: 0 1px 1px 0 rgba(0,28,36,.3);\n    border-top: 1px solid #eef2f2;\n}\n\n.md-fences,\ncode,\ntt {\n    border: 1px solid #e7eaed;\n    background-color: #f8f8f8;\n    border-radius: 3px;\n    padding: 0;\n    padding: 2px 4px 0px 4px;\n    font-size: 0.9em;\n}\n\ncode {\n    background-color: #f3f4f4;\n    padding: 0 2px 0 2px;\n}\n\n.md-fences {\n    margin-bottom: 15px;\n    margin-top: 15px;\n    padding-top: 8px;\n    padding-bottom: 6px;\n}\n\n\n.md-task-list-item > input {\n  margin-left: -1.3em;\n}\n\n@media print {\n    html {\n        font-size: 13px;\n    }\n    table,\n    pre {\n        page-break-inside: avoid;\n    }\n    pre {\n        word-wrap: break-word;\n    }\n}\n\n.md-fences {\n\tbackground-color: #f8f8f8;\n}\n#write pre.md-meta-block {\n\tpadding: 1rem;\n    font-size: 85%;\n    line-height: 1.45;\n    background-color: #f7f7f7;\n    border: 0;\n    border-radius: 3px;\n    color: #777777;\n    margin-top: 0 !important;\n}\n\n.mathjax-block>.code-tooltip {\n\tbottom: .375rem;\n}\n\n.md-mathjax-midline {\n    background: #fafafa;\n}\n\n#write>h3.md-focus:before{\n\tleft: -1.5625rem;\n\ttop: .375rem;\n}\n#write>h4.md-focus:before{\n\tleft: -1.5625rem;\n\ttop: .285714286rem;\n}\n#write>h5.md-focus:before{\n\tleft: -1.5625rem;\n\ttop: .285714286rem;\n}\n#write>h6.md-focus:before{\n\tleft: -1.5625rem;\n\ttop: .285714286rem;\n}\n.md-image>.md-meta {\n    border-radius: 3px;\n    padding: 2px 0px 0px 4px;\n    font-size: 0.9em;\n    color: inherit;\n}\n\n.md-tag {\n    color: #a7a7a7;\n    opacity: 1;\n}\n\n.md-toc { \n    margin-top:20px;\n    padding-bottom:20px;\n}\n\n.sidebar-tabs {\n    border-bottom: none;\n}\n\n#typora-quick-open {\n    border: 1px solid #ddd;\n    background-color: #f8f8f8;\n}\n\n#typora-quick-open-item {\n    background-color: #FAFAFA;\n    border-color: #FEFEFE #e5e5e5 #e5e5e5 #eee;\n    border-style: solid;\n    border-width: 1px;\n}\n\n/** focus mode */\n.on-focus-mode blockquote {\n    border-left-color: rgba(85, 85, 85, 0.12);\n}\n\nheader, .context-menu, .megamenu-content, footer{\n    font-family: \"Segoe UI\", \"Arial\", sans-serif;\n}\n\n.file-node-content:hover .file-node-icon,\n.file-node-content:hover .file-node-open-state{\n    visibility: visible;\n}\n\n.mac-seamless-mode #typora-sidebar {\n    background-color: #fafafa;\n    background-color: var(--side-bar-bg-color);\n}\n\n.md-lang {\n    color: #b4654d;\n}\n\n#md-notification .btn {\n    border: 0;\n}\n\n.dropdown-menu .divider {\n    border-color: #e5e5e5;\n    opacity: 0.4;\n}\n\n.ty-preferences .window-content {\n    background-color: #fafafa;\n}\n\n.ty-preferences .nav-group-item.active {\n    color: white;\n    background: #999;\n}\n\n.menu-item-container a.menu-style-btn {\n    background-color: #f5f8fa;\n    background-image: linear-gradient( 180deg , hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0)); \n}\n",".psgDetail-main-title{\n  font-size: 1.8rem;\n  text-align: center;\n  color: #1e90ff;\n  padding-top: 1rem;\n}\n.psgDetail-main-icon{\n  text-align: center;\n  span{\n    margin: 0 0.5rem;\n  }\n}\n.psgDetail-main-content{\n  padding: 1.3rem;\n  font-size: 1rem;\n  code{\n    display: block ;\n     background-color:#f3f3f3;\n     padding: .5rem !important;\n     overflow-y: auto;\n     font-weight: 300;\n     font-family: Menlo, monospace;\n     border-radius: .3rem;\n  }\n}\n.psgDetail-left{\n  border-right: 1px solid #f0f0f0;\n  .psgDetail-left-title{\n    text-align: center;\n    font-size: 1.5rem;\n  }\n}\n"]}