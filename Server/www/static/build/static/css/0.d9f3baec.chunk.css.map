{"version":3,"sources":["webpack://node_modules/antd/es/style/color/tinyColor.less","webpack://node_modules/antd/es/style/mixins/reset.less","webpack://node_modules/antd/es/tooltip/style/index.less","webpack://node_modules/antd/es/tooltip/style/rtl.less"],"names":[],"mappings":"AAAC,aCGC,qBAAA,CACA,QAAA,CACA,SAAA,CACA,qBAAA,CACA,cAAA,CACA,yBAAA,CACA,kBAAA,CACA,eAAA,CACA,iCAAA,CCMA,iBAAA,CACA,YAAA,CACA,aAAA,CACA,eAAA,CACA,kBAFF,CAIE,oBACE,YAFJ,CAKE,0FAGE,kBAHJ,CAME,gGAGE,gBAJJ,CAOE,mGAGE,eALJ,CAQE,6FAGE,iBANJ,CAUE,mBACE,cAAA,CACA,eAAA,CACA,eAAA,CACA,UAAA,CACA,eAAA,CACA,oBAAA,CACA,oBAAA,CACA,gCAAA,CACA,iBAAA,CACA,qGARJ,CAYE,mBACE,iBAAA,CACA,aAAA,CACA,mBAAA,CACA,oBAAA,CACA,eAAA,CACA,sBAAA,CACA,mBAVJ,CAYI,2BACE,iBAAA,CACA,KAAA,CACA,OAAA,CACA,QAAA,CACA,MAAA,CACA,aAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,gCAAA,CACA,UAAA,CACA,mBAVN,CAcE,mJAGE,oBAZJ,CAcI,2KACE,sCAAA,CACA,iDAVN,CAcE,8CACE,QAAA,CACA,0BAZJ,CAeE,kDACE,SAbJ,CAgBE,mDACE,UAdJ,CAiBE,yJAGE,kBAfJ,CAiBI,iLACE,uCAAA,CACA,gDAbN,CAiBE,gDACE,OAAA,CACA,0BAfJ,CAkBE,mDACE,OAhBJ,CAmBE,sDACE,UAjBJ,CAoBE,sJAGE,mBAlBJ,CAoBI,8KACE,uCAAA,CACA,iDAhBN,CAoBE,+CACE,OAAA,CACA,0BAlBJ,CAqBE,kDACE,OAnBJ,CAsBE,qDACE,UApBJ,CAuBE,4JAGE,iBArBJ,CAuBI,oLACE,wCAAA,CACA,gDAnBN,CAuBE,iDACE,QAAA,CACA,0BArBJ,CAwBE,qDACE,SAtBJ,CAyBE,sDACE,UAvBJ,CAoCM,0KACE,wBAzBR,CAwBM,gFACE,wBAnBR,CAkBM,wFACE,wBAbR,CAYM,sFACE,wBAPR,CAMM,sFACE,wBADR,CAAM,kFACE,wBAKR,CANM,kFACE,wBAWR,CAZM,kFACE,wBAiBR,CAlBM,oFACE,wBAuBR,CAxBM,kFACE,wBA6BR,CA9BM,0FACE,wBAmCR,CApCM,sFACE,wBAyCR,CC3OE,iBACE,aD6OJ,CFlPC,oCGUK,gBD2ON","file":"0.d9f3baec.chunk.css","sourcesContent":["/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\n.tinyColorMixin() {\n@functions: ~`(function() {\n// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// 2016-07-07, Brian Grinstead, MIT License\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by inputToRgb\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n// Conversion Functions\n// --------------------\n\n// rgbToHsl, rgbToHsv, hslToRgb, hsvToRgb modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// rgbToRgb\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// rgbToHsl\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// hslToRgb\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// rgbToHsv\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// hsvToRgb\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// rgbToHex\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// rgbaToHex\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// rgbaToArgbHex\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// equals\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// contrast\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// isReadable\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// mostReadable\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via hexNames[hex]\nvar hexNames = tinycolor.hexNames = flip(names);\n\n// Utilities\n// ---------\n\n// { 'name1': 'val1' } becomes { 'val1': 'name1' }\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// isValidCSSUnit\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see matchers above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// stringInputToObject\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns { r, g, b } or { h, s, l } or { h, s, v}\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\nthis.tinycolor = tinycolor;\n\n})()`;\n}\n// It is hacky way to make this function will be compiled preferentially by less\n// resolve error: `ReferenceError: colorPalette is not defined`\n// https://github.com/ant-design/ant-motion/issues/44\n.tinyColorMixin();\n","@import '../themes/index';\n\n.reset-component() {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  color: @text-color;\n  font-size: @font-size-base;\n  font-variant: @font-variant-base;\n  line-height: @line-height-base;\n  list-style: none;\n  font-feature-settings: @font-feature-settings-base;\n}\n","@import '../../style/themes/index';\n@import '../../style/mixins/index';\n\n@tooltip-prefix-cls: ~'@{ant-prefix}-tooltip';\n\n@tooltip-arrow-shadow-width: 3px;\n\n@tooltip-arrow-rotate-width: sqrt(@tooltip-arrow-width * @tooltip-arrow-width * 2) +\n  @tooltip-arrow-shadow-width * 2;\n\n@tooltip-arrow-offset-vertical: 5px; // 8 - 3px\n@tooltip-arrow-offset-horizontal: 13px; // 16 - 3px\n\n// Base class\n.@{tooltip-prefix-cls} {\n  .reset-component();\n\n  position: absolute;\n  z-index: @zindex-tooltip;\n  display: block;\n  max-width: @tooltip-max-width;\n  visibility: visible;\n\n  &-hidden {\n    display: none;\n  }\n\n  &-placement-top,\n  &-placement-topLeft,\n  &-placement-topRight {\n    padding-bottom: @tooltip-distance;\n  }\n\n  &-placement-right,\n  &-placement-rightTop,\n  &-placement-rightBottom {\n    padding-left: @tooltip-distance;\n  }\n\n  &-placement-bottom,\n  &-placement-bottomLeft,\n  &-placement-bottomRight {\n    padding-top: @tooltip-distance;\n  }\n\n  &-placement-left,\n  &-placement-leftTop,\n  &-placement-leftBottom {\n    padding-right: @tooltip-distance;\n  }\n\n  // Wrapper for the tooltip content\n  &-inner {\n    min-width: 30px;\n    min-height: 32px;\n    padding: 6px 8px;\n    color: @tooltip-color;\n    text-align: left;\n    text-decoration: none;\n    word-wrap: break-word;\n    background-color: @tooltip-bg;\n    border-radius: @border-radius-base;\n    box-shadow: @box-shadow-base;\n  }\n\n  // Arrows\n  &-arrow {\n    position: absolute;\n    display: block;\n    width: @tooltip-arrow-rotate-width;\n    height: @tooltip-arrow-rotate-width;\n    overflow: hidden;\n    background: transparent;\n    pointer-events: none;\n\n    &-content {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      display: block;\n      width: @tooltip-arrow-width;\n      height: @tooltip-arrow-width;\n      margin: auto;\n      background-color: @tooltip-bg;\n      content: '';\n      pointer-events: auto;\n    }\n  }\n\n  &-placement-top &-arrow,\n  &-placement-topLeft &-arrow,\n  &-placement-topRight &-arrow {\n    bottom: @tooltip-distance - @tooltip-arrow-rotate-width;\n\n    &-content {\n      box-shadow: @tooltip-arrow-shadow-width @tooltip-arrow-shadow-width 7px fade(@black, 7%);\n      transform: translateY((-@tooltip-arrow-rotate-width / 2)) rotate(45deg);\n    }\n  }\n\n  &-placement-top &-arrow {\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  &-placement-topLeft &-arrow {\n    left: @tooltip-arrow-offset-horizontal;\n  }\n\n  &-placement-topRight &-arrow {\n    right: @tooltip-arrow-offset-horizontal;\n  }\n\n  &-placement-right &-arrow,\n  &-placement-rightTop &-arrow,\n  &-placement-rightBottom &-arrow {\n    left: @tooltip-distance - @tooltip-arrow-rotate-width;\n\n    &-content {\n      box-shadow: -@tooltip-arrow-shadow-width @tooltip-arrow-shadow-width 7px fade(@black, 7%);\n      transform: translateX((@tooltip-arrow-rotate-width / 2)) rotate(45deg);\n    }\n  }\n\n  &-placement-right &-arrow {\n    top: 50%;\n    transform: translateY(-50%);\n  }\n\n  &-placement-rightTop &-arrow {\n    top: @tooltip-arrow-offset-vertical;\n  }\n\n  &-placement-rightBottom &-arrow {\n    bottom: @tooltip-arrow-offset-vertical;\n  }\n\n  &-placement-left &-arrow,\n  &-placement-leftTop &-arrow,\n  &-placement-leftBottom &-arrow {\n    right: @tooltip-distance - @tooltip-arrow-rotate-width;\n\n    &-content {\n      box-shadow: @tooltip-arrow-shadow-width -@tooltip-arrow-shadow-width 7px fade(@black, 7%);\n      transform: translateX((-@tooltip-arrow-rotate-width / 2)) rotate(45deg);\n    }\n  }\n\n  &-placement-left &-arrow {\n    top: 50%;\n    transform: translateY(-50%);\n  }\n\n  &-placement-leftTop &-arrow {\n    top: @tooltip-arrow-offset-vertical;\n  }\n\n  &-placement-leftBottom &-arrow {\n    bottom: @tooltip-arrow-offset-vertical;\n  }\n\n  &-placement-bottom &-arrow,\n  &-placement-bottomLeft &-arrow,\n  &-placement-bottomRight &-arrow {\n    top: @tooltip-distance - @tooltip-arrow-rotate-width;\n\n    &-content {\n      box-shadow: -@tooltip-arrow-shadow-width -@tooltip-arrow-shadow-width 7px fade(@black, 7%);\n      transform: translateY((@tooltip-arrow-rotate-width / 2)) rotate(45deg);\n    }\n  }\n\n  &-placement-bottom &-arrow {\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  &-placement-bottomLeft &-arrow {\n    left: @tooltip-arrow-offset-horizontal;\n  }\n\n  &-placement-bottomRight &-arrow {\n    right: @tooltip-arrow-offset-horizontal;\n  }\n}\n\n.generator-tooltip-preset-color(@i: length(@preset-colors)) when (@i > 0) {\n  .generator-tooltip-preset-color(@i - 1);\n  @color: extract(@preset-colors, @i);\n  @lightColor: '@{color}-6';\n  .@{tooltip-prefix-cls}-@{color} {\n    .@{tooltip-prefix-cls}-inner {\n      background-color: @@lightColor;\n    }\n    .@{tooltip-prefix-cls}-arrow {\n      &-content {\n        background-color: @@lightColor;\n      }\n    }\n  }\n}\n.generator-tooltip-preset-color();\n\n@import './rtl';\n\n@hack: true;@import \"/home/horbin/Project/Web/MyWeb/Client/node_modules/antd/lib/style/color/colorPalette.less\";@blue-base: #1890ff;@blue-1: color(~`colorPalette('@{blue-6}', 1) `);@blue-2: color(~`colorPalette('@{blue-6}', 2) `);@blue-3: color(~`colorPalette('@{blue-6}', 3) `);@blue-4: color(~`colorPalette('@{blue-6}', 4) `);@blue-5: color(~`colorPalette('@{blue-6}', 5) `);@blue-6: @blue-base;@blue-7: color(~`colorPalette('@{blue-6}', 7) `);@blue-8: color(~`colorPalette('@{blue-6}', 8) `);@blue-9: color(~`colorPalette('@{blue-6}', 9) `);@blue-10: color(~`colorPalette('@{blue-6}', 10) `);@purple-base: #722ed1;@purple-1: color(~`colorPalette('@{purple-6}', 1) `);@purple-2: color(~`colorPalette('@{purple-6}', 2) `);@purple-3: color(~`colorPalette('@{purple-6}', 3) `);@purple-4: color(~`colorPalette('@{purple-6}', 4) `);@purple-5: color(~`colorPalette('@{purple-6}', 5) `);@purple-6: @purple-base;@purple-7: color(~`colorPalette('@{purple-6}', 7) `);@purple-8: color(~`colorPalette('@{purple-6}', 8) `);@purple-9: color(~`colorPalette('@{purple-6}', 9) `);@purple-10: color(~`colorPalette('@{purple-6}', 10) `);@cyan-base: #13c2c2;@cyan-1: color(~`colorPalette('@{cyan-6}', 1) `);@cyan-2: color(~`colorPalette('@{cyan-6}', 2) `);@cyan-3: color(~`colorPalette('@{cyan-6}', 3) `);@cyan-4: color(~`colorPalette('@{cyan-6}', 4) `);@cyan-5: color(~`colorPalette('@{cyan-6}', 5) `);@cyan-6: @cyan-base;@cyan-7: color(~`colorPalette('@{cyan-6}', 7) `);@cyan-8: color(~`colorPalette('@{cyan-6}', 8) `);@cyan-9: color(~`colorPalette('@{cyan-6}', 9) `);@cyan-10: color(~`colorPalette('@{cyan-6}', 10) `);@green-base: #52c41a;@green-1: color(~`colorPalette('@{green-6}', 1) `);@green-2: color(~`colorPalette('@{green-6}', 2) `);@green-3: color(~`colorPalette('@{green-6}', 3) `);@green-4: color(~`colorPalette('@{green-6}', 4) `);@green-5: color(~`colorPalette('@{green-6}', 5) `);@green-6: @green-base;@green-7: color(~`colorPalette('@{green-6}', 7) `);@green-8: color(~`colorPalette('@{green-6}', 8) `);@green-9: color(~`colorPalette('@{green-6}', 9) `);@green-10: color(~`colorPalette('@{green-6}', 10) `);@magenta-base: #eb2f96;@magenta-1: color(~`colorPalette('@{magenta-6}', 1) `);@magenta-2: color(~`colorPalette('@{magenta-6}', 2) `);@magenta-3: color(~`colorPalette('@{magenta-6}', 3) `);@magenta-4: color(~`colorPalette('@{magenta-6}', 4) `);@magenta-5: color(~`colorPalette('@{magenta-6}', 5) `);@magenta-6: @magenta-base;@magenta-7: color(~`colorPalette('@{magenta-6}', 7) `);@magenta-8: color(~`colorPalette('@{magenta-6}', 8) `);@magenta-9: color(~`colorPalette('@{magenta-6}', 9) `);@magenta-10: color(~`colorPalette('@{magenta-6}', 10) `);@pink-base: #eb2f96;@pink-1: color(~`colorPalette('@{pink-6}', 1) `);@pink-2: color(~`colorPalette('@{pink-6}', 2) `);@pink-3: color(~`colorPalette('@{pink-6}', 3) `);@pink-4: color(~`colorPalette('@{pink-6}', 4) `);@pink-5: color(~`colorPalette('@{pink-6}', 5) `);@pink-6: @pink-base;@pink-7: color(~`colorPalette('@{pink-6}', 7) `);@pink-8: color(~`colorPalette('@{pink-6}', 8) `);@pink-9: color(~`colorPalette('@{pink-6}', 9) `);@pink-10: color(~`colorPalette('@{pink-6}', 10) `);@red-base: #f5222d;@red-1: color(~`colorPalette('@{red-6}', 1) `);@red-2: color(~`colorPalette('@{red-6}', 2) `);@red-3: color(~`colorPalette('@{red-6}', 3) `);@red-4: color(~`colorPalette('@{red-6}', 4) `);@red-5: color(~`colorPalette('@{red-6}', 5) `);@red-6: @red-base;@red-7: color(~`colorPalette('@{red-6}', 7) `);@red-8: color(~`colorPalette('@{red-6}', 8) `);@red-9: color(~`colorPalette('@{red-6}', 9) `);@red-10: color(~`colorPalette('@{red-6}', 10) `);@orange-base: #fa8c16;@orange-1: color(~`colorPalette('@{orange-6}', 1) `);@orange-2: color(~`colorPalette('@{orange-6}', 2) `);@orange-3: color(~`colorPalette('@{orange-6}', 3) `);@orange-4: color(~`colorPalette('@{orange-6}', 4) `);@orange-5: color(~`colorPalette('@{orange-6}', 5) `);@orange-6: @orange-base;@orange-7: color(~`colorPalette('@{orange-6}', 7) `);@orange-8: color(~`colorPalette('@{orange-6}', 8) `);@orange-9: color(~`colorPalette('@{orange-6}', 9) `);@orange-10: color(~`colorPalette('@{orange-6}', 10) `);@yellow-base: #fadb14;@yellow-1: color(~`colorPalette('@{yellow-6}', 1) `);@yellow-2: color(~`colorPalette('@{yellow-6}', 2) `);@yellow-3: color(~`colorPalette('@{yellow-6}', 3) `);@yellow-4: color(~`colorPalette('@{yellow-6}', 4) `);@yellow-5: color(~`colorPalette('@{yellow-6}', 5) `);@yellow-6: @yellow-base;@yellow-7: color(~`colorPalette('@{yellow-6}', 7) `);@yellow-8: color(~`colorPalette('@{yellow-6}', 8) `);@yellow-9: color(~`colorPalette('@{yellow-6}', 9) `);@yellow-10: color(~`colorPalette('@{yellow-6}', 10) `);@volcano-base: #fa541c;@volcano-1: color(~`colorPalette('@{volcano-6}', 1) `);@volcano-2: color(~`colorPalette('@{volcano-6}', 2) `);@volcano-3: color(~`colorPalette('@{volcano-6}', 3) `);@volcano-4: color(~`colorPalette('@{volcano-6}', 4) `);@volcano-5: color(~`colorPalette('@{volcano-6}', 5) `);@volcano-6: @volcano-base;@volcano-7: color(~`colorPalette('@{volcano-6}', 7) `);@volcano-8: color(~`colorPalette('@{volcano-6}', 8) `);@volcano-9: color(~`colorPalette('@{volcano-6}', 9) `);@volcano-10: color(~`colorPalette('@{volcano-6}', 10) `);@geekblue-base: #2f54eb;@geekblue-1: color(~`colorPalette('@{geekblue-6}', 1) `);@geekblue-2: color(~`colorPalette('@{geekblue-6}', 2) `);@geekblue-3: color(~`colorPalette('@{geekblue-6}', 3) `);@geekblue-4: color(~`colorPalette('@{geekblue-6}', 4) `);@geekblue-5: color(~`colorPalette('@{geekblue-6}', 5) `);@geekblue-6: @geekblue-base;@geekblue-7: color(~`colorPalette('@{geekblue-6}', 7) `);@geekblue-8: color(~`colorPalette('@{geekblue-6}', 8) `);@geekblue-9: color(~`colorPalette('@{geekblue-6}', 9) `);@geekblue-10: color(~`colorPalette('@{geekblue-6}', 10) `);@lime-base: #a0d911;@lime-1: color(~`colorPalette('@{lime-6}', 1) `);@lime-2: color(~`colorPalette('@{lime-6}', 2) `);@lime-3: color(~`colorPalette('@{lime-6}', 3) `);@lime-4: color(~`colorPalette('@{lime-6}', 4) `);@lime-5: color(~`colorPalette('@{lime-6}', 5) `);@lime-6: @lime-base;@lime-7: color(~`colorPalette('@{lime-6}', 7) `);@lime-8: color(~`colorPalette('@{lime-6}', 8) `);@lime-9: color(~`colorPalette('@{lime-6}', 9) `);@lime-10: color(~`colorPalette('@{lime-6}', 10) `);@gold-base: #faad14;@gold-1: color(~`colorPalette('@{gold-6}', 1) `);@gold-2: color(~`colorPalette('@{gold-6}', 2) `);@gold-3: color(~`colorPalette('@{gold-6}', 3) `);@gold-4: color(~`colorPalette('@{gold-6}', 4) `);@gold-5: color(~`colorPalette('@{gold-6}', 5) `);@gold-6: @gold-base;@gold-7: color(~`colorPalette('@{gold-6}', 7) `);@gold-8: color(~`colorPalette('@{gold-6}', 8) `);@gold-9: color(~`colorPalette('@{gold-6}', 9) `);@gold-10: color(~`colorPalette('@{gold-6}', 10) `);@preset-colors: pink, magenta, red, volcano, orange, yellow, gold, cyan, lime, green, blue, geekblue,\n  purple;@theme: default;@ant-prefix: ant;@html-selector: html;@primary-color: @blue-6;@info-color: @primary-color;@success-color: @green-6;@processing-color: @blue-6;@error-color: @red-5;@highlight-color: @red-5;@warning-color: @gold-6;@normal-color: #d9d9d9;@white: #fff;@black: #000;@primary-1: color(~`colorPalette('@{primary-color}', 1) `);@primary-2: color(~`colorPalette('@{primary-color}', 2) `);@primary-3: color(~`colorPalette('@{primary-color}', 3) `);@primary-4: color(~`colorPalette('@{primary-color}', 4) `);@primary-5: color(\n  ~`colorPalette('@{primary-color}', 5) `\n);@primary-6: @primary-color;@primary-7: color(~`colorPalette('@{primary-color}', 7) `);@primary-8: color(~`colorPalette('@{primary-color}', 8) `);@primary-9: color(~`colorPalette('@{primary-color}', 9) `);@primary-10: color(~`colorPalette('@{primary-color}', 10) `);@body-background: #fff;@component-background: #fff;@popover-background: @component-background;@popover-customize-border-color: @border-color-split;@font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n  'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',\n  'Noto Color Emoji';@code-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;@text-color: fade(@black, 85%);@text-color-secondary: fade(@black, 45%);@text-color-inverse: @white;@icon-color: inherit;@icon-color-hover: fade(@black, 75%);@heading-color: fade(@black, 85%);@text-color-dark: fade(@white, 85%);@text-color-secondary-dark: fade(@white, 65%);@text-selection-bg: @primary-color;@font-variant-base: tabular-nums;@font-feature-settings-base: tnum;@font-size-base: 14px;@font-size-lg: @font-size-base + 2px;@font-size-sm: 12px;@heading-1-size: ceil(@font-size-base * 2.71);@heading-2-size: ceil(@font-size-base * 2.14);@heading-3-size: ceil(@font-size-base * 1.71);@heading-4-size: ceil(@font-size-base * 1.42);@heading-5-size: ceil(@font-size-base * 1.14);@line-height-base: 1.5715;@border-radius-base: 2px;@border-radius-sm: @border-radius-base;@padding-lg: 24px;@padding-md: 16px;@padding-sm: 12px;@padding-xs: 8px;@padding-xss: 4px;@control-padding-horizontal: @padding-sm;@control-padding-horizontal-sm: @padding-xs;@margin-lg: 24px;@margin-md: 16px;@margin-sm: 12px;@margin-xs: 8px;@margin-xss: 4px;@height-base: 32px;@height-lg: 40px;@height-sm: 24px;@item-active-bg: @primary-1;@item-hover-bg: #f5f5f5;@iconfont-css-prefix: anticon;@link-color: @primary-color;@link-hover-color: color(~`colorPalette('@{link-color}', 5) `);@link-active-color: color(~`colorPalette('@{link-color}', 7) `);@link-decoration: none;@link-hover-decoration: none;@link-focus-decoration: none;@link-focus-outline: 0;@ease-base-out: cubic-bezier(0.7, 0.3, 0.1, 1);@ease-base-in: cubic-bezier(0.9, 0, 0.3, 0.7);@ease-out: cubic-bezier(0.215, 0.61, 0.355, 1);@ease-in: cubic-bezier(0.55, 0.055, 0.675, 0.19);@ease-in-out: cubic-bezier(0.645, 0.045, 0.355, 1);@ease-out-back: cubic-bezier(0.12, 0.4, 0.29, 1.46);@ease-in-back: cubic-bezier(0.71, -0.46, 0.88, 0.6);@ease-in-out-back: cubic-bezier(0.71, -0.46, 0.29, 1.46);@ease-out-circ: cubic-bezier(0.08, 0.82, 0.17, 1);@ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.34);@ease-in-out-circ: cubic-bezier(0.78, 0.14, 0.15, 0.86);@ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);@ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);@ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);@border-color-base: hsv(0, 0, 85%);@border-color-split: hsv(0, 0, 94%);@border-color-inverse: @white;@border-width-base: 1px;@border-style-base: solid;@outline-blur-size: 0;@outline-width: 2px;@outline-color: @primary-color;@outline-fade: 20%;@background-color-light: hsv(0, 0, 98%);@background-color-base: hsv(0, 0, 96%);@disabled-color: fade(#000, 25%);@disabled-bg: @background-color-base;@disabled-color-dark: fade(#fff, 35%);@shadow-color: rgba(0, 0, 0, 0.15);@shadow-color-inverse: @component-background;@box-shadow-base: @shadow-2;@shadow-1-up: 0 -6px 16px -8px rgba(0, 0, 0, 0.08), 0 -9px 28px 0 rgba(0, 0, 0, 0.05),\n  0 -12px 48px 16px rgba(0, 0, 0, 0.03);@shadow-1-down: 0 6px 16px -8px rgba(0, 0, 0, 0.08), 0 9px 28px 0 rgba(0, 0, 0, 0.05),\n  0 12px 48px 16px rgba(0, 0, 0, 0.03);@shadow-1-left: -6px 0 16px -8px rgba(0, 0, 0, 0.08), -9px 0 28px 0 rgba(0, 0, 0, 0.05),\n  -12px 0 48px 16px rgba(0, 0, 0, 0.03);@shadow-1-right: 6px 0 16px -8px rgba(0, 0, 0, 0.08), 9px 0 28px 0 rgba(0, 0, 0, 0.05),\n  12px 0 48px 16px rgba(0, 0, 0, 0.03);@shadow-2: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08),\n  0 9px 28px 8px rgba(0, 0, 0, 0.05);@btn-font-weight: 400;@btn-border-radius-base: @border-radius-base;@btn-border-radius-sm: @border-radius-base;@btn-border-width: @border-width-base;@btn-border-style: @border-style-base;@btn-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);@btn-primary-shadow: 0 2px 0 rgba(0, 0, 0, 0.045);@btn-text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);@btn-primary-color: #fff;@btn-primary-bg: @primary-color;@btn-default-color: @text-color;@btn-default-bg: @component-background;@btn-default-border: @border-color-base;@btn-danger-color: #fff;@btn-danger-bg: @error-color;@btn-danger-border: @error-color;@btn-disable-color: @disabled-color;@btn-disable-bg: @disabled-bg;@btn-disable-border: @border-color-base;@btn-default-ghost-color: @component-background;@btn-default-ghost-bg: transparent;@btn-default-ghost-border: @component-background;@btn-font-size-lg: @font-size-lg;@btn-font-size-sm: @font-size-base;@btn-padding-horizontal-base: @padding-md - 1px;@btn-padding-horizontal-lg: @btn-padding-horizontal-base;@btn-padding-horizontal-sm: @padding-xs - 1px;@btn-height-base: @height-base;@btn-height-lg: @height-lg;@btn-height-sm: @height-sm;@btn-line-height: @line-height-base;@btn-circle-size: @btn-height-base;@btn-circle-size-lg: @btn-height-lg;@btn-circle-size-sm: @btn-height-sm;@btn-square-size: @btn-height-base;@btn-square-size-lg: @btn-height-lg;@btn-square-size-sm: @btn-height-sm;@btn-square-only-icon-size: @font-size-base + 2px;@btn-square-only-icon-size-sm: @font-size-base;@btn-square-only-icon-size-lg: @btn-font-size-lg + 2px;@btn-group-border: @primary-5;@btn-link-hover-bg: transparent;@btn-text-hover-bg: rgba(0, 0, 0, 0.018);@checkbox-size: 16px;@checkbox-color: @primary-color;@checkbox-check-color: #fff;@checkbox-check-bg: @checkbox-check-color;@checkbox-border-width: @border-width-base;@checkbox-group-item-margin-right: 8px;@descriptions-bg: #fafafa;@descriptions-title-margin-bottom: 20px;@descriptions-default-padding: @padding-md @padding-lg;@descriptions-middle-padding: @padding-sm @padding-lg;@descriptions-small-padding: @padding-xs @padding-md;@descriptions-item-padding-bottom: @padding-md;@descriptions-item-trailing-colon: true;@descriptions-item-label-colon-margin-right: 8px;@descriptions-item-label-colon-margin-left: 2px;@descriptions-extra-color: @text-color;@divider-text-padding: 1em;@divider-orientation-margin: 5%;@divider-color: rgba(0, 0, 0, 6%);@dropdown-selected-color: @primary-color;@dropdown-menu-submenu-disabled-bg: @component-background;@empty-font-size: @font-size-base;@radio-size: 16px;@radio-top: 0.2em;@radio-border-width: 1px;@radio-dot-size: @radio-size - 8px;@radio-dot-color: @primary-color;@radio-dot-disabled-color: fade(@black, 20%);@radio-solid-checked-color: @component-background;@radio-button-bg: @btn-default-bg;@radio-button-checked-bg: @btn-default-bg;@radio-button-color: @btn-default-color;@radio-button-hover-color: @primary-5;@radio-button-active-color: @primary-7;@radio-disabled-button-checked-bg: tint(@black, 90%);@radio-disabled-button-checked-color: @disabled-color;@radio-wrapper-margin-right: 8px;@screen-xs: 480px;@screen-xs-min: @screen-xs;@screen-sm: 576px;@screen-sm-min: @screen-sm;@screen-md: 768px;@screen-md-min: @screen-md;@screen-lg: 992px;@screen-lg-min: @screen-lg;@screen-xl: 1200px;@screen-xl-min: @screen-xl;@screen-xxl: 1600px;@screen-xxl-min: @screen-xxl;@screen-xs-max: (@screen-sm-min - 1px);@screen-sm-max: (@screen-md-min - 1px);@screen-md-max: (@screen-lg-min - 1px);@screen-lg-max: (@screen-xl-min - 1px);@screen-xl-max: (@screen-xxl-min - 1px);@grid-columns: 24;@layout-body-background: #f0f2f5;@layout-header-background: #001529;@layout-header-height: 64px;@layout-header-padding: 0 50px;@layout-header-color: @text-color;@layout-footer-padding: 24px 50px;@layout-footer-background: @layout-body-background;@layout-sider-background: @layout-header-background;@layout-trigger-height: 48px;@layout-trigger-background: #002140;@layout-trigger-color: #fff;@layout-zero-trigger-width: 36px;@layout-zero-trigger-height: 42px;@layout-sider-background-light: #fff;@layout-trigger-background-light: #fff;@layout-trigger-color-light: @text-color;@zindex-badge: auto;@zindex-table-fixed: 2;@zindex-affix: 10;@zindex-back-top: 10;@zindex-picker-panel: 10;@zindex-popup-close: 10;@zindex-modal: 1000;@zindex-modal-mask: 1000;@zindex-message: 1010;@zindex-notification: 1010;@zindex-popover: 1030;@zindex-dropdown: 1050;@zindex-picker: 1050;@zindex-popoconfirm: 1060;@zindex-tooltip: 1070;@zindex-image: 1080;@animation-duration-slow: 0.3s;@animation-duration-base: 0.2s;@animation-duration-fast: 0.1s;@collapse-panel-border-radius: @border-radius-base;@dropdown-menu-bg: @component-background;@dropdown-vertical-padding: 5px;@dropdown-edge-child-vertical-padding: 4px;@dropdown-font-size: @font-size-base;@dropdown-line-height: 22px;@label-required-color: @highlight-color;@label-color: @heading-color;@form-warning-input-bg: @input-bg;@form-item-margin-bottom: 24px;@form-item-trailing-colon: true;@form-vertical-label-padding: 0 0 8px;@form-vertical-label-margin: 0;@form-item-label-font-size: @font-size-base;@form-item-label-height: @input-height-base;@form-item-label-colon-margin-right: 8px;@form-item-label-colon-margin-left: 2px;@form-error-input-bg: @input-bg;@input-height-base: @height-base;@input-height-lg: @height-lg;@input-height-sm: @height-sm;@input-padding-horizontal: @control-padding-horizontal - 1px;@input-padding-horizontal-base: @input-padding-horizontal;@input-padding-horizontal-sm: @control-padding-horizontal-sm - 1px;@input-padding-horizontal-lg: @input-padding-horizontal;@input-padding-vertical-base: max(\n  (round(((@input-height-base - @font-size-base * @line-height-base) / 2) * 10) / 10) -\n    @border-width-base,\n  3px\n);@input-padding-vertical-sm: max(\n  (round(((@input-height-sm - @font-size-base * @line-height-base) / 2) * 10) / 10) -\n    @border-width-base,\n  0\n);@input-padding-vertical-lg: (\n    ceil(((@input-height-lg - @font-size-lg * @line-height-base) / 2) * 10) / 10\n  ) - @border-width-base;@input-placeholder-color: hsv(0, 0, 75%);@input-color: @text-color;@input-icon-color: @input-color;@input-border-color: @border-color-base;@input-bg: @component-background;@input-number-hover-border-color: @input-hover-border-color;@input-number-handler-active-bg: #f4f4f4;@input-number-handler-hover-bg: @primary-5;@input-number-handler-bg: @component-background;@input-number-handler-border-color: @border-color-base;@input-addon-bg: @background-color-light;@input-hover-border-color: @primary-5;@input-disabled-bg: @disabled-bg;@input-outline-offset: 0 0;@input-icon-hover-color: fade(@black, 85%);@input-disabled-color: @disabled-color;@mentions-dropdown-bg: @component-background;@mentions-dropdown-menu-item-hover-bg: @mentions-dropdown-bg;@select-border-color: @border-color-base;@select-item-selected-color: @text-color;@select-item-selected-font-weight: 600;@select-dropdown-bg: @component-background;@select-item-selected-bg: @primary-1;@select-item-active-bg: @item-hover-bg;@select-dropdown-vertical-padding: @dropdown-vertical-padding;@select-dropdown-font-size: @dropdown-font-size;@select-dropdown-line-height: @dropdown-line-height;@select-dropdown-height: 32px;@select-background: @component-background;@select-clear-background: @select-background;@select-selection-item-bg: @background-color-base;@select-selection-item-border-color: @border-color-split;@select-single-item-height-lg: 40px;@select-multiple-item-height: @input-height-base - @input-padding-vertical-base * 2;@select-multiple-item-height-lg: 32px;@select-multiple-item-spacing-half: ceil((@input-padding-vertical-base / 2));@select-multiple-disabled-background: @input-disabled-bg;@select-multiple-item-disabled-color: #bfbfbf;@select-multiple-item-disabled-border-color: @select-border-color;@cascader-bg: @component-background;@cascader-item-selected-bg: @primary-1;@cascader-menu-bg: @component-background;@cascader-menu-border-color-split: @border-color-split;@cascader-dropdown-vertical-padding: @dropdown-vertical-padding;@cascader-dropdown-edge-child-vertical-padding: @dropdown-edge-child-vertical-padding;@cascader-dropdown-font-size: @dropdown-font-size;@cascader-dropdown-line-height: @dropdown-line-height;@anchor-bg: @component-background;@anchor-border-color: @border-color-split;@anchor-link-top: 7px;@anchor-link-left: 16px;@anchor-link-padding: @anchor-link-top 0 @anchor-link-top @anchor-link-left;@tooltip-max-width: 250px;@tooltip-color: #fff;@tooltip-bg: rgba(0, 0, 0, 0.75);@tooltip-arrow-width: 5px;@tooltip-distance: @tooltip-arrow-width - 1px + 4px;@tooltip-arrow-color: @tooltip-bg;@popover-bg: @component-background;@popover-color: @text-color;@popover-min-width: 177px;@popover-min-height: 32px;@popover-arrow-width: 6px;@popover-arrow-color: @popover-bg;@popover-arrow-outer-color: @popover-bg;@popover-distance: @popover-arrow-width + 4px;@popover-padding-horizontal: @padding-md;@modal-header-padding-vertical: @padding-md;@modal-header-padding-horizontal: @padding-lg;@modal-body-padding: @padding-lg;@modal-header-bg: @component-background;@modal-header-padding: @modal-header-padding-vertical @modal-header-padding-horizontal;@modal-header-border-width: @border-width-base;@modal-header-border-style: @border-style-base;@modal-header-title-line-height: 22px;@modal-header-title-font-size: @font-size-lg;@modal-header-border-color-split: @border-color-split;@modal-header-close-size: 56px;@modal-content-bg: @component-background;@modal-heading-color: @heading-color;@modal-close-color: @text-color-secondary;@modal-footer-bg: transparent;@modal-footer-border-color-split: @border-color-split;@modal-footer-border-style: @border-style-base;@modal-footer-padding-vertical: 10px;@modal-footer-padding-horizontal: 16px;@modal-footer-border-width: @border-width-base;@modal-mask-bg: fade(@black, 45%);@modal-confirm-body-padding: 32px 32px 24px;@progress-default-color: @processing-color;@progress-remaining-color: @background-color-base;@progress-info-text-color: @progress-text-color;@progress-radius: 100px;@progress-steps-item-bg: #f3f3f3;@progress-text-font-size: 1em;@progress-text-color: @text-color;@progress-circle-text-font-size: 1em;@menu-inline-toplevel-item-height: 40px;@menu-item-height: 40px;@menu-item-group-height: @line-height-base;@menu-collapsed-width: 80px;@menu-bg: @component-background;@menu-popup-bg: @component-background;@menu-item-color: @text-color;@menu-inline-submenu-bg: @background-color-light;@menu-highlight-color: @primary-color;@menu-highlight-danger-color: @error-color;@menu-item-active-bg: @primary-1;@menu-item-active-danger-bg: @red-1;@menu-item-active-border-width: 3px;@menu-item-group-title-color: @text-color-secondary;@menu-item-vertical-margin: 4px;@menu-item-font-size: @font-size-base;@menu-item-boundary-margin: 8px;@menu-item-padding: 0 20px;@menu-horizontal-line-height: 46px;@menu-icon-margin-right: 10px;@menu-icon-size: @menu-item-font-size;@menu-icon-size-lg: @font-size-lg;@menu-item-group-title-font-size: @menu-item-font-size;@menu-dark-color: @text-color-secondary-dark;@menu-dark-danger-color: @error-color;@menu-dark-bg: @layout-header-background;@menu-dark-arrow-color: #fff;@menu-dark-inline-submenu-bg: #000c17;@menu-dark-highlight-color: #fff;@menu-dark-item-active-bg: @primary-color;@menu-dark-item-active-danger-bg: @error-color;@menu-dark-selected-item-icon-color: @white;@menu-dark-selected-item-text-color: @white;@menu-dark-item-hover-bg: transparent;@spin-dot-size-sm: 14px;@spin-dot-size: 20px;@spin-dot-size-lg: 32px;@table-bg: @component-background;@table-header-bg: @background-color-light;@table-header-color: @heading-color;@table-header-sort-bg: @background-color-base;@table-body-sort-bg: #fafafa;@table-row-hover-bg: @background-color-light;@table-selected-row-color: inherit;@table-selected-row-bg: @primary-1;@table-body-selected-sort-bg: @table-selected-row-bg;@table-selected-row-hover-bg: darken(@table-selected-row-bg, 2%);@table-expanded-row-bg: #fbfbfb;@table-padding-vertical: 16px;@table-padding-horizontal: 16px;@table-padding-vertical-md: (@table-padding-vertical * 3 / 4);@table-padding-horizontal-md: (@table-padding-horizontal / 2);@table-padding-vertical-sm: (@table-padding-vertical / 2);@table-padding-horizontal-sm: (@table-padding-horizontal / 2);@table-border-color: @border-color-split;@table-border-radius-base: @border-radius-base;@table-footer-bg: @background-color-light;@table-footer-color: @heading-color;@table-header-bg-sm: @table-header-bg;@table-font-size: @font-size-base;@table-font-size-md: @table-font-size;@table-font-size-sm: @table-font-size;@table-header-sort-active-bg: darken(@table-header-bg, 3%);@table-header-filter-active-bg: darken(@table-header-sort-active-bg, 5%);@table-filter-btns-bg: inherit;@table-filter-dropdown-bg: @component-background;@table-expand-icon-bg: @component-background;@table-selection-column-width: 32px;@table-sticky-scroll-bar-bg: fade(#000, 35%);@table-sticky-scroll-bar-radius: 4px;@tag-default-bg: @background-color-light;@tag-default-color: @text-color;@tag-font-size: @font-size-sm;@tag-line-height: 20px;@picker-bg: @component-background;@picker-basic-cell-hover-color: @item-hover-bg;@picker-basic-cell-active-with-range-color: @primary-1;@picker-basic-cell-hover-with-range-color: lighten(@primary-color, 35%);@picker-basic-cell-disabled-bg: @disabled-bg;@picker-border-color: @border-color-split;@picker-date-hover-range-border-color: lighten(@primary-color, 20%);@picker-date-hover-range-color: @picker-basic-cell-hover-with-range-color;@picker-time-panel-column-width: 56px;@picker-time-panel-column-height: 224px;@picker-time-panel-cell-height: 28px;@picker-panel-cell-height: 24px;@picker-panel-cell-width: 36px;@picker-text-height: 40px;@picker-panel-without-time-cell-height: 66px;@calendar-bg: @component-background;@calendar-input-bg: @input-bg;@calendar-border-color: @border-color-inverse;@calendar-item-active-bg: @item-active-bg;@calendar-full-bg: @calendar-bg;@calendar-full-panel-bg: @calendar-full-bg;@carousel-dot-width: 16px;@carousel-dot-height: 3px;@carousel-dot-active-width: 24px;@badge-height: 20px;@badge-height-sm: 14px;@badge-dot-size: 6px;@badge-font-size: @font-size-sm;@badge-font-size-sm: @font-size-sm;@badge-font-weight: normal;@badge-status-size: 6px;@badge-text-color: @component-background;@badge-color: @highlight-color;@rate-star-color: @yellow-6;@rate-star-bg: @border-color-split;@rate-star-size: 20px;@rate-star-hover-scale: scale(1.1);@card-head-color: @heading-color;@card-head-background: transparent;@card-head-font-size: @font-size-lg;@card-head-font-size-sm: @font-size-base;@card-head-padding: 16px;@card-head-padding-sm: (@card-head-padding / 2);@card-head-height: 48px;@card-head-height-sm: 36px;@card-inner-head-padding: 12px;@card-padding-base: 24px;@card-padding-base-sm: (@card-padding-base / 2);@card-actions-background: @component-background;@card-actions-li-margin: 12px 0;@card-skeleton-bg: #cfd8dc;@card-background: @component-background;@card-shadow: 0 1px 2px -2px rgba(0, 0, 0, 0.16), 0 3px 6px 0 rgba(0, 0, 0, 0.12),\n  0 5px 12px 4px rgba(0, 0, 0, 0.09);@card-radius: @border-radius-base;@card-head-tabs-margin-bottom: -17px;@card-head-extra-color: @text-color;@comment-bg: inherit;@comment-padding-base: @padding-md 0;@comment-nest-indent: 44px;@comment-font-size-base: @font-size-base;@comment-font-size-sm: @font-size-sm;@comment-author-name-color: @text-color-secondary;@comment-author-time-color: #ccc;@comment-action-color: @text-color-secondary;@comment-action-hover-color: #595959;@comment-actions-margin-bottom: inherit;@comment-actions-margin-top: @margin-sm;@comment-content-detail-p-margin-bottom: inherit;@tabs-card-head-background: @background-color-light;@tabs-card-height: 40px;@tabs-card-active-color: @primary-color;@tabs-card-horizontal-padding: (\n    (@tabs-card-height - floor(@font-size-base * @line-height-base)) / 2\n  ) - @border-width-base @padding-md;@tabs-card-horizontal-padding-sm: 6px @padding-md;@tabs-card-horizontal-padding-lg: 7px @padding-md 6px;@tabs-title-font-size: @font-size-base;@tabs-title-font-size-lg: @font-size-lg;@tabs-title-font-size-sm: @font-size-base;@tabs-ink-bar-color: @primary-color;@tabs-bar-margin: 0 0 @margin-md 0;@tabs-horizontal-gutter: 32px;@tabs-horizontal-margin: 0 0 0 @tabs-horizontal-gutter;@tabs-horizontal-margin-rtl: 0 0 0 32px;@tabs-horizontal-padding: @padding-sm 0;@tabs-horizontal-padding-lg: @padding-md 0;@tabs-horizontal-padding-sm: @padding-xs 0;@tabs-vertical-padding: @padding-xs @padding-lg;@tabs-vertical-margin: @margin-md 0 0 0;@tabs-scrolling-size: 32px;@tabs-highlight-color: @primary-color;@tabs-hover-color: @primary-5;@tabs-active-color: @primary-7;@tabs-card-gutter: 2px;@tabs-card-tab-active-border-top: 2px solid transparent;@back-top-color: #fff;@back-top-bg: @text-color-secondary;@back-top-hover-bg: @text-color;@avatar-size-base: 32px;@avatar-size-lg: 40px;@avatar-size-sm: 24px;@avatar-font-size-base: 18px;@avatar-font-size-lg: 24px;@avatar-font-size-sm: 14px;@avatar-bg: #ccc;@avatar-color: #fff;@avatar-border-radius: @border-radius-base;@avatar-group-overlapping: -8px;@avatar-group-space: 3px;@avatar-group-border-color: #fff;@switch-height: 22px;@switch-sm-height: 16px;@switch-min-width: 44px;@switch-sm-min-width: 28px;@switch-disabled-opacity: 0.4;@switch-color: @primary-color;@switch-bg: @component-background;@switch-shadow-color: fade(#00230b, 20%);@switch-padding: 2px;@switch-inner-margin-min: ceil(@switch-height * 0.3);@switch-inner-margin-max: ceil(@switch-height * 1.1);@switch-sm-inner-margin-min: ceil(@switch-sm-height * 0.3);@switch-sm-inner-margin-max: ceil(@switch-sm-height * 1.1);@pagination-item-bg: @component-background;@pagination-item-size: @height-base;@pagination-item-size-sm: 24px;@pagination-font-family: @font-family;@pagination-font-weight-active: 500;@pagination-item-bg-active: @component-background;@pagination-item-link-bg: @component-background;@pagination-item-disabled-color-active: @white;@pagination-item-disabled-bg-active: darken(@disabled-bg, 10%);@pagination-item-input-bg: @component-background;@pagination-mini-options-size-changer-top: 0px;@page-header-padding: @padding-lg;@page-header-padding-vertical: @padding-md;@page-header-padding-breadcrumb: @padding-sm;@page-header-content-padding-vertical: @padding-sm;@page-header-back-color: #000;@page-header-ghost-bg: inherit;@page-header-heading-title: @heading-4-size;@page-header-heading-sub-title: 14px;@page-header-tabs-tab-font-size: 16px;@breadcrumb-base-color: @text-color-secondary;@breadcrumb-last-item-color: @text-color;@breadcrumb-font-size: @font-size-base;@breadcrumb-icon-font-size: @font-size-base;@breadcrumb-link-color: @text-color-secondary;@breadcrumb-link-color-hover: @primary-5;@breadcrumb-separator-color: @text-color-secondary;@breadcrumb-separator-margin: 0 @padding-xs;@slider-margin: 10px 6px 10px;@slider-rail-background-color: @background-color-base;@slider-rail-background-color-hover: #e1e1e1;@slider-track-background-color: @primary-3;@slider-track-background-color-hover: @primary-4;@slider-handle-border-width: 2px;@slider-handle-background-color: @component-background;@slider-handle-color: @primary-3;@slider-handle-color-hover: @primary-4;@slider-handle-color-focus: tint(@primary-color, 20%);@slider-handle-color-focus-shadow: fade(@primary-color, 12%);@slider-handle-color-tooltip-open: @primary-color;@slider-handle-size: 14px;@slider-handle-margin-top: -5px;@slider-handle-shadow: 0;@slider-dot-border-color: @border-color-split;@slider-dot-border-color-active: tint(@primary-color, 50%);@slider-disabled-color: @disabled-color;@slider-disabled-background-color: @component-background;@tree-bg: @component-background;@tree-title-height: 24px;@tree-child-padding: 18px;@tree-directory-selected-color: #fff;@tree-directory-selected-bg: @primary-color;@tree-node-hover-bg: @item-hover-bg;@tree-node-selected-bg: @primary-2;@collapse-header-padding: @padding-sm @padding-md;@collapse-header-padding-extra: 40px;@collapse-header-bg: @background-color-light;@collapse-content-padding: @padding-md;@collapse-content-bg: @component-background;@collapse-header-arrow-left: 16px;@skeleton-color: rgba(190, 190, 190, 0.2);@skeleton-to-color: shade(@skeleton-color, 5%);@skeleton-paragraph-margin-top: 28px;@skeleton-paragraph-li-margin-top: @margin-md;@skeleton-paragraph-li-height: 16px;@skeleton-title-height: 16px;@skeleton-title-paragraph-margin-top: @margin-lg;@transfer-header-height: 40px;@transfer-item-height: @height-base;@transfer-disabled-bg: @disabled-bg;@transfer-list-height: 200px;@transfer-item-hover-bg: @item-hover-bg;@transfer-item-padding-vertical: 6px;@transfer-list-search-icon-top: 12px;@message-notice-content-padding: 10px 16px;@message-notice-content-bg: @component-background;@wave-animation-width: 6px;@alert-success-border-color: ~`colorPalette('@{success-color}', 3) `;@alert-success-bg-color: ~`colorPalette('@{success-color}', 1) `;@alert-success-icon-color: @success-color;@alert-info-border-color: ~`colorPalette('@{info-color}', 3) `;@alert-info-bg-color: ~`colorPalette('@{info-color}', 1) `;@alert-info-icon-color: @info-color;@alert-warning-border-color: ~`colorPalette('@{warning-color}', 3) `;@alert-warning-bg-color: ~`colorPalette('@{warning-color}', 1) `;@alert-warning-icon-color: @warning-color;@alert-error-border-color: ~`colorPalette('@{error-color}', 3) `;@alert-error-bg-color: ~`colorPalette('@{error-color}', 1) `;@alert-error-icon-color: @error-color;@alert-message-color: @heading-color;@alert-text-color: @text-color;@alert-close-color: @text-color-secondary;@alert-close-hover-color: @icon-color-hover;@alert-no-icon-padding-vertical: @padding-xs;@alert-with-description-no-icon-padding-vertical: @padding-md - 1px;@alert-with-description-padding-vertical: @padding-md - 1px;@alert-with-description-padding: @alert-with-description-padding-vertical 15px\n  @alert-with-description-no-icon-padding-vertical @alert-with-description-icon-size;@alert-icon-top: 8px + @font-size-base * (@line-height-base / 2) - (@font-size-base / 2);@alert-with-description-icon-size: 24px;@list-header-background: transparent;@list-footer-background: transparent;@list-empty-text-padding: @padding-md;@list-item-padding: @padding-sm 0;@list-item-padding-sm: @padding-xs @padding-md;@list-item-padding-lg: 16px 24px;@list-item-meta-margin-bottom: @padding-md;@list-item-meta-avatar-margin-right: @padding-md;@list-item-meta-title-margin-bottom: @padding-sm;@list-customize-card-bg: @component-background;@list-item-meta-description-font-size: @font-size-base;@statistic-title-font-size: @font-size-base;@statistic-content-font-size: 24px;@statistic-unit-font-size: 24px;@statistic-font-family: @font-family;@drawer-header-padding: @padding-md @padding-lg;@drawer-body-padding: @padding-lg;@drawer-bg: @component-background;@drawer-footer-padding-vertical: @modal-footer-padding-vertical;@drawer-footer-padding-horizontal: @modal-footer-padding-horizontal;@drawer-header-close-size: 56px;@timeline-width: 2px;@timeline-color: @border-color-split;@timeline-dot-border-width: 2px;@timeline-dot-color: @primary-color;@timeline-dot-bg: @component-background;@timeline-item-padding-bottom: 20px;@typography-title-font-weight: 600;@typography-title-margin-top: 1.2em;@typography-title-margin-bottom: 0.5em;@upload-actions-color: @text-color-secondary;@process-tail-color: @border-color-split;@steps-nav-arrow-color: fade(@black, 25%);@steps-background: @component-background;@steps-icon-size: 32px;@steps-icon-custom-size: @steps-icon-size;@steps-icon-custom-top: 0px;@steps-icon-custom-font-size: 24px;@steps-icon-top: -0.5px;@steps-icon-font-size: @font-size-lg;@steps-icon-margin: 0 8px 0 0;@steps-title-line-height: @height-base;@steps-small-icon-size: 24px;@steps-small-icon-margin: 0 8px 0 0;@steps-dot-size: 8px;@steps-dot-top: 2px;@steps-current-dot-size: 10px;@steps-description-max-width: 140px;@steps-nav-content-max-width: auto;@steps-vertical-icon-width: 16px;@steps-vertical-tail-width: 16px;@steps-vertical-tail-width-sm: 12px;@notification-bg: @component-background;@notification-padding-vertical: 16px;@notification-padding-horizontal: 24px;@result-title-font-size: 24px;@result-subtitle-font-size: @font-size-base;@result-icon-font-size: 72px;@result-extra-margin: 24px 0 0 0;@image-size-base: 48px;@image-font-size-base: 24px;@image-bg: #f5f5f5;@image-color: #fff;@image-mask-font-size: 16px;@image-preview-operation-size: 18px;@image-preview-operation-color: @text-color-dark;@image-preview-operation-disabled-color: fade(@image-preview-operation-color, 25%);","@tooltip-prefix-cls: ~'@{ant-prefix}-tooltip';\n\n// Base class\n.@{tooltip-prefix-cls} {\n  &-rtl {\n    direction: rtl;\n  }\n  // Wrapper for the tooltip content\n  &-inner {\n    .@{tooltip-prefix-cls}-rtl & {\n      text-align: right;\n    }\n  }\n}\n"]}