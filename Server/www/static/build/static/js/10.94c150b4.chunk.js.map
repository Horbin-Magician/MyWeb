{"version":3,"sources":["api/ajax.js","api/index.js","components/loginModal/loginModal.jsx","components/header/header.jsx","pages/tools/favourites/components/favInput.jsx","pages/tools/favourites/components/favMenu.jsx","pages/tools/favourites/components/leftNav/leftNav.jsx","pages/tools/favourites/components/favCard/favCard.jsx","pages/tools/favourites/components/cardContent/cardContent.jsx","pages/tools/favourites/favourites.jsx","pages/tools/tools.jsx"],"names":["ajax","url","data","type","Promise","resolve","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","md5","reqUserList","reqUpdateUser","authority","reqDelUser","reqAuthorityList","reqUpdateAuthority","name","menus","reqDelAuthority","reqFavTypeList","reqDelType","title","reqUpdateType","rank","oldTitle","undefined","reqMoveType","fType","tType","reqFavItemList","favType","reqDelItem","reqUpdateItem","description","oldUrl","LoginModal","onFinish","values","a","status","success","memoryUtils","userdata","storageUtils","saveUser","this","props","showLogin","info","switchShow","visible","onCancel","footer","initialValues","Item","rules","required","min","max","pattern","prefix","UserOutlined","className","placeholder","LockOutlined","style","width","htmlType","Component","SubMenu","Header","state","onUserClick","switchLoginShow","setState","history","location","pathname","split","nowKey","length","mode","selectedKeys","icon","HomeOutlined","to","ToolOutlined","QuestionCircleOutlined","shape","onClick","withRouter","FavInput","input","React","createRef","onExit","editFavType","current","value","focus","ref","onBlur","onPressEnter","blur","FavMenu","onEdit","typeName","onDoubleClick","display","Sider","confirm","LeftNav","theme","menuList","onAddStatus","selectedMenu","dragingMenu","targetMenu","setSelectedMenu","onFavTypeChange","updateMenuList","sMenu","listData","find","item","getRankFromTitle","onDragStart","ev","target","childNodes","innerHTML","onDropOver","preventDefault","onDrop","getMenuNodes","map","targetStyle","targetRank","borderTop","borderBottom","draggable","onDragOver","onAdd","onDel","onOk","onSelect","key","newTitle","addFavType","push","menuNodes","disabled","PlusCircleOutlined","fontSize","DeleteOutlined","Meta","FavouritesCard","update","onRankChange","maxWidth","minWidth","headStyle","minHeight","actions","EditOutlined","defaultValue","onChange","textAlign","hoverable","avatar","size","src","FrownOutlined","window","open","Option","CardContent","showStatus","formRef","getCardNodes","itemList","updateItem","validateFields","afterUpdate","resetFields","typeOptions","setFieldsValue","cardNodes","gutter","PlusOutlined","color","height","forceRender","afterAdd","margin","Content","Favourites","Tools","path","component"],"mappings":"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","file":"static/js/10.94c150b4.chunk.js","sourcesContent":["/*\n能发送异步ajax请求的函数模块\n函数返回promise对象\n */\nimport axios from 'axios'\nimport {message} from 'antd'\n\nexport default function ajax(url, data={}, type='GET'){\n    return new Promise((resolve) => {\n        let promise\n        if(type === 'GET'){ //发送GET请求\n            promise = axios.get(url, {\n                params:data\n            })\n        }else{ //发送POST请求\n            promise = axios.post(url,data)\n        }\n        //获取promise，统一处理error\n        promise.then(response => {\n            resolve(response.data)\n        }).catch(error => {\n            message.error('请求出错：'+error.message)\n        })\n    })\n}","/*\n包含应用中所有api\n */\nimport ajax from './ajax'\nimport md5 from 'md5'\n\n\n//登入\nexport const reqLogin = (username, password) => {\n    password = md5(password)\n    return ajax('/api/login', {username, password}, 'POST')\n}\n//获取用户列表\nexport const reqUserList = () => ajax('/api/user', {'type':'get'}, 'POST')\n//更新用户\nexport const reqUpdateUser = (username, password, authority) => {\n    password = md5(password)\n    return ajax('/api/user', {'type':'update', username, password, authority}, 'POST')\n}\n//删除用户\nexport const reqDelUser = (username) => {\n    ajax('/api/user', {'type':'del', username}, 'POST')\n}\n//获取角色列表\nexport const reqAuthorityList = () => ajax('/api/authority', {'type':'get'}, 'POST')\n//更新角色\nexport const reqUpdateAuthority = (name, menus='') => {\n    ajax('/api/authority', {'type':'update', name, menus}, 'POST')\n}\n//删除角色\nexport const reqDelAuthority = (name) => {\n    ajax('/api/authority', {'type':'del', name}, 'POST')\n}\n\n//获取收藏类\nexport const reqFavTypeList = () => {\n    return ajax('/api/favourites/favtype', {'type':'get'}, 'POST')\n}\n//删除收藏类\nexport const reqDelType = (title) => {\n    return ajax('/api/favourites/favtype', {'type':'del', title}, 'POST')\n}\n//更新收藏类\nexport const reqUpdateType = (title, rank, oldTitle=undefined) => {\n    return ajax('/api/favourites/favtype', {'type':'update', title, rank, oldTitle}, 'POST')\n}\n//移动收藏类\nexport const reqMoveType = (fType, tType) => {\n    return ajax('/api/favourites/favtype', {'type':'move', fType, tType}, 'POST')\n}\n//获取收藏项\nexport const reqFavItemList = (favType=undefined) => ajax('/api/favourites/favitem', {'type':'get', favType}, 'POST')\n//删除收藏项\nexport const reqDelItem = (url) => ajax('/api/favourites/favitem', {'type':'del', url}, 'POST')\n//更新收藏项\nexport const reqUpdateItem = (url, favType, title, rank, description, oldUrl=undefined) => {\n    return ajax('/api/favourites/favitem', {'type':'update', url, favType, title, rank, description, oldUrl}, 'POST')\n}","import {Component} from 'react'\nimport {Form, Input, Button, message, Modal} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\n\nimport {reqLogin} from '../../api'\nimport memoryUtils from '../../utils/memoryUtils'\nimport storageUtils from '../../utils/storageUtils'\n\n/*\n登录页的路由组件\n*/ \nexport default class LoginModal extends Component {\n  onFinish = async (values) => {\n    const {username, password} = values\n    const data = await reqLogin(username, password)\n    if(data && data.status === '0'){//登入成功\n      message.success('登录成功，欢迎回来～')\n      memoryUtils.userdata = data\n      storageUtils.saveUser(data)\n    }else{//账号或密码错误\n      message.error('登录失败，账号或密码错误！')\n    }\n  };\n\n  render() {\n    //判断是否已经登录\n    const userdata = memoryUtils.userdata \n    if(userdata && userdata.status === '0' && this.props.showLogin){\n      message.info('已经登录，请勿重复登录！')\n      this.props.switchShow()\n    }\n    return (\n        <Modal title='用户登录'\n        visible={this.props.showLogin} onCancel={this.props.switchShow}\n        footer={null}>\n            <Form name=\"normal_login\" footer={null}\n            initialValues={{}}\n            onFinish={this.onFinish}>\n                <Form.Item name=\"username\"\n                rules={[\n                    {required: true,message: '请输入用户名'},\n                    {min: 4,message: '用户名最少4位'},\n                    {max: 12,message: '用户名最多12位'},\n                    {pattern: /^[a-zA-z0-9_*!]+$/,message: '用户名必须由英文、数字或英文字符_*!组成'},\n                ]}>\n                  <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\n                </Form.Item>\n                <Form.Item name=\"password\"\n                rules={[\n                    {required: true,message: '请输入密码！'},\n                    {min: 6,message: '密码最少6位'},\n                    {max: 16,message: '密码最多16位'},\n                    {pattern: /^[a-zA-z0-9_*!]+$/,message: '密码必须由英文、数字或英文字符_*!组成'},\n                ]}>\n                  <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"密码\"/>\n                </Form.Item>\n                <Form.Item>\n                  <Button style={{width:'100%'}} type=\"primary\" htmlType=\"submit\">登录</Button>\n                </Form.Item>\n            </Form>\n        </Modal>\n     );\n  }\n}","import React, {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport {HomeOutlined, ToolOutlined, QuestionCircleOutlined, UserOutlined} from '@ant-design/icons'\nimport {Menu, Row, Col, Button} from 'antd';\n\nimport LoginModal from '../loginModal/loginModal'\nimport './header.less'\n/*\n头部组件\n */\nconst {SubMenu,Item} = Menu\nclass Header extends Component{\n    state = {\n        showLogin:false,\n    }\n\n    onUserClick = ()=>{\n        this.switchLoginShow()\n    }\n\n    switchLoginShow = ()=>this.setState({showLogin:!this.state.showLogin,})\n\n    render(){\n        //根据url获取nowKey\n        const url = this.props.history.location.pathname.split('/')\n        const nowKey = url[url.length-1] === '' ? 'home' : url[url.length-1]\n        return(\n            <Row className='header'>\n                <Col>\n                    <Menu className='header-menu' mode=\"horizontal\" selectedKeys={[nowKey]}>\n                        <Item key=\"home\" icon={<HomeOutlined/>}>\n                            <Link to={'/'}>首页</Link>\n                        </Item>\n                        <SubMenu key=\"tools\" title=\"小工具\" icon={<ToolOutlined/>}>\n                            <Item key=\"favorites\">\n                                <Link to={'/tools/favorites'}>收藏夹</Link>\n                            </Item>\n                        </SubMenu>\n                        <Item key=\"about\" icon={<QuestionCircleOutlined/>}>\n                            <Link to={'/about'}>关于</Link>\n                        </Item>\n                    </Menu>\n                </Col>\n                <Col>\n                    <Button type=\"primary\" shape='circle' onClick={this.onUserClick}>\n                        <UserOutlined />\n                    </Button>\n                </Col>\n                <LoginModal switchShow={this.switchLoginShow} showLogin={this.state.showLogin}/>\n            </Row>\n        )\n    }\n}\nexport default withRouter(Header)","import React, {Component} from 'react'\nimport { Input } from 'antd';\n\n/*\n左侧导航的组件\n */\nexport default class FavInput extends Component{\n    input = React.createRef()\n\n    componentDidUpdate(){\n        this.input.current.focus()\n    }\n\n    onExit = ()=>{\n        this.props.editFavType(this.input.current.state.value)\n        this.input.current.setState({value:''})\n    }\n\n    render(){\n        return(\n            <Input ref={this.input} onBlur={this.onExit}\n            onPressEnter={()=>{this.input.current.blur()}}>\n            </Input>\n        )\n    }\n}","import React, {Component} from 'react'\n\nimport FavInput from './favInput'\n\n/*\n左侧导航的组件\n */\nexport default class FavMenu extends Component{\n    state={\n        onEdit:false\n    }\n\n    editFavType = (typeName)=>{\n        this.props.editFavType(this.props.title,typeName)\n        this.setState({onEdit:false})\n    }\n\n    onDoubleClick = ()=>{\n        this.setState({onEdit:true})\n    }\n\n    render(){\n        const {onEdit} = this.state\n        const {title} = this.props\n        return(\n            <div>\n                <div style={{display:onEdit ? 'none' : 'block'}} onDoubleClick={this.onDoubleClick}>\n                    {title}\n                </div>\n                <div style={{display:onEdit ? 'block' : 'none'}}>\n                    <FavInput editFavType={this.editFavType}/>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Layout, Menu, Button, message, Modal} from 'antd'\nimport {\n    PlusCircleOutlined,\n    DeleteOutlined,\n  } from '@ant-design/icons';\n\nimport {reqFavTypeList, reqDelType, reqUpdateType, reqMoveType} from '../../../../../api'\nimport FavInput from '../favInput'\nimport FavMenu from '../favMenu'\n/*\n左侧导航的组件\n */\nconst {Sider} = Layout;\nconst {confirm} = Modal\n\nexport default class LeftNav extends Component{\n    state={\n        theme:'light',\n        menuList:[],\n        onAddStatus: false,\n        selectedMenu:'',\n        dragingMenu:{},\n        targetMenu:{},\n    }\n    //组件加载后更新MenuList\n    componentDidMount(){\n        this.updateMenuList()\n    }\n    //设置被选中菜单\n    setSelectedMenu = (title)=>{\n        this.setState({selectedMenu:title})\n        this.props.onFavTypeChange(title)\n    }\n    //更新菜单列表\n    updateMenuList = ()=>{\n        reqFavTypeList().then(data=>{\n            const sMenu = this.state.selectedMenu\n            const listData = data.data\n            this.setState({menuList:listData})\n            //更新后，若selectedMenu不在menuList中，重置selectedMenu\n            if( (!sMenu || !listData.find(item=>item.title===sMenu)) && listData[0]){\n                this.setSelectedMenu(listData[0].title)\n            }\n        })\n    }\n    //根据Title获得Rank\n    getRankFromTitle = (title)=>{\n        const item = this.state.menuList.find(item=>item.title===title)\n        return item.rank\n    }\n    //开始拖动事件\n    onDragStart = (ev)=>{\n        //获取并设置dragingMenu于state\n        const dragingMenu = ev.target.childNodes[0].childNodes[0].innerHTML\n        this.setState({dragingMenu:dragingMenu})\n    }\n    //拖动中，悬浮事件\n    onDropOver = (ev)=>{\n        ev.preventDefault()\n        //获取并设置targetMenu于state\n        const {dragingMenu} = this.state\n        const targetMenu = ev.target.innerHTML\n        if(dragingMenu !== targetMenu)this.setState({targetMenu:targetMenu})\n    }\n    //拖动结束事件\n    onDrop = (ev)=>{\n        //进行移动排序操作\n        const {targetMenu, dragingMenu} = this.state\n        reqMoveType(dragingMenu, targetMenu).then(data=>{\n            if(data.status === '0')this.updateMenuList()\n        })\n        this.setState({targetMenu:{}, dragingMenu:{}})//初始化相关state\n    }\n    //由menuList获得用于渲染的menu节点\n    getMenuNodes = (menuList)=>{\n        const {targetMenu, dragingMenu} = this.state\n        return menuList.map(item => {\n            let targetStyle = {}\n            //由rank判断并设置targetStyle\n            if(targetMenu===item.title){\n                const targetRank = this.getRankFromTitle(targetMenu)\n                const dragingRank = this.getRankFromTitle(dragingMenu)\n                if(dragingRank>targetRank)targetStyle = {borderTop:\"2px dashed #1890ff\"}\n                else targetStyle = {borderBottom:\"2px dashed #1890ff\"}\n            }\n            return(\n                <Menu.Item key={item.title} style={targetStyle} draggable={true} \n                onDragStart={this.onDragStart} onDragOver={this.onDropOver}\n                onDrop={this.onDrop}\n                >\n                    <FavMenu title={item.title} editFavType={this.editFavType}/>\n                </Menu.Item>\n            )\n        })\n    }\n    //添加点击事件\n    onAdd = ()=>this.setState({onAddStatus:true})\n    //删除点击事件\n    onDel = ()=>{\n        confirm({\n            title: '是否确定删除?',\n            onOk:() => {\n                reqDelType(this.state.selectedMenu).then(data=>{\n                    if(data.status === '0'){\n                        message.success('删除成功！')\n                        this.updateMenuList()\n                    }\n                })\n            },\n        });\n    }\n    //menu选择事件，设置selectedMenu\n    onSelect = (value)=>this.setSelectedMenu(value.key)\n    //编辑菜单项Title\n    editFavType = (oldTitle, newTitle)=>{\n        //判断是否与已有名称相同\n        if(this.state.menuList.find(item=>item.title===newTitle)){\n            message.error('已有相同类别，请更换一个！')\n            return\n        }else if(newTitle){\n            reqUpdateType(newTitle,undefined,oldTitle).then(data=>{\n                if(data.status === '0'){\n                    message.success('修改成功！')\n                    this.updateMenuList()\n                    if(oldTitle === this.state.selectedMenu)this.setState({selectedMenu:newTitle})\n                }\n            })\n        }\n    }\n    //添加菜单项\n    addFavType = (typeName)=>{\n        let {menuList} = this.state\n        if(menuList.find(item=>item.title===typeName)){\n            message.error('已有相同类别，请更换一个！')\n        }else if(typeName){\n            const rank = menuList.length\n            reqUpdateType(typeName, rank).then(data=>{\n                if(data.status === '0'){\n                    message.success('添加成功！')\n                    menuList.push({rank:rank, title:typeName})\n                    this.setState({menuList:menuList})\n                }\n            })\n        }\n        this.setState({onAddStatus:false})\n    }\n\n    render(){\n        const {menuList, onAddStatus, selectedMenu} = this.state\n        const menuNodes = this.getMenuNodes(menuList)\n        return(\n            <Sider width='150' className=\"favourites-sider\" theme={this.state.theme}>\n                <Menu className=\"favourites-sider-menu\" mode=\"inline\"\n                selectedKeys={[selectedMenu]}\n                onSelect={this.onSelect}>\n                    {menuNodes}\n                    <Menu.Item  key='new-menu' disabled style={{display:onAddStatus ? 'block' : 'none'}}>\n                        <FavInput editFavType={this.addFavType}/>\n                    </Menu.Item>\n                </Menu>\n                <div>\n                    <Button type='link' style={{width:\"50%\"}} onClick={this.onAdd}>\n                        <PlusCircleOutlined style={{ fontSize: '20px'}}/>\n                    </Button>\n                    <Button type='link' style={{width:\"50%\"}} onClick={this.onDel}>\n                        <DeleteOutlined style={{ fontSize: '20px'}}/>\n                    </Button>\n                </div>\n            </Sider>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Card, Avatar, Rate, message, Modal} from 'antd';\nimport {EditOutlined, DeleteOutlined, FrownOutlined} from '@ant-design/icons';\n\nimport {reqUpdateItem, reqDelItem} from '../../../../../api'\nimport './favCard.less'\n\n/*\n左侧导航的组件\n */\nconst {Meta} = Card \nconst {confirm} = Modal\nexport default class FavouritesCard extends Component{\n    //编辑点击事件\n    onEdit = ()=>{\n        const {url, title, description, type, rank} = this.props\n        this.props.onEdit(url, title, description, type, rank)\n    }\n    //删除点击事件\n    onDel = ()=>{\n        confirm({\n            title: '是否确定删除?',\n            onOk:() => {\n                reqDelItem(this.props.url).then(data=>{\n                    if(data.status === '0'){\n                        message.success('删除成功！')\n                        this.props.update()\n                    }\n                })\n            },\n        });\n    }\n    //更新Rank事件\n    onRankChange = (value)=>{\n        const {url} = this.props\n        reqUpdateItem(url, undefined, undefined,value)\n    }\n\n    render(){\n        const {url, title, description, rank} = this.props\n        return(\n            <Card style={{maxWidth:'550px', minWidth:'200px'}}\n            headStyle={{minHeight:\"36px\"}} \n            actions={[\n                <EditOutlined key=\"edit\" onClick={this.onEdit}/>,\n                <DeleteOutlined key=\"delete\" onClick={this.onDel}/>,\n            ]}\n            title={<Rate defaultValue={rank} onChange={this.onRankChange} \n                    style={{width:'100%', textAlign:\"center\"}}/>}\n            hoverable={true}\n            >\n                <Meta\n                avatar={\n                    <Avatar size={50} shape=\"square\"\n                    src={url+\"favicon.ico\"} icon={<FrownOutlined />}/>\n                }\n                title={title}\n                description={description}\n                onClick={()=>{window.open(url)}}/>\n            </Card>\n        )\n    }\n}","import React, {Component} from 'react'\nimport { Row,Col,Button,Tooltip,Modal,Form,Input,Rate,message,Select } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons'\n\nimport FavouritesCard from '../favCard/favCard'\nimport {reqUpdateItem, reqFavTypeList} from '../../../../../api'\n\n/*\n左侧导航的组件\n */\nconst { Option } = Select;\n\nexport default class CardContent extends Component{\n    state = {\n        showStatus:0,\n    }\n    formRef = React.createRef()\n    oldUrl = ''\n    //根据itemList获取card节点\n    getCardNodes = (itemList)=>{\n        return itemList.map(item => {\n            return(\n                <Col key={item.url}>\n                    <FavouritesCard url={item.url} title={item.title}\n                    description={item.description} type={item.type} rank={item.rank}\n                    update={this.props.update} onEdit={this.onEdit}/>\n                </Col>\n            )\n        })\n    }\n    //更新item\n    updateItem = ()=>{\n        this.formRef.current.validateFields().then(values => {\n            const {url, title, description, type, rank} = values\n            reqUpdateItem(url, type, title, rank, description, this.oldUrl).then(data=>{\n                if(data.status==='0'){\n                    this.props.update()\n                    this.afterUpdate()\n                    message.success('添加成功！')\n                }\n            })\n        }).catch(info => message.error('请正确填写信息！'));\n    }\n    //更新item后的收尾工作\n    afterUpdate = ()=>{\n        this.setState({showStatus:0})\n        this.formRef.current.resetFields();\n        this.oldUrl = ''\n    }\n    //开始编辑item\n    onEdit = (url, title, description, type, rank)=>{\n        this.oldUrl = url\n        reqFavTypeList().then(data=>{\n            //获取并设置typeOptions\n            let typeOptions = data.data.map(item => {\n                return <Option key={item.title} value={item.title}>{item.title}</Option>\n            })\n            //初始化其他信息\n            this.formRef.current.setFieldsValue({url, title, description, type, rank})\n            this.setState({typeOptions:typeOptions, showStatus:1})\n        })\n    }\n    \n    render(){\n        const {itemList} = this.props\n        const cardNodes = this.getCardNodes(itemList)\n        return(\n            <div>\n                <Row gutter={[16, 24]}>\n                    {cardNodes}\n                    <Tooltip title=\"添加一个\">\n                        <Button icon={<PlusOutlined style={{fontSize:'50px', color:'#C0C0C0'}}/>} \n                        style={{height:'180px', width:'180px'}}\n                        onClick={()=>{this.onEdit('', '', '', this.props.favType, 3)}}/>\n                    </Tooltip>\n                </Row>\n                <Modal forceRender title='收藏项信息' visible={this.state.showStatus===1} \n                onOk={()=>{this.updateItem()}} onCancel={this.afterAdd}>\n                    <Form ref={this.formRef}>\n                        <Form.Item name=\"url\"\n                        rules={[{required: true,message: '请输入URL'},]}>\n                            <Input placeholder=\"请输入URL\" />\n                        </Form.Item>\n                        <Form.Item name=\"title\"\n                        rules={[{required: true,message: '请输入标题'},]}>\n                            <Input placeholder=\"请输入标题\" />\n                        </Form.Item>\n                        <Form.Item name=\"description\"\n                        rules={[{required: true,message: '请输入相关描述'},]}>\n                            <Input placeholder=\"请输入相关描述\" />\n                        </Form.Item>\n                        <Form.Item name=\"type\">\n                            <Select>{this.state.typeOptions}</Select>\n                        </Form.Item>\n                        <Form.Item name=\"rank\">\n                            <Rate style={{margin:'auto 0'}}/>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport { Layout } from 'antd'\n\nimport LeftNav from './components/leftNav/leftNav'\nimport CardContent from './components/cardContent/cardContent'\nimport {reqFavItemList} from '../../../api'\nimport './favourites.less'\n/*\n头部组件\n */\nconst { Content } = Layout;\nexport default class Favourites extends Component{\n    state = {\n        theme:'light',\n        itemList: [],\n    }\n    //同步并设置itemList和favType\n    onFavTypeChange = async(favType)=>{\n        const data = await reqFavItemList(favType)\n        const itemList = data.data\n        this.setState({itemList:itemList, favType:favType})\n    }\n\n    render(){\n        const {favType} = this.state\n        return(\n            <Layout className=\"favourites\">\n                <LeftNav onFavTypeChange={this.onFavTypeChange}/>\n                <Layout>\n                    <Content className=\"favourites-content\">\n                        <CardContent itemList={this.state.itemList}\n                        favType={this.state.favType}\n                        update={()=>this.onFavTypeChange(favType)}/>\n                    </Content>\n                </Layout>\n            </Layout>\n        )\n    }\n}","import {Component} from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\n\nimport Header from '../../components/header/header'\nimport Favourites from './favourites/favourites'\n/*\n工具页的路由组件\n*/ \nexport default class Tools extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route path='/tools/favorites' component={Favourites}></Route>\n          <Redirect to='/'/>\n        </Switch>\n      </div>\n     );\n  }\n}"],"sourceRoot":""}