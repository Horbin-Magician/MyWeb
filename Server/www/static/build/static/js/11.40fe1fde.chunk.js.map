{"version":3,"sources":["api/ajax.js","api/index.js","config/adminMenuConfig.js","pages/admin/components/leftNav/leftNav.jsx","pages/admin/components/header/header.jsx","pages/admin/home/home.jsx","pages/admin/statistics/statistics.jsx","pages/admin/manages/userManage/components/addForm.jsx","pages/admin/manages/userManage/components/setForm.jsx","pages/admin/manages/userManage/userManage.jsx","pages/admin/manages/authorityManage/components/addForm.jsx","pages/admin/manages/authorityManage/components/setForm.jsx","pages/admin/manages/authorityManage/authorityManage.jsx","pages/admin/settings/baseSetting.jsx","pages/admin/admin.jsx"],"names":["ajax","url","data","type","Promise","resolve","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","md5","reqUserList","reqUpdateUser","authority","reqDelUser","reqAuthorityList","reqUpdateAuthority","name","menus","reqDelAuthority","reqFavTypeList","reqDelType","title","reqUpdateType","rank","oldTitle","undefined","reqMoveType","fType","tType","reqFavItemList","favType","reqDelItem","reqUpdateItem","description","oldUrl","adminMenuList","key","icon","HomeOutlined","PieChartOutlined","FormOutlined","children","UserOutlined","KeyOutlined","SettingOutlined","SubMenu","LeftNav","props","getMenuNodes","menuList","newMenus","split","map","item","indexOf","find","cItem","path","openKey","Item","to","state","authorityList","memoryUtils","userdata","setState","menuNodes","className","selectedKeys","this","defaultOpenKeys","mode","theme","Component","Header","getTitle","forEach","cTitle","onClick","logout","Home","Statistics","Option","AddForm","formRef","React","createRef","addUser","current","validateFields","values","resetFields","info","getOptions","value","options","visible","showStatus","onOk","onCancel","ref","rules","required","min","max","pattern","placeholder","initialValue","setUser","setFieldsValue","user","disabled","UserManage","updateUsers","users","updateUser","status","success","delUser","onRow","event","columns","dataIndex","style","lineHeight","bordered","rowKey","dataSource","rowSelection","selectedRowKeys","addRole","TreeNode","setRole","checkedKeys","length","reduce","result","role","onCheck","checkable","defaultExpandAll","nextProps","prevState","nextMenus","updateRoles","roles","updateRole","delRole","BaseSetting","Footer","Sider","Content","Admin","confirm","content","storageUtils","removeUser","history","replace","height","location","pathname","backgroundColor","component","AuthorityManage","textAlign","color"],"mappings":"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","file":"static/js/11.40fe1fde.chunk.js","sourcesContent":["/*\n能发送异步ajax请求的函数模块\n函数返回promise对象\n */\nimport axios from 'axios'\nimport {message} from 'antd'\n\nexport default function ajax(url, data={}, type='GET'){\n    return new Promise((resolve) => {\n        let promise\n        if(type === 'GET'){ //发送GET请求\n            promise = axios.get(url, {\n                params:data\n            })\n        }else{ //发送POST请求\n            promise = axios.post(url,data)\n        }\n        //获取promise，统一处理error\n        promise.then(response => {\n            resolve(response.data)\n        }).catch(error => {\n            message.error('请求出错：'+error.message)\n        })\n    })\n}","/*\n包含应用中所有api\n */\nimport ajax from './ajax'\nimport md5 from 'md5'\n\n\n//登入\nexport const reqLogin = (username, password) => {\n    password = md5(password)\n    return ajax('/api/login', {username, password}, 'POST')\n}\n//获取用户列表\nexport const reqUserList = () => ajax('/api/user', {'type':'get'}, 'POST')\n//更新用户\nexport const reqUpdateUser = (username, password, authority) => {\n    password = md5(password)\n    return ajax('/api/user', {'type':'update', username, password, authority}, 'POST')\n}\n//删除用户\nexport const reqDelUser = (username) => {\n    ajax('/api/user', {'type':'del', username}, 'POST')\n}\n//获取角色列表\nexport const reqAuthorityList = () => ajax('/api/authority', {'type':'get'}, 'POST')\n//更新角色\nexport const reqUpdateAuthority = (name, menus='') => {\n    ajax('/api/authority', {'type':'update', name, menus}, 'POST')\n}\n//删除角色\nexport const reqDelAuthority = (name) => {\n    ajax('/api/authority', {'type':'del', name}, 'POST')\n}\n\n//获取收藏类\nexport const reqFavTypeList = () => {\n    return ajax('/api/favourites/favtype', {'type':'get'}, 'POST')\n}\n//删除收藏类\nexport const reqDelType = (title) => {\n    return ajax('/api/favourites/favtype', {'type':'del', title}, 'POST')\n}\n//更新收藏类\nexport const reqUpdateType = (title, rank, oldTitle=undefined) => {\n    return ajax('/api/favourites/favtype', {'type':'update', title, rank, oldTitle}, 'POST')\n}\n//移动收藏类\nexport const reqMoveType = (fType, tType) => {\n    return ajax('/api/favourites/favtype', {'type':'move', fType, tType}, 'POST')\n}\n//获取收藏项\nexport const reqFavItemList = (favType=undefined) => ajax('/api/favourites/favitem', {'type':'get', favType}, 'POST')\n//删除收藏项\nexport const reqDelItem = (url) => ajax('/api/favourites/favitem', {'type':'del', url}, 'POST')\n//更新收藏项\nexport const reqUpdateItem = (url, favType, title, rank, description, oldUrl=undefined) => {\n    return ajax('/api/favourites/favitem', {'type':'update', url, favType, title, rank, description, oldUrl}, 'POST')\n}","import {\n    HomeOutlined,\n    PieChartOutlined,\n    FormOutlined,\n    UserOutlined,\n    SettingOutlined,\n    KeyOutlined,\n  } from '@ant-design/icons';\n\nconst adminMenuList = [\n    {\n        key:'home',\n        title:'首页',\n        icon:HomeOutlined,\n    },\n    {\n        key:'statistics',\n        title:'统计',\n        icon:PieChartOutlined,\n    },\n    {\n        key:'manages',\n        title:'管理',\n        icon:FormOutlined,\n        children:[{\n            key:'user',\n            title:'用户管理',\n            icon:UserOutlined,\n        },{\n            key:'authority',\n            title:'角色管理',\n            icon:KeyOutlined,\n        }],\n    },\n    {\n        key:'settings',\n        title:'设置',\n        icon:SettingOutlined,\n        children:[{\n            key:'base',\n            title:'基础设置',\n            icon:SettingOutlined,\n        }],\n    },\n]\n\nexport default adminMenuList","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu } from 'antd';\n\nimport menuList from '../../../../config/adminMenuConfig'\nimport './leftNav.less'\nimport {reqAuthorityList} from '../../../../api'\nimport memoryUtils from '../../../../utils/memoryUtils'\n\n/*\n左侧导航的组件\n */\nconst { SubMenu } = Menu;\n\nexport default class LeftNav extends Component{\n    constructor(props){\n        super(props)\n        this.state = {}\n        reqAuthorityList().then(data => {\n            this.authorityList = data.data\n            const authority = this.authorityList.find(item => item.name === memoryUtils.userdata.authority)\n            this.setState({menuNodes : this.getMenuNodes(menuList, authority.menus)})\n        })\n    }\n    /**\n     * 根据menu的数据数组生成对应标签数组\n     */\n    getMenuNodes = (menuList, menus='') =>{\n        let newMenus = menus.split('/')\n        return menuList.map(item => {\n            if(newMenus.indexOf(item.key) !== -1){\n                if(!item.children){\n                    return(\n                        <Menu.Item key={item.key} icon={<item.icon/>}>\n                            <Link to={'/admin/'+item.key}>{item.title}</Link>\n                        </Menu.Item>\n                    )\n                }else{\n                    let cItem = item.children.find(cItem => cItem.key === this.props.path.split('/')[2])\n                    if(cItem)this.openKey = item.key\n                    return(\n                        <SubMenu key={item.key} icon={<item.icon/>} title={item.title}>\n                            {this.getMenuNodes(item.children, menus)}\n                        </SubMenu>\n                    )\n                }\n            }\n            return null\n        })\n    }\n\n    render(){\n        return(\n            <div className='left-nav'>\n                <Link to='/' className='left-nav-header'>\n                    <h1>后台管理</h1>\n                </Link>\n                <Menu selectedKeys={[this.props.path.split('/')[2]]} defaultOpenKeys={[this.openKey]} mode=\"inline\" theme=\"dark\">\n                    {this.state.menuNodes}\n                </Menu>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport { Button} from 'antd'\n\nimport menuList from '../../../../config/adminMenuConfig'\nimport './header.less'\n/*\n头部组件\n */\nexport default class Header extends Component{\n    //获取当前需要显示的Title\n    getTitle = (menuList)=>{\n        const key = this.props.path.split('/')[2]\n        let title\n        menuList.forEach(item => {\n            if(item.key === key){\n                title = item.title\n            }else if(item.children){\n                const cTitle = this.getTitle(item.children)\n                if(cTitle)title = cTitle\n            }\n        })\n        return title\n    }\n\n    render(){\n        const title = this.getTitle(menuList)\n        return(\n            <div className='header'>\n                <div className='header-title'>{title}</div>\n                <div className='header-user'>\n                    <span>欢迎，{this.props.username}</span>\n                    <Button type=\"link\" onClick={this.props.logout}>退出</Button>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\n\nimport './home.less'\n/*\n管理-首页\n */\nexport default class Home extends Component{\n    render(){\n        return(\n            <div className='home'>\n                欢迎使用后台管理系统\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\n\n/*\n管理-统计\n */\nexport default class Statistics extends Component{\n    render(){\n        return(\n            <div>\n                Statistics\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Form, Input, Select,message} from 'antd'\n\nimport {reqAuthorityList} from '../../../../../api'\n/*\n管理-统计\n */\nconst { Option } = Select;\n\nexport default class AddForm extends Component{\n    constructor(props){\n        super(props)\n        this.state = {}\n        reqAuthorityList().then(data => {\n            this.setState({options : this.getOptions(data.data)})\n        })\n    }\n\n    formRef = React.createRef()\n\n    addUser = ()=>{\n        this.formRef.current.validateFields().then(values => {\n            this.formRef.current.resetFields();\n            this.props.addUser(values.username, values.password, values.authority)\n        })\n        .catch(info => message.error('请正确填写信息！'));\n    }\n\n    getOptions = (authorityList) =>{\n        return authorityList.map(item => {\n            return <Option key={item.name} value={item.name}>{item.name}</Option>\n        })\n    }\n\n    render(){\n        return(\n            <Modal title='添加用户' visible={this.props.showStatus===1} \n                onOk={this.addUser} onCancel={()=>{this.props.addUser()}}\n            >\n                <Form ref={this.formRef}>\n                    <Form.Item name=\"username\"\n                    rules={[\n                        {required: true,message: '请输入用户名'},\n                        {min: 4,message: '用户名最少4位'},\n                        {max: 12,message: '用户名最多12位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '用户名必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input placeholder=\"用户名\" />\n                    </Form.Item>\n                    <Form.Item name=\"password\"\n                    rules={[\n                        {required: true,message: '请输入密码！'},\n                        {min: 6,message: '密码最少6位'},\n                        {max: 16,message: '密码最多16位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '密码必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input type=\"password\" placeholder=\"密码\"/>\n                    </Form.Item>\n                    <Form.Item name=\"authority\" initialValue='root'>\n                        <Select>{this.state.options}</Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Form, Input, Select,message} from 'antd'\n\nimport {reqAuthorityList} from '../../../../../api'\n/*\n管理-统计\n */\nconst { Option } = Select;\n\nexport default class AddForm extends Component{\n    constructor(props){\n        super(props)\n        this.state = {}\n        reqAuthorityList().then(data => {\n            this.setState({options : this.getOptions(data.data)})\n        })\n    }\n\n    formRef = React.createRef()\n\n    setUser = ()=>{\n        this.formRef.current.validateFields().then(values => {\n            this.formRef.current.resetFields()\n            if(!values.password)values.password = ''\n            this.props.setUser(values.username, values.password, values.authority)\n        })\n        .catch(info => message.error('请正确填写信息！' + info));\n    }\n\n    getOptions = (authorityList) =>{\n        return authorityList.map(item => {\n            return <Option key={item.name} value={item.name}>{item.name}</Option>\n        })\n    }\n\n    componentDidUpdate(){\n        if(this.formRef.current){\n            this.formRef.current.resetFields()\n            this.formRef.current.setFieldsValue({username:this.props.user.username})\n            this.formRef.current.setFieldsValue({authority:this.props.user.authority})\n        }\n    }\n\n    render(){\n        return(\n            <Modal title='添加用户' visible={this.props.showStatus===2} \n                onOk={this.setUser} onCancel={()=>{this.props.setUser()}}\n            >\n                <Form ref={this.formRef}>\n                    <Form.Item name=\"username\">\n                        <Input disabled={true}/>\n                    </Form.Item>\n                    <Form.Item name=\"password\"\n                    rules={[\n                        {min: 6,message: '密码最少6位'},\n                        {max: 16,message: '密码最多16位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '密码必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input type=\"password\" placeholder=\"密码默认不修改\"/>\n                    </Form.Item>\n                    <Form.Item name=\"authority\">\n                        <Select>{this.state.options}</Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Card, Button, Table, message} from 'antd'\n\nimport AddForm from './components/addForm'\nimport SetForm from './components/setForm'\nimport {reqUserList, reqDelUser, reqUpdateUser} from '../../../../api/index'\n\n\n/*\n管理-统计\n */\nexport default class UserManage extends Component{\n    state = {\n        user: {}, //选中的role\n        showStatus:0, //显示状态，0不显示modal,1显示添加modal，2显示设置modal\n    }\n\n    componentDidMount(){\n        this.updateUsers()\n    }\n\n    updateUsers = () => reqUserList().then(data => this.setState({users:data.data}))\n\n    updateUser = (username, password, authority) =>{\n        if(username){\n            reqUpdateUser(username, password, authority).then(data =>{\n                if(data.status === '0'){\n                    message.success('更新用户成功！')\n                    this.updateUsers()\n                }\n                else message.error('更新用户失败！')\n            })\n            this.setState({user:{}})\n        }\n        this.setState({showStatus:0})\n    }\n\n    delUser = () => {\n        reqDelUser(this.state.user.username).then(data =>{\n            if(data.status === '0'){\n                message.success('删除用户成功！')\n                this.updateUsers()\n            }\n            else message.error('删除用户失败！')\n        })\n        this.setState({user:{}})\n    }\n\n    onRow = (user) => {\n        return{\n            onClick: event =>this.setState({user})\n        }\n    }\n\n    columns = [{title:'用户名',dataIndex:'username'}, {title:'密码',dataIndex:'password'}, {title:'所属角色',dataIndex:'authority'},]\n\n    render(){\n        const {users, user, showStatus} = this.state\n        const title=(\n            <span  style={{lineHeight:\"48px\"}}>\n                <Button type='primary' onClick={()=>{this.setState({showStatus:1})}}>\n                    创建用户\n                </Button> &nbsp;\n                <Button type='primary' onClick={this.delUser} disabled={!user.username}>\n                    删除用户\n                </Button> &nbsp;\n                <Button type='primary' onClick={()=>{this.setState({showStatus:2})}} disabled={!user.username}>\n                    编辑角色\n                </Button>\n            </span>\n        )\n        return(\n            <Card title={title}>\n                <Table bordered\n                    rowKey='username'\n                    dataSource={users}\n                    columns={this.columns}\n                    rowSelection={{type: 'radio', selectedRowKeys: [user.username]}}\n                    onRow={this.onRow}\n                />\n                <AddForm showStatus={showStatus} addUser={(username, password, authority)=>{this.updateUser(username, password, authority)}}/>\n                <SetForm showStatus={showStatus} user={this.state.user} setUser={(username, password, authority)=>{this.updateUser(username, password, authority)}}/>\n            </Card>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Form, Input, message} from 'antd'\n/*\n管理-统计\n */\nexport default class AddForm extends Component{\n    formRef = React.createRef()\n\n    addRole = ()=>{\n        this.formRef.current.validateFields()\n        .then(values => {\n            this.formRef.current.resetFields();\n            this.props.addRole(values.name)\n        })\n        .catch(info => {\n          message.error('请正确填写信息！')\n        });\n    }\n\n\n    render(){\n        return(\n            <Modal title='添加角色' visible={this.props.showStatus===1} \n                onOk={this.addRole} onCancel={()=>{this.props.addRole()}}\n            >\n                <Form ref={this.formRef}>\n                    <Form.Item name=\"name\"\n                        rules={[\n                            {required: true,message: '请输入角色名'},\n                            {max: 12,message: '角色名最多12位'},\n                    ]}>\n                        <Input placeholder=\"角色名\" />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Tree} from 'antd'\n\nimport menuList from '../../../../../config/adminMenuConfig'\n/*\n管理-统计\n */\nconst {TreeNode} = Tree\n\nexport default class AddForm extends Component{\n    constructor(props){\n        super(props)\n        this.state = {checkedKeys: {}}\n        this.menuNodes = this.getMenuNodes(menuList)\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if(nextProps.showStatus === 0){\n            const nextMenus = nextProps.role.menus ? nextProps.role.menus.split('/') : {}\n            if(nextMenus !== prevState.checkedKeys)return{checkedKeys:nextMenus}\n        }\n        return null\n    }\n\n    setRole = ()=>{\n        let newMenus = ''\n        if(this.state.checkedKeys.length)newMenus = this.state.checkedKeys.reduce(\n            (result, item)=>{\n                if(result === 'all')return ''\n                if(item === 'all')return result\n                if(result === '')return item\n                return(result + '/' + item)\n        })\n        this.props.setRole(this.props.role.name, newMenus)\n    }\n\n    getMenuNodes = (menuList) =>{\n        return menuList.map(item => {\n            if(!item.children){\n                return(<TreeNode title={item.title} key={item.key}></TreeNode>)\n            }else{\n                return(\n                    <TreeNode key={item.key} title={item.title}>\n                        {this.getMenuNodes(item.children)}\n                    </TreeNode>\n                )\n            }\n        })\n    }\n\n    onCheck = checkedKeys => {\n        this.setState({checkedKeys})\n    }\n\n    render(){\n        return(\n            <Modal title='设置角色权限' visible={this.props.showStatus===2} \n            onOk={this.setRole} onCancel={()=>{this.props.setRole()}}>\n                <Tree checkable defaultExpandAll={true} \n                checkedKeys={this.state.checkedKeys}\n                onCheck={this.onCheck}>\n                    <TreeNode title='平台权限' key='all'>\n                        {this.menuNodes}\n                    </TreeNode>\n                </Tree>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Card, Button, Table, message} from 'antd'\n\nimport AddForm from './components/addForm'\nimport SetForm from './components/setForm'\nimport {reqAuthorityList, reqUpdateAuthority, reqDelAuthority} from '../../../../api'\n\n/*\n管理-统计\n */\nexport default class UserManage extends Component{\n    state = {\n        role: {}, //选中的role\n        showStatus:0, //显示状态，0不显示modal,1显示添加modal，2显示设置modal\n    }\n\n    componentDidMount(){\n        this.updateRoles()\n    }\n\n    updateRoles = () => {\n        reqAuthorityList().then(data =>{\n            this.setState({roles:data.data})\n        })\n    }\n\n    updateRole = (name, menus='') =>{\n        if(name){\n            reqUpdateAuthority(name, menus).then(data =>{\n                if(data.status === '0'){\n                    message.success('更新角色成功！')\n                    this.updateRoles()\n                }\n                else message.error('更新角色失败！')\n            })\n            this.setState({role:{}})\n        }\n        this.setState({showStatus:0})\n    }\n\n    delRole = () =>{\n        reqDelAuthority(this.state.role.name).then(data =>{\n            if(data.status === '0'){\n                message.success('删除角色成功！')\n                this.updateRoles()\n            }\n            else message.error('删除角色失败！')\n        })\n        this.setState({role:{}})\n    }\n\n    onRow = (role) => {\n        return{\n            onClick: event =>{\n                this.setState({role})\n            }\n        }\n    }\n\n    columns = [{title:'角色名称',dataIndex:'name'},{title:'拥有权限',dataIndex:'menus'},]\n    \n    render(){\n        const {roles, role, showStatus} = this.state\n        const title=(\n            <span style={{lineHeight:\"48px\"}}>\n                <Button type='primary' onClick={()=>{this.setState({showStatus:1})}}>\n                    创建角色\n                </Button> &nbsp;\n                <Button type='primary' onClick={this.delRole} disabled={!role.name}>\n                    删除角色\n                </Button> &nbsp;\n                <Button type='primary' onClick={()=>{this.setState({showStatus:2})}} disabled={!role.name}>\n                    设置角色权限\n                </Button>\n            </span>\n        )\n        return(\n            <Card title={title}>\n                <Table bordered\n                    rowKey='name'\n                    dataSource={roles}\n                    columns={this.columns}\n                    rowSelection={{type: 'radio', selectedRowKeys: [role.name]}}\n                    onRow={this.onRow}\n                />\n                <AddForm showStatus={showStatus} addRole={(name)=>{this.updateRole(name)}}/>\n                <SetForm showStatus={showStatus} role={this.state.role} setRole={(name, menus)=>{this.updateRole(name, menus)}}/>\n            </Card>\n        )\n    }\n}","import React, {Component} from 'react'\n\n/*\n管理-设置\n */\nexport default class BaseSetting extends Component{\n    render(){\n        return(\n            <div>\n                BaseSetting\n            </div>\n        )\n    }\n}","import {Component} from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { message, Layout, Modal} from 'antd';\n\nimport memoryUtils from '../../utils/memoryUtils';\nimport storageUtils from '../../utils/storageUtils'\nimport LeftNav from './components/leftNav/leftNav'\nimport Header from './components/header/header'\nimport Home from './home/home'\nimport Statistics from './statistics/statistics'\nimport UserManage from './manages/userManage/userManage'\nimport AuthorityManage from './manages/authorityManage/authorityManage'\nimport BaseSetting from './settings/baseSetting'\n\n/*\n后台管理页的路由组件\n*/ \nconst {Footer, Sider, Content} = Layout\n\nexport default class Admin extends Component {\n  //退出登录\n  logout = () => {\n    //显示确认框\n    Modal.confirm({\n        title: '是否确认退出？',\n        content: '退出后再次进入需要重新登录',\n        onOk: () => {\n            //删除保存的数据\n            storageUtils.removeUser()\n            memoryUtils.userdata = {}\n            //跳转到login\n            this.props.history.replace('/login')\n        },\n    })\n  }\n  \n  render() {\n    const userdata = memoryUtils.userdata \n    if(!userdata || userdata.status!=='0'){\n      message.error(\"请先的登录！\")\n      return <Redirect to='/login'/>\n    }\n    return ( \n      <Layout style={{height:\"100%\"}}>\n        <Sider><LeftNav path={this.props.location.pathname}/></Sider>\n        <Layout>\n          <Header path={this.props.location.pathname} logout={this.logout} username={userdata.username}/>\n          <Content style={{backgroundColor:'#fff'}}>\n            <Switch>\n              <Route path='/admin/home' component={Home} />\n              <Route path='/admin/statistics' component={Statistics} />\n              <Route path='/admin/user' component={UserManage} />\n              <Route path='/admin/authority' component={AuthorityManage} />\n              <Route path='/admin/base' component={BaseSetting} />\n              <Redirect to='/admin/home' />\n            </Switch>\n          </Content>\n          <Footer style={{textAlign: 'center', color:'#ccc'}}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\n        </Layout>\n      </Layout>\n     );\n  }\n}"],"sourceRoot":""}