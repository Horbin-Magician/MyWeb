{"version":3,"sources":["config/adminMenuConfig.js","pages/admin/components/leftNav/leftNav.jsx","pages/admin/home/home.jsx","pages/admin/statistics/statistics.jsx","pages/admin/manages/userManage/components/addForm.jsx","pages/admin/manages/userManage/components/setForm.jsx","pages/admin/manages/userManage/userManage.jsx","pages/admin/manages/authorityManage/components/addForm.jsx","pages/admin/manages/authorityManage/components/setForm.jsx","pages/admin/manages/authorityManage/authorityManage.jsx","pages/admin/settings/baseSetting.jsx","pages/admin/admin.jsx"],"names":["adminMenuList","key","title","icon","HomeOutlined","FormOutlined","children","UserOutlined","KeyOutlined","SettingOutlined","SubMenu","Sider","LeftNav","props","getMenuNodes","menuList","menus","newMenus","split","map","item","indexOf","find","cItem","path","openKey","Item","to","state","reqAuthorityList","then","data","authorityList","authority","name","memoryUtils","userdata","setState","menuNodes","className","selectedKeys","this","defaultOpenKeys","mode","theme","Component","Home","Statistics","Option","AddForm","formRef","React","createRef","addUser","current","validateFields","values","resetFields","username","password","catch","info","message","error","getOptions","value","options","visible","showStatus","onOk","onCancel","ref","rules","required","min","max","pattern","placeholder","type","initialValue","setUser","setFieldsValue","user","disabled","UserManage","updateUsers","reqUserList","users","updateUser","reqUpdateUser","status","success","delUser","reqDelUser","onRow","onClick","event","columns","dataIndex","style","lineHeight","bordered","rowKey","dataSource","rowSelection","selectedRowKeys","addRole","TreeNode","setRole","checkedKeys","length","reduce","result","role","onCheck","checkable","defaultExpandAll","nextProps","prevState","nextMenus","updateRoles","roles","updateRole","reqUpdateAuthority","delRole","reqDelAuthority","BaseSetting","Content","Admin","checkLogin","height","document","body","clientHeight","location","pathname","backgroundColor","component","AuthorityManage"],"mappings":"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","file":"static/js/10.5c8a9fad.chunk.js","sourcesContent":["import {\n    HomeOutlined,\n    FormOutlined,\n    UserOutlined,\n    SettingOutlined,\n    KeyOutlined,\n  } from '@ant-design/icons';\n\nconst adminMenuList = [\n    {\n        key:'home',\n        title:'首页',\n        icon:HomeOutlined,\n    },\n    {\n        key:'manages',\n        title:'管理',\n        icon:FormOutlined,\n        children:[{\n            key:'user',\n            title:'用户管理',\n            icon:UserOutlined,\n        },{\n            key:'authority',\n            title:'角色管理',\n            icon:KeyOutlined,\n        }],\n    },\n    {\n        key:'settings',\n        title:'设置',\n        icon:SettingOutlined,\n        children:[{\n            key:'base',\n            title:'基础设置',\n            icon:SettingOutlined,\n        }],\n    },\n]\n\nexport default adminMenuList","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Layout } from 'antd';\n\nimport menuList from '../../../../config/adminMenuConfig'\nimport './leftNav.less'\nimport {reqAuthorityList} from '../../../../api'\nimport memoryUtils from '../../../../utils/memoryUtils'\n/*\n左侧导航的组件\n */\nconst { SubMenu } = Menu;\nconst {Sider} = Layout\n\nexport default class LeftNav extends Component{\n    constructor(props){\n        super(props)\n        this.state = {}\n        reqAuthorityList().then(data => {\n            this.authorityList = data.data\n            const authority = this.authorityList.find(item => item.name === memoryUtils.userdata.authority)\n            if(authority){\n              this.setState({menuNodes : this.getMenuNodes(menuList, authority.menus)})\n            }else{\n              this.setState({menuNodes : this.getMenuNodes(menuList, '')})\n            }\n        })\n    }\n    /**\n     * 根据menu的数据数组生成对应标签数组\n     */\n    getMenuNodes = (menuList, menus='') =>{\n        let newMenus = menus.split('/')\n        return menuList.map(item => {\n            if(newMenus.indexOf(item.key) !== -1){\n                if(!item.children){\n                    return(\n                        <Menu.Item key={item.key} icon={<item.icon/>}>\n                            <Link to={'/admin/'+item.key}>{item.title}</Link>\n                        </Menu.Item>\n                    )\n                }else{\n                    let cItem = item.children.find(cItem => cItem.key === this.props.path.split('/')[2])\n                    if(cItem)this.openKey = item.key\n                    return(\n                        <SubMenu key={item.key} icon={<item.icon/>} title={item.title}>\n                            {this.getMenuNodes(item.children, menus)}\n                        </SubMenu>\n                    )\n                }\n            }\n            return null\n        })\n    }\n\n    render(){\n        return(\n            <Sider className='left-nav'>\n                <Link to='/' className='left-nav-header'>\n                    <h1>后台管理</h1>\n                </Link>\n                <Menu selectedKeys={[this.props.path.split('/')[2]]} defaultOpenKeys={[this.openKey]} mode=\"inline\" theme=\"dark\">\n                    {this.state.menuNodes}\n                </Menu>\n            </Sider>\n        )\n    }\n}","import React, {Component} from 'react'\n\nimport './home.less'\n/*\n管理-首页\n */\nexport default class Home extends Component{\n    render(){\n        return(\n            <div className='home'>\n                欢迎使用后台管理系统\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\n\n/*\n管理-统计\n */\nexport default class Statistics extends Component{\n    render(){\n        return(\n            <div>\n                Statistics\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Form, Input, Select,message} from 'antd'\n\nimport {reqAuthorityList} from '../../../../../api'\n/*\n管理-统计\n */\nconst { Option } = Select;\n\nexport default class AddForm extends Component{\n    constructor(props){\n        super(props)\n        this.state = {}\n        reqAuthorityList().then(data => {\n            this.setState({options : this.getOptions(data.data)})\n        })\n    }\n\n    formRef = React.createRef()\n\n    addUser = ()=>{\n        this.formRef.current.validateFields().then(values => {\n            this.formRef.current.resetFields();\n            this.props.addUser(values.username, values.password, values.authority)\n        })\n        .catch(info => message.error('请正确填写信息！'));\n    }\n\n    getOptions = (authorityList) =>{\n        return authorityList.map(item => {\n            return <Option key={item.name} value={item.name}>{item.name}</Option>\n        })\n    }\n\n    render(){\n        return(\n            <Modal title='添加用户' visible={this.props.showStatus===1} \n                onOk={this.addUser} onCancel={()=>{this.props.addUser()}}\n            >\n                <Form ref={this.formRef}>\n                    <Form.Item name=\"username\"\n                    rules={[\n                        {required: true,message: '请输入用户名'},\n                        {min: 4,message: '用户名最少4位'},\n                        {max: 12,message: '用户名最多12位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '用户名必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input placeholder=\"用户名\" />\n                    </Form.Item>\n                    <Form.Item name=\"password\"\n                    rules={[\n                        {required: true,message: '请输入密码！'},\n                        {min: 6,message: '密码最少6位'},\n                        {max: 16,message: '密码最多16位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '密码必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input type=\"password\" placeholder=\"密码\"/>\n                    </Form.Item>\n                    <Form.Item name=\"authority\" initialValue='root'>\n                        <Select>{this.state.options}</Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Form, Input, Select,message} from 'antd'\n\nimport {reqAuthorityList} from '../../../../../api'\n/*\n管理-统计\n */\nconst { Option } = Select;\n\nexport default class AddForm extends Component{\n    constructor(props){\n        super(props)\n        this.state = {}\n        reqAuthorityList().then(data => {\n            this.setState({options : this.getOptions(data.data)})\n        })\n    }\n\n    formRef = React.createRef()\n\n    setUser = ()=>{\n        this.formRef.current.validateFields().then(values => {\n            this.formRef.current.resetFields()\n            if(!values.password)values.password = ''\n            this.props.setUser(values.username, values.password, values.authority)\n        })\n        .catch(info => message.error('请正确填写信息！' + info));\n    }\n\n    getOptions = (authorityList) =>{\n        return authorityList.map(item => {\n            return <Option key={item.name} value={item.name}>{item.name}</Option>\n        })\n    }\n\n    componentDidUpdate(){\n        if(this.formRef.current){\n            this.formRef.current.resetFields()\n            this.formRef.current.setFieldsValue({username:this.props.user.username})\n            this.formRef.current.setFieldsValue({authority:this.props.user.authority})\n        }\n    }\n\n    render(){\n        return(\n            <Modal title='添加用户' visible={this.props.showStatus===2} \n                onOk={this.setUser} onCancel={()=>{this.props.setUser()}}\n            >\n                <Form ref={this.formRef}>\n                    <Form.Item name=\"username\">\n                        <Input disabled={true}/>\n                    </Form.Item>\n                    <Form.Item name=\"password\"\n                    rules={[\n                        {min: 6,message: '密码最少6位'},\n                        {max: 16,message: '密码最多16位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '密码必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input type=\"password\" placeholder=\"密码默认不修改\"/>\n                    </Form.Item>\n                    <Form.Item name=\"authority\">\n                        <Select>{this.state.options}</Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Card, Button, Table, message} from 'antd'\n\nimport AddForm from './components/addForm'\nimport SetForm from './components/setForm'\nimport {reqUserList, reqDelUser, reqUpdateUser} from '../../../../api/index'\n\n\n/*\n管理-统计\n */\nexport default class UserManage extends Component{\n    state = {\n        user: {}, //选中的role\n        showStatus:0, //显示状态，0不显示modal,1显示添加modal，2显示设置modal\n    }\n\n    componentDidMount(){\n        this.updateUsers()\n    }\n\n    updateUsers = () => reqUserList().then(data => this.setState({users:data.data}))\n\n    updateUser = (username, password, authority) =>{\n        if(username){\n            reqUpdateUser(username, password, authority).then(data =>{\n                if(data.status === '0'){\n                    message.success('更新用户成功！')\n                    this.updateUsers()\n                }\n                else message.error('更新用户失败！')\n            })\n            this.setState({user:{}})\n        }\n        this.setState({showStatus:0})\n    }\n\n    delUser = () => {\n        reqDelUser(this.state.user.username).then(data =>{\n            if(data.status === '0'){\n                message.success('删除用户成功！')\n                this.updateUsers()\n            }\n            else message.error('删除用户失败！')\n        })\n        this.setState({user:{}})\n    }\n\n    onRow = (user) => {\n        return{\n            onClick: event =>this.setState({user})\n        }\n    }\n\n    columns = [{title:'用户名',dataIndex:'username'}, {title:'密码',dataIndex:'password'}, {title:'所属角色',dataIndex:'authority'},]\n\n    render(){\n        const {users, user, showStatus} = this.state\n        const title=(\n            <span  style={{lineHeight:\"48px\"}}>\n                <Button type='primary' onClick={()=>{this.setState({showStatus:1})}}>\n                    创建用户\n                </Button> &nbsp;\n                <Button type='primary' onClick={this.delUser} disabled={!user.username}>\n                    删除用户\n                </Button> &nbsp;\n                <Button type='primary' onClick={()=>{this.setState({showStatus:2})}} disabled={!user.username}>\n                    编辑角色\n                </Button>\n            </span>\n        )\n        return(\n            <Card title={title}>\n                <Table bordered\n                    rowKey='username'\n                    dataSource={users}\n                    columns={this.columns}\n                    rowSelection={{type: 'radio', selectedRowKeys: [user.username]}}\n                    onRow={this.onRow}\n                />\n                <AddForm showStatus={showStatus} addUser={(username, password, authority)=>{this.updateUser(username, password, authority)}}/>\n                <SetForm showStatus={showStatus} user={this.state.user} setUser={(username, password, authority)=>{this.updateUser(username, password, authority)}}/>\n            </Card>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Form, Input, message} from 'antd'\n/*\n管理-统计\n */\nexport default class AddForm extends Component{\n    formRef = React.createRef()\n\n    addRole = ()=>{\n        this.formRef.current.validateFields()\n        .then(values => {\n            this.formRef.current.resetFields();\n            this.props.addRole(values.name)\n        })\n        .catch(info => {\n          message.error('请正确填写信息！')\n        });\n    }\n\n\n    render(){\n        return(\n            <Modal title='添加角色' visible={this.props.showStatus===1} \n                onOk={this.addRole} onCancel={()=>{this.props.addRole()}}\n            >\n                <Form ref={this.formRef}>\n                    <Form.Item name=\"name\"\n                        rules={[\n                            {required: true,message: '请输入角色名'},\n                            {max: 12,message: '角色名最多12位'},\n                    ]}>\n                        <Input placeholder=\"角色名\" />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Tree} from 'antd'\n\nimport menuList from '../../../../../config/adminMenuConfig'\n/*\n管理-统计\n */\nconst {TreeNode} = Tree\n\nexport default class AddForm extends Component{\n    constructor(props){\n        super(props)\n        this.state = {checkedKeys: {}}\n        this.menuNodes = this.getMenuNodes(menuList)\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if(nextProps.showStatus === 0){\n            const nextMenus = nextProps.role.menus ? nextProps.role.menus.split('/') : {}\n            if(nextMenus !== prevState.checkedKeys)return{checkedKeys:nextMenus}\n        }\n        return null\n    }\n\n    setRole = ()=>{\n        let newMenus = ''\n        if(this.state.checkedKeys.length)newMenus = this.state.checkedKeys.reduce(\n            (result, item)=>{\n                if(result === 'all')return ''\n                if(item === 'all')return result\n                if(result === '')return item\n                return(result + '/' + item)\n        })\n        this.props.setRole(this.props.role.name, newMenus)\n    }\n\n    getMenuNodes = (menuList) =>{\n        return menuList.map(item => {\n            if(!item.children){\n                return(<TreeNode title={item.title} key={item.key}></TreeNode>)\n            }else{\n                return(\n                    <TreeNode key={item.key} title={item.title}>\n                        {this.getMenuNodes(item.children)}\n                    </TreeNode>\n                )\n            }\n        })\n    }\n\n    onCheck = checkedKeys => {\n        this.setState({checkedKeys})\n    }\n\n    render(){\n        return(\n            <Modal title='设置角色权限' visible={this.props.showStatus===2} \n            onOk={this.setRole} onCancel={()=>{this.props.setRole()}}>\n                <Tree checkable defaultExpandAll={true} \n                checkedKeys={this.state.checkedKeys}\n                onCheck={this.onCheck}>\n                    <TreeNode title='平台权限' key='all'>\n                        {this.menuNodes}\n                    </TreeNode>\n                </Tree>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Card, Button, Table, message} from 'antd'\n\nimport AddForm from './components/addForm'\nimport SetForm from './components/setForm'\nimport {reqAuthorityList, reqUpdateAuthority, reqDelAuthority} from '../../../../api'\n\n/*\n管理-统计\n */\nexport default class UserManage extends Component{\n    state = {\n        role: {}, //选中的role\n        showStatus:0, //显示状态，0不显示modal,1显示添加modal，2显示设置modal\n    }\n\n    componentDidMount(){\n        this.updateRoles()\n    }\n\n    updateRoles = () => {\n        reqAuthorityList().then(data =>{\n            this.setState({roles:data.data})\n        })\n    }\n\n    updateRole = (name, menus='') =>{\n        if(name){\n            reqUpdateAuthority(name, menus).then(data =>{\n                if(data.status === '0'){\n                    message.success('更新角色成功！')\n                    this.updateRoles()\n                }\n                else message.error('更新角色失败！')\n            })\n            this.setState({role:{}})\n        }\n        this.setState({showStatus:0})\n    }\n\n    delRole = () =>{\n        reqDelAuthority(this.state.role.name).then(data =>{\n            if(data.status === '0'){\n                message.success('删除角色成功！')\n                this.updateRoles()\n            }\n            else message.error('删除角色失败！')\n        })\n        this.setState({role:{}})\n    }\n\n    onRow = (role) => {\n        return{\n            onClick: event =>{\n                this.setState({role})\n            }\n        }\n    }\n\n    columns = [{title:'角色名称',dataIndex:'name'},{title:'拥有权限',dataIndex:'menus'},]\n    \n    render(){\n        const {roles, role, showStatus} = this.state\n        const title=(\n            <span style={{lineHeight:\"48px\"}}>\n                <Button type='primary' onClick={()=>{this.setState({showStatus:1})}}>\n                    创建角色\n                </Button> &nbsp;\n                <Button type='primary' onClick={this.delRole} disabled={!role.name}>\n                    删除角色\n                </Button> &nbsp;\n                <Button type='primary' onClick={()=>{this.setState({showStatus:2})}} disabled={!role.name}>\n                    设置角色权限\n                </Button>\n            </span>\n        )\n        return(\n            <Card title={title}>\n                <Table bordered\n                    rowKey='name'\n                    dataSource={roles}\n                    columns={this.columns}\n                    rowSelection={{type: 'radio', selectedRowKeys: [role.name]}}\n                    onRow={this.onRow}\n                />\n                <AddForm showStatus={showStatus} addRole={(name)=>{this.updateRole(name)}}/>\n                <SetForm showStatus={showStatus} role={this.state.role} setRole={(name, menus)=>{this.updateRole(name, menus)}}/>\n            </Card>\n        )\n    }\n}","import React, {Component} from 'react'\n\n/*\n管理-设置\n */\nexport default class BaseSetting extends Component{\n    render(){\n        return(\n            <div>\n                BaseSetting\n            </div>\n        )\n    }\n}","import {Component} from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Layout } from 'antd';\n\nimport LeftNav from './components/leftNav/leftNav'\nimport Home from './home/home'\nimport Statistics from './statistics/statistics'\nimport UserManage from './manages/userManage/userManage'\nimport AuthorityManage from './manages/authorityManage/authorityManage'\nimport BaseSetting from './settings/baseSetting'\nimport { checkLogin } from '../../utils/userUtils'\n\n/*\n后台管理页的路由组件\n*/ \nconst {Content} = Layout\n\nexport default class Admin extends Component {\n  render() {\n    if(!checkLogin()){\n      return <Redirect to='/'/>\n    }\n    return (\n      <Layout style={{height:document.body.clientHeight}}>\n        <LeftNav path={this.props.location.pathname}/>\n        <Layout>\n          <Content style={{backgroundColor:'#fff'}} >\n            <Switch>\n              <Route path='/admin/home' component={Home} />\n              <Route path='/admin/statistics' component={Statistics} />\n              <Route path='/admin/user' component={UserManage} />\n              <Route path='/admin/authority' component={AuthorityManage} />\n              <Route path='/admin/base' component={BaseSetting} />\n              <Redirect to='/admin/home' />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n     );\n  }\n}"],"sourceRoot":""}