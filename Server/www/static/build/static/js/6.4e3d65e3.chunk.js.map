{"version":3,"sources":["config/adminMenuConfig.js","pages/admin/components/leftNav/leftNav.jsx","pages/admin/home/home.jsx","pages/admin/statistics/statistics.jsx","pages/admin/baseManages/userManage/components/addForm.jsx","pages/admin/baseManages/userManage/components/setForm.jsx","pages/admin/baseManages/userManage/userManage.jsx","pages/admin/baseManages/authorityManage/components/addForm.jsx","pages/admin/baseManages/authorityManage/components/setForm.jsx","pages/admin/baseManages/authorityManage/authorityManage.jsx","pages/admin/settings/baseSetting.jsx","pages/admin/admin.jsx"],"names":["adminMenuList","key","title","children","SubMenu","Sider","LeftNav","props","getMenuNodes","menuList","menus","newMenus","split","map","item","indexOf","find","cItem","path","openKey","Item","to","state","reqAuthorityList","then","data","memoryUtils","userdata","authorityList","authority","name","setState","menuNodes","className","width","selectedKeys","this","defaultOpenKeys","mode","theme","Component","Home","Statistics","Option","AddForm","formRef","React","createRef","addUser","current","validateFields","values","resetFields","username","password","catch","info","message","error","getOptions","value","options","visible","showStatus","onOk","onCancel","ref","rules","required","min","max","pattern","placeholder","type","initialValue","setUser","setFieldsValue","user","disabled","UserManage","updateUsers","reqUserList","users","updateUser","reqUpdateUser","status","success","delUser","reqDelUser","onRow","onClick","event","columns","dataIndex","style","lineHeight","bordered","rowKey","dataSource","rowSelection","selectedRowKeys","addRole","TreeNode","setRole","checkedKeys","length","reduce","result","role","onCheck","checkable","defaultExpandAll","nextProps","prevState","nextMenus","updateRoles","roles","updateRole","reqUpdateAuthority","delRole","reqDelAuthority","BaseSetting","Content","Admin","addUpdateFun","forceUpdate","checkLogin","height","document","body","clientHeight","location","pathname","backgroundColor","component","AuthorityManage"],"mappings":"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","file":"static/js/6.4e3d65e3.chunk.js","sourcesContent":["const adminMenuList = [\n  {key: 'home',title: '首页',},\n  {key: 'manages-base',title: '基础管理',\n    children: [\n      {key: 'user',title: '用户管理',}, \n      {key: 'authority',title: '角色管理',},\n    ],\n  },\n  {key: 'settings',title: '设置',\n    children: [\n      {key: 'base',title: '基础设置',},\n    ],\n  },\n]\nexport default adminMenuList","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Layout } from 'antd';\n\nimport menuList from '../../../../config/adminMenuConfig'\nimport './leftNav.less'\nimport { reqAuthorityList } from '../../../../api/baseAPI'\nimport memoryUtils from '../../../../utils/memoryUtils'\n/*\n左侧导航的组件\n */\nconst { SubMenu } = Menu;\nconst { Sider } = Layout\n\nexport default class LeftNav extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    reqAuthorityList().then(data => {\n      if(memoryUtils.userdata){\n        this.authorityList = data.data\n        const authority = this.authorityList.find(item => item.name === memoryUtils.userdata.authority)\n        if (authority) {\n          this.setState({ menuNodes: this.getMenuNodes(menuList, authority.menus) })\n        } else {\n          this.setState({ menuNodes: this.getMenuNodes(menuList, '') })\n        }\n      }\n    })\n  }\n  /**\n   * 根据menu的数据数组生成对应标签数组\n   */\n  getMenuNodes = (menuList, menus = '') => {\n    let newMenus = menus.split('/')\n    return menuList.map(item => {\n      if (newMenus.indexOf(item.key) !== -1) {\n        if (!item.children) {\n          return (\n            <Menu.Item key={item.key}>\n              <Link to={'/admin/' + item.key}>{item.title}</Link>\n            </Menu.Item>\n          )\n        } else {\n          let cItem = item.children.find(cItem => cItem.key === this.props.path.split('/')[2])\n          if (cItem) this.openKey = item.key\n          return (\n            <SubMenu key={item.key} title={item.title}>\n              {this.getMenuNodes(item.children, menus)}\n            </SubMenu>\n          )\n        }\n      }\n      return null\n    })\n  }\n\n  render() {\n    return (\n      <Sider className='left-nav' width='140'>\n        <Link to='/' className='left-nav-header'>\n          <h1>云边小铺</h1>\n        </Link>\n        <Menu selectedKeys={[this.props.path.split('/')[2]]} defaultOpenKeys={[this.openKey]} mode=\"inline\" theme=\"dark\">\n          {this.state.menuNodes}\n        </Menu>\n      </Sider>\n    )\n  }\n}","import React, {Component} from 'react'\n\nimport './home.less'\n/*\n管理-首页\n */\nexport default class Home extends Component{\n    render(){\n        return(\n            <div className='home'>\n                欢迎使用后台管理系统\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\n\n/*\n管理-统计\n */\nexport default class Statistics extends Component{\n    render(){\n        return(\n            <div>\n                Statistics\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Form, Input, Select,message} from 'antd'\n\nimport {reqAuthorityList} from '../../../../../api/baseAPI'\n/*\n管理-统计\n */\nconst { Option } = Select;\n\nexport default class AddForm extends Component{\n    constructor(props){\n        super(props)\n        this.state = {}\n        reqAuthorityList().then(data => {\n            this.setState({options : this.getOptions(data.data)})\n        })\n    }\n\n    formRef = React.createRef()\n\n    addUser = ()=>{\n        this.formRef.current.validateFields().then(values => {\n            this.formRef.current.resetFields();\n            this.props.addUser(values.username, values.password, values.authority)\n        })\n        .catch(info => message.error('请正确填写信息！'));\n    }\n\n    getOptions = (authorityList) =>{\n        return authorityList.map(item => {\n            return <Option key={item.name} value={item.name}>{item.name}</Option>\n        })\n    }\n\n    render(){\n        return(\n            <Modal title='添加用户' visible={this.props.showStatus===1} \n                onOk={this.addUser} onCancel={()=>{this.props.addUser()}}\n            >\n                <Form ref={this.formRef}>\n                    <Form.Item name=\"username\"\n                    rules={[\n                        {required: true,message: '请输入用户名'},\n                        {min: 4,message: '用户名最少4位'},\n                        {max: 12,message: '用户名最多12位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '用户名必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input placeholder=\"用户名\" />\n                    </Form.Item>\n                    <Form.Item name=\"password\"\n                    rules={[\n                        {required: true,message: '请输入密码！'},\n                        {min: 6,message: '密码最少6位'},\n                        {max: 16,message: '密码最多16位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '密码必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input type=\"password\" placeholder=\"密码\"/>\n                    </Form.Item>\n                    <Form.Item name=\"authority\" initialValue='root'>\n                        <Select>{this.state.options}</Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Modal, Form, Input, Select, message } from 'antd'\n\nimport { reqAuthorityList } from '../../../../../api/baseAPI'\n/*\n管理-统计\n */\nconst { Option } = Select;\n\nexport default class AddForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    reqAuthorityList().then(data => {\n      this.setState({ options: this.getOptions(data.data) })\n    })\n  }\n\n  formRef = React.createRef()\n\n  setUser = () => {\n    this.formRef.current.validateFields().then(values => {\n      this.formRef.current.resetFields()\n      if (!values.password) values.password = ''\n      this.props.setUser(values.username, values.password, values.authority)\n    })\n      .catch(info => message.error('请正确填写信息！' + info));\n  }\n\n  getOptions = (authorityList) => {\n    return authorityList.map(item => {\n      return <Option key={item.name} value={item.name}>{item.name}</Option>\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.formRef.current) {\n      this.formRef.current.resetFields()\n      this.formRef.current.setFieldsValue({ username: this.props.user.username })\n      this.formRef.current.setFieldsValue({ authority: this.props.user.authority })\n    }\n  }\n\n  render() {\n    return (\n      <Modal title='添加用户' visible={this.props.showStatus === 2}\n        onOk={this.setUser} onCancel={() => { this.props.setUser() }}\n      >\n        <Form ref={this.formRef}>\n          <Form.Item name=\"username\">\n            <Input disabled={true} />\n          </Form.Item>\n          <Form.Item name=\"password\"\n            rules={[\n              { min: 6, message: '密码最少6位' },\n              { max: 16, message: '密码最多16位' },\n              { pattern: /^[a-zA-z0-9_*!]+$/, message: '密码必须由英文、数字或英文字符_*!组成' },\n            ]}\n          >\n            <Input type=\"password\" placeholder=\"密码默认不修改\" />\n          </Form.Item>\n          <Form.Item name=\"authority\">\n            <Select>{this.state.options}</Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Card, Button, Table, message } from 'antd'\n\nimport AddForm from './components/addForm'\nimport SetForm from './components/setForm'\nimport { reqUserList, reqDelUser, reqUpdateUser } from '../../../../api/baseAPI'\n\n\n/*\n管理-统计\n */\nexport default class UserManage extends Component {\n  state = {\n    user: {}, //选中的role\n    showStatus: 0, //显示状态，0不显示modal,1显示添加modal，2显示设置modal\n  }\n\n  componentDidMount() {\n    this.updateUsers()\n  }\n\n  updateUsers = () => reqUserList().then(data => this.setState({ users: data.data }))\n\n  updateUser = (username, password, authority) => {\n    if (username) {\n      reqUpdateUser(username, password, authority).then(data => {\n        if (data.status === '0') {\n          message.success('更新用户成功！')\n          this.updateUsers()\n        }\n        else message.error('更新用户失败！')\n      })\n      this.setState({ user: {} })\n    }\n    this.setState({ showStatus: 0 })\n  }\n\n  delUser = () => {\n    reqDelUser(this.state.user.username).then(data => {\n      if (data.status === '0') {\n        message.success('删除用户成功！')\n        this.updateUsers()\n      }\n      else message.error('删除用户失败！')\n    })\n    this.setState({ user: {} })\n  }\n\n  onRow = (user) => {\n    return {\n      onClick: event => this.setState({ user })\n    }\n  }\n\n  columns = [{ title: '用户名', dataIndex: 'username' }, { title: '密码', dataIndex: 'password' }, { title: '所属角色', dataIndex: 'authority' },]\n\n  render() {\n    const { users, user, showStatus } = this.state\n    const title = (\n      <span style={{ lineHeight: \"48px\" }}>\n        <Button type='primary' onClick={() => { this.setState({ showStatus: 1 }) }}>\n          创建\n        </Button> &nbsp;\n        <Button type='primary' onClick={this.delUser} disabled={!user.username}>\n          删除\n        </Button> &nbsp;\n        <Button type='primary' onClick={() => { this.setState({ showStatus: 2 }) }} disabled={!user.username}>\n          编辑\n        </Button>\n      </span>\n    )\n    return (\n      <Card title={title}>\n        <Table bordered\n          rowKey='username'\n          dataSource={users}\n          columns={this.columns}\n          rowSelection={{ type: 'radio', selectedRowKeys: [user.username] }}\n          onRow={this.onRow}\n        />\n        <AddForm showStatus={showStatus} addUser={(username, password, authority) => { this.updateUser(username, password, authority) }} />\n        <SetForm showStatus={showStatus} user={this.state.user} setUser={(username, password, authority) => { this.updateUser(username, password, authority) }} />\n      </Card>\n    )\n  }\n}","import React, {Component} from 'react'\nimport {Modal, Form, Input, message} from 'antd'\n/*\n管理-统计\n */\nexport default class AddForm extends Component{\n    formRef = React.createRef()\n\n    addRole = ()=>{\n        this.formRef.current.validateFields()\n        .then(values => {\n            this.formRef.current.resetFields();\n            this.props.addRole(values.name)\n        })\n        .catch(info => {\n          message.error('请正确填写信息！')\n        });\n    }\n\n\n    render(){\n        return(\n            <Modal title='添加角色' visible={this.props.showStatus===1} \n                onOk={this.addRole} onCancel={()=>{this.props.addRole()}}\n            >\n                <Form ref={this.formRef}>\n                    <Form.Item name=\"name\"\n                        rules={[\n                            {required: true,message: '请输入角色名'},\n                            {max: 12,message: '角色名最多12位'},\n                    ]}>\n                        <Input placeholder=\"角色名\" />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Modal, Tree} from 'antd'\n\nimport menuList from '../../../../../config/adminMenuConfig'\n/*\n管理-统计\n */\nconst {TreeNode} = Tree\n\nexport default class AddForm extends Component{\n    constructor(props){\n      super(props)\n      this.state = {checkedKeys: {}}\n      this.menuNodes = this.getMenuNodes(menuList)\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n      if(nextProps.showStatus === 0){\n        const nextMenus = nextProps.role.menus ? nextProps.role.menus.split('/') : {}\n        if(nextMenus !== prevState.checkedKeys)return{checkedKeys:nextMenus}\n      }\n      return null\n    }\n\n    setRole = ()=>{\n        let newMenus = ''\n        if(this.state.checkedKeys.length)newMenus = this.state.checkedKeys.reduce(\n            (result, item)=>{\n                if(result === 'all')return ''\n                if(item === 'all')return result\n                if(result === '')return item\n                return(result + '/' + item)\n        })\n        this.props.setRole(this.props.role.name, newMenus)\n    }\n\n    getMenuNodes = (menuList) =>{\n        return menuList.map(item => {\n            if(!item.children){\n                return(<TreeNode title={item.title} key={item.key}></TreeNode>)\n            }else{\n                return(\n                    <TreeNode key={item.key} title={item.title}>\n                        {this.getMenuNodes(item.children)}\n                    </TreeNode>\n                )\n            }\n        })\n    }\n\n    onCheck = checkedKeys => {\n        this.setState({checkedKeys})\n    }\n\n    render(){\n        return(\n            <Modal title='设置角色权限' visible={this.props.showStatus===2} \n            onOk={this.setRole} onCancel={()=>{this.props.setRole()}}>\n                <Tree checkable defaultExpandAll={true} \n                checkedKeys={this.state.checkedKeys}\n                onCheck={this.onCheck}>\n                    <TreeNode title='平台权限' key='all'>\n                        {this.menuNodes}\n                    </TreeNode>\n                </Tree>\n            </Modal>\n        )\n    }\n}","import React, {Component} from 'react'\nimport {Card, Button, Table, message} from 'antd'\n\nimport AddForm from './components/addForm'\nimport SetForm from './components/setForm'\nimport {reqAuthorityList, reqUpdateAuthority, reqDelAuthority} from '../../../../api/baseAPI'\n\n/*\n管理-统计\n */\nexport default class UserManage extends Component{\n    state = {\n        role: {}, //选中的role\n        showStatus:0, //显示状态，0不显示modal,1显示添加modal，2显示设置modal\n    }\n\n    componentDidMount(){\n        this.updateRoles()\n    }\n\n    updateRoles = () => {\n        reqAuthorityList().then(data =>{\n            this.setState({roles:data.data})\n        })\n    }\n\n    updateRole = (name, menus='') =>{\n        if(name){\n            reqUpdateAuthority(name, menus).then(data =>{\n                if(data.status === '0'){\n                    message.success('更新角色成功！')\n                    this.updateRoles()\n                }\n                else message.error('更新角色失败！')\n            })\n            this.setState({role:{}})\n        }\n        this.setState({showStatus:0})\n    }\n\n    delRole = () =>{\n        reqDelAuthority(this.state.role.name).then(data =>{\n            if(data.status === '0'){\n                message.success('删除角色成功！')\n                this.updateRoles()\n            }\n            else message.error('删除角色失败！')\n        })\n        this.setState({role:{}})\n    }\n\n    onRow = (role) => {\n        return{\n            onClick: event =>{\n                this.setState({role})\n            }\n        }\n    }\n\n    columns = [{title:'角色名称',dataIndex:'name'},{title:'拥有权限',dataIndex:'menus'},]\n    \n    render(){\n        const {roles, role, showStatus} = this.state\n        const title=(\n            <span style={{lineHeight:\"48px\"}}>\n                <Button type='primary' onClick={()=>{this.setState({showStatus:1})}}>\n                    创建\n                </Button> &nbsp;\n                <Button type='primary' onClick={this.delRole} disabled={!role.name}>\n                    删除\n                </Button> &nbsp;\n                <Button type='primary' onClick={()=>{this.setState({showStatus:2})}} disabled={!role.name}>\n                    编辑\n                </Button>\n            </span>\n        )\n        return(\n            <Card title={title}>\n                <Table bordered\n                    rowKey='name'\n                    dataSource={roles}\n                    columns={this.columns}\n                    rowSelection={{type: 'radio', selectedRowKeys: [role.name]}}\n                    onRow={this.onRow}\n                />\n                <AddForm showStatus={showStatus} addRole={(name)=>{this.updateRole(name)}}/>\n                <SetForm showStatus={showStatus} role={this.state.role} setRole={(name, menus)=>{this.updateRole(name, menus)}}/>\n            </Card>\n        )\n    }\n}","import React, {Component} from 'react'\n\n/*\n管理-设置\n */\nexport default class BaseSetting extends Component{\n    render(){\n        return(\n            <div>\n                BaseSetting\n            </div>\n        )\n    }\n}","import {Component } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Layout } from 'antd';\n\nimport LeftNav from './components/leftNav/leftNav'\nimport Home from './home/home'\nimport Statistics from './statistics/statistics'\nimport UserManage from './baseManages/userManage/userManage'\nimport AuthorityManage from './baseManages/authorityManage/authorityManage'\nimport BaseSetting from './settings/baseSetting'\nimport { checkLogin, addUpdateFun } from '../../utils/userUtils'\n\n\n/*\n后台管理页的路由组件\n*/ \nconst {Content} = Layout\n\nexport default class Admin extends Component {\n  constructor(props){\n    super(props)\n    addUpdateFun(()=>this.forceUpdate())\n  }\n  render() {\n    if(!checkLogin()){\n      return <Redirect to='/'/>\n    }\n    return (\n      <Layout style={{height:document.body.clientHeight}}>\n        <LeftNav path={this.props.location.pathname}/>\n        <Layout>\n          <Content style={{backgroundColor:'#fff'}} >\n            <Switch>\n              <Route path='/admin/home' component={Home} />\n              <Route path='/admin/statistics' component={Statistics} />\n              <Route path='/admin/user' component={UserManage} />\n              <Route path='/admin/authority' component={AuthorityManage} />\n              <Route path='/admin/base' component={BaseSetting} />\n              <Redirect to='/admin/home' />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n     );\n  }\n}"],"sourceRoot":""}