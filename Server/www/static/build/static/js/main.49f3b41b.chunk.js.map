{"version":3,"sources":["api/ajax.js","api/index.js","components/loginModal/loginModal.jsx","components/header/header.jsx","components/footer/footer.jsx","components/loading/loading.jsx","App.js","index.js","utils/memoryUtils.js","utils/storageUtils.js","utils/userUtils.js"],"names":["ajax","url","data","type","Promise","resolve","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","md5","reqFavTypeList","reqDelType","title","reqUpdateType","rank","oldTitle","undefined","reqMoveType","fType","tType","reqFavItemList","favType","reqDelItem","reqUpdateItem","description","oldUrl","LoginModal","onFinish","values","a","userlogin","status","props","switchShow","visible","this","showLogin","onCancel","footer","name","initialValues","Item","rules","required","min","max","pattern","prefix","UserOutlined","className","placeholder","LockOutlined","style","width","htmlType","Component","SubMenu","Header","state","onUserClick","checkLogin","confirm","onOk","userlogout","forceUpdate","switchLoginShow","setState","history","location","pathname","split","nowKey","length","userIcon","MenuOutlined","offsetTop","mode","selectedKeys","icon","HomeOutlined","to","ToolOutlined","QuestionCircleOutlined","shape","onClick","withRouter","Footer","href","Loading","position","left","top","transform","size","Home","lazy","Tools","About","App","fallback","minHeight","path","component","exact","initUser","ReactDOM","render","locale","zhCN","document","getElementById","exportObject","userdata","USER_KEY","saveUser","localStorage","setItem","JSON","stringify","getUser","parse","getItem","removeUser","removeItem","success","memoryUtils","storageUtils","user"],"mappings":"6ZAOe,SAASA,EAAKC,GAA0B,IAArBC,EAAoB,uDAAf,GAAIC,EAAW,uDAAN,MAC5C,OAAO,IAAIC,SAAQ,SAACC,IAEJ,QAATF,EACWG,IAAMC,IAAIN,EAAK,CACrBO,OAAON,IAGDI,IAAMG,KAAKR,EAAIC,IAGrBQ,MAAK,SAAAC,GACTN,EAAQM,EAAST,SAClBU,OAAM,SAAAC,GACLC,EAAA,EAAQD,MAAM,iCAAQA,EAAMC,e,sBCb3BC,EAAW,SAACC,EAAUC,GAE/B,OAAOjB,EAAK,aAAc,CAACgB,WAAUC,SADrCA,EAAWC,IAAID,IACiC,SAyBvCE,EAAiB,WAC1B,OAAOnB,EAAK,0BAA2B,CAAC,KAAO,OAAQ,SAG9CoB,EAAa,SAACC,GACvB,OAAOrB,EAAK,0BAA2B,CAAC,KAAO,MAAOqB,SAAQ,SAGrDC,EAAgB,SAACD,EAAOE,GAA8B,IAAxBC,EAAuB,4DAAdC,EAChD,OAAOzB,EAAK,0BAA2B,CAAC,KAAO,SAAUqB,QAAOE,OAAMC,YAAW,SAGxEE,EAAc,SAACC,EAAOC,GAC/B,OAAO5B,EAAK,0BAA2B,CAAC,KAAO,OAAQ2B,QAAOC,SAAQ,SAG7DC,EAAiB,eAACC,EAAD,4DAASL,EAAT,OAAuBzB,EAAK,0BAA2B,CAAC,KAAO,MAAO8B,WAAU,SAEjGC,EAAa,SAAC9B,GAAD,OAASD,EAAK,0BAA2B,CAAC,KAAO,MAAOC,OAAM,SAE3E+B,EAAgB,SAAC/B,EAAK6B,EAAST,EAAOE,EAAMU,GAAmC,IAAtBC,EAAqB,4DAAdT,EACzE,OAAOzB,EAAK,0BAA2B,CAAC,KAAO,SAAUC,MAAK6B,UAAST,QAAOE,OAAMU,cAAaC,UAAS,U,6aC/CzFC,E,4MACnBC,S,uCAAW,WAAOC,GAAP,mBAAAC,EAAA,6DACFtB,EAAsBqB,EAAtBrB,SAAUC,EAAYoB,EAAZpB,SADR,SAEUsB,YAAUvB,EAAUC,GAF9B,QAEHf,EAFG,SAGkB,MAAhBA,EAAKsC,QAAe,EAAKC,MAAMC,aAHjC,2C,kGAMX,WACE,OACI,mBAAOrB,MAAM,2BACbsB,QAASC,KAAKH,MAAMI,UAAWC,SAAUF,KAAKH,MAAMC,WACpDK,OAAQ,KAFR,SAGI,oBAAMC,KAAK,eAAeD,OAAQ,KAClCE,cAAe,GACfb,SAAUQ,KAAKR,SAFf,UAGI,kBAAMc,KAAN,CAAWF,KAAK,WAChBG,MAAO,CACH,CAACC,UAAU,EAAKtC,QAAS,wCACzB,CAACuC,IAAK,EAAEvC,QAAS,yCACjB,CAACwC,IAAK,GAAGxC,QAAS,0CAClB,CAACyC,QAAS,oBAAoBzC,QAAS,oHAL3C,SAOE,mBAAO0C,OAAQ,cAACC,EAAA,EAAD,CAAcC,UAAU,wBAA0BC,YAAY,yBAE/E,kBAAMT,KAAN,CAAWF,KAAK,WAChBG,MAAO,CACH,CAACC,UAAU,EAAKtC,QAAS,wCACzB,CAACuC,IAAK,EAAEvC,QAAS,mCACjB,CAACwC,IAAK,GAAGxC,QAAS,oCAClB,CAACyC,QAAS,oBAAoBzC,QAAS,8GAL3C,SAOE,mBAAO0C,OAAQ,cAACI,EAAA,EAAD,CAAcF,UAAU,wBAA0BvD,KAAK,WAAWwD,YAAY,mBAE/F,kBAAMT,KAAN,UACE,mBAAQW,MAAO,CAACC,MAAM,QAAS3D,KAAK,UAAU4D,SAAS,SAAvD,qC,GAlCsBC,aCEhCC,G,WAAAA,SAASf,E,IAAAA,KACXgB,E,4MACJC,MAAQ,CACNtB,WAAW,G,EAGbuB,YAAc,WACRC,cACF,IAAMC,QAAQ,CACZjD,MAAO,6CACPkD,KAAM,WACJC,cACA,EAAKC,iBAKX,EAAKC,mB,EAGPA,gBAAkB,kBAAM,EAAKC,SAAS,CAAE9B,WAAY,EAAKsB,MAAMtB,a,4CAE/D,WAEE,IAAM5C,EAAM2C,KAAKH,MAAMmC,QAAQC,SAASC,SAASC,MAAM,KACjDC,EAAiC,KAAxB/E,EAAIA,EAAIgF,OAAS,GAAY,OAAShF,EAAIA,EAAIgF,OAAS,GAEhEC,EAAWb,cAAe,cAACc,EAAA,EAAD,IAAmB,cAAC1B,EAAA,EAAD,IACnD,OACE,mBAAO2B,UAAW,EAAlB,SACE,oBAAK1B,UAAU,SAAf,UACE,4BACE,oBAAMA,UAAU,cAAc2B,KAAK,aAAaC,aAAc,CAACN,GAA/D,UACE,cAAC9B,EAAD,CAAiBqC,KAAM,cAACC,EAAA,EAAD,IAAvB,SACE,cAAC,IAAD,CAAMC,GAAI,IAAV,2BADQ,QAGV,cAACxB,EAAD,CAAqB5C,MAAM,qBAAMkE,KAAM,cAACG,EAAA,EAAD,IAAvC,SACE,cAACxC,EAAD,UACE,cAAC,IAAD,CAAMuC,GAAI,mBAAV,iCADQ,cADC,SAKb,cAACvC,EAAD,CAAkBqC,KAAM,cAACI,EAAA,EAAD,IAAxB,SACE,cAAC,IAAD,CAAMF,GAAI,SAAV,2BADQ,cAKd,4BACE,mBAAQtF,KAAK,UAAUyF,MAAM,SAASC,QAASjD,KAAKwB,YAApD,SACGc,MAGL,cAAC,EAAD,CAAYxC,WAAYE,KAAK8B,gBAAiB7B,UAAWD,KAAKuB,MAAMtB,qB,GAlDzDmB,aAwDN8B,cAAW5B,GC9DL6B,G,mKACjB,WACE,OACE,sBAAKrC,UAAU,SAAf,UACE,mBAAIsC,KAAK,4BAAT,+CADF,sC,GAH4BhC,c,kBCAfiC,E,4JACjB,WACI,OACI,qBAAKpC,MAAO,CAACqC,SAAU,WAAWC,KAAM,MAAMC,IAAK,MACnDC,UAAW,yBADX,SAEI,mBAAMC,KAAK,gB,GALUtC,aCC/BuC,EAAOC,gBAAK,kBAAM,iCAClBC,EAAQD,gBAAK,kBAAM,uDACnBE,EAAQF,gBAAK,kBAAM,iCAEJG,E,4JACnB,WACE,OACE,cAAC,IAAD,UACE,eAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,UACE,cAAC,EAAD,IACA,qBAAK/C,MAAO,CAACgD,UAAU,qBAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,UAAWN,IAChC,cAAC,IAAD,CAAOK,KAAK,SAASC,UAAWL,IAChC,cAAC,IAAD,CAAOI,KAAK,IAAIE,OAAK,EAACD,UAAWR,IACjC,cAAC,IAAD,CAAUd,GAAG,WAGjB,cAAC,EAAD,a,GAduBzB,aCDjCiD,cAEAC,IAASC,OACP,mBAAgBC,OAAQC,IAAxB,SAA8B,cAAC,EAAD,MAC9BC,SAASC,eAAe,U,oMCRXC,EADM,CAAEC,SAFR,ICATC,EAAW,WAcjB,IACeF,EADM,CAAEG,SAXvB,SAAkBF,GAChBG,aAAaC,QAAQH,EAAUI,KAAKC,UAAUN,KAUfO,QAPjC,WACE,OAAOF,KAAKG,MAAML,aAAaM,QAAQR,IAAa,OAMZS,WAH1C,WACEP,aAAaQ,WAAWV,KCPbnF,EAAY,SAACvB,EAAUC,GAClC,OAAO,IAAIb,SAAQ,SAACC,GAClBU,YAASC,EAAUC,GAAUP,MAAK,SAAAR,GAC5BA,GAAwB,MAAhBA,EAAKsC,QACf1B,EAAA,EAAQuH,QAAQ,gEAChBC,EAAYb,SAAW,CAAEzG,WAAUC,YACnCsH,EAAaZ,SAAS,CAAE3G,WAAUC,cAElCH,EAAA,EAAQD,MAAM,kFAEhBR,EAAQH,UAODsE,EAAa,WACxB+D,EAAaJ,aACbG,EAAYb,SAAW,KAEvB3G,EAAA,EAAQuH,QAAQ,6BAKLpB,EAAW,WACtB,IAAMuB,EAAOD,EAAaP,UACtBQ,EAAKxH,WAAUsH,EAAYb,SAAWe,IAO/BnE,EAAa,WACxB,SAAIiE,EAAYb,WAAYa,EAAYb,SAASzG,a","file":"static/js/main.49f3b41b.chunk.js","sourcesContent":["/*\n能发送异步ajax请求的函数模块\n函数返回promise对象\n */\nimport axios from 'axios'\nimport {message} from 'antd'\n\nexport default function ajax(url, data={}, type='GET'){\n    return new Promise((resolve) => {\n        let promise\n        if(type === 'GET'){ //发送GET请求\n            promise = axios.get(url, {\n                params:data\n            })\n        }else{ //发送POST请求\n            promise = axios.post(url,data)\n        }\n        //获取promise，统一处理error\n        promise.then(response => {\n            resolve(response.data)\n        }).catch(error => {\n            message.error('请求出错：'+error.message)\n        })\n    })\n}","/*\n包含应用中所有api\n */\nimport ajax from './ajax'\nimport md5 from 'md5'\n\n\n//登入\nexport const reqLogin = (username, password) => {\n    password = md5(password)\n    return ajax('/api/login', {username, password}, 'POST')\n}\n//获取用户列表\nexport const reqUserList = () => ajax('/api/user', {'type':'get'}, 'POST')\n//更新用户\nexport const reqUpdateUser = (username, password, authority) => {\n    password = md5(password)\n    return ajax('/api/user', {'type':'update', username, password, authority}, 'POST')\n}\n//删除用户\nexport const reqDelUser = (username) => {\n    ajax('/api/user', {'type':'del', username}, 'POST')\n}\n//获取角色列表\nexport const reqAuthorityList = () => ajax('/api/authority', {'type':'get'}, 'POST')\n//更新角色\nexport const reqUpdateAuthority = (name, menus='') => {\n    ajax('/api/authority', {'type':'update', name, menus}, 'POST')\n}\n//删除角色\nexport const reqDelAuthority = (name) => {\n    ajax('/api/authority', {'type':'del', name}, 'POST')\n}\n\n//获取收藏类\nexport const reqFavTypeList = () => {\n    return ajax('/api/favourites/favtype', {'type':'get'}, 'POST')\n}\n//删除收藏类\nexport const reqDelType = (title) => {\n    return ajax('/api/favourites/favtype', {'type':'del', title}, 'POST')\n}\n//更新收藏类\nexport const reqUpdateType = (title, rank, oldTitle=undefined) => {\n    return ajax('/api/favourites/favtype', {'type':'update', title, rank, oldTitle}, 'POST')\n}\n//移动收藏类\nexport const reqMoveType = (fType, tType) => {\n    return ajax('/api/favourites/favtype', {'type':'move', fType, tType}, 'POST')\n}\n//获取收藏项\nexport const reqFavItemList = (favType=undefined) => ajax('/api/favourites/favitem', {'type':'get', favType}, 'POST')\n//删除收藏项\nexport const reqDelItem = (url) => ajax('/api/favourites/favitem', {'type':'del', url}, 'POST')\n//更新收藏项\nexport const reqUpdateItem = (url, favType, title, rank, description, oldUrl=undefined) => {\n    return ajax('/api/favourites/favitem', {'type':'update', url, favType, title, rank, description, oldUrl}, 'POST')\n}","import {Component} from 'react'\nimport {Form, Input, Button, Modal} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\n\nimport {userlogin} from '../../utils/userUtils'\n\n/*\n登录页的路由组件\n*/ \nexport default class LoginModal extends Component {\n  onFinish = async (values) => {\n    const {username, password} = values\n    const data = await userlogin(username, password)\n    if(data && data.status === '0')this.props.switchShow()\n  };\n\n  render() {\n    return (\n        <Modal title='用户登录'\n        visible={this.props.showLogin} onCancel={this.props.switchShow}\n        footer={null}>\n            <Form name=\"normal_login\" footer={null}\n            initialValues={{}}\n            onFinish={this.onFinish}>\n                <Form.Item name=\"username\"\n                rules={[\n                    {required: true,message: '请输入用户名'},\n                    {min: 4,message: '用户名最少4位'},\n                    {max: 12,message: '用户名最多12位'},\n                    {pattern: /^[a-zA-z0-9_*!]+$/,message: '用户名必须由英文、数字或英文字符_*!组成'},\n                ]}>\n                  <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\n                </Form.Item>\n                <Form.Item name=\"password\"\n                rules={[\n                    {required: true,message: '请输入密码！'},\n                    {min: 6,message: '密码最少6位'},\n                    {max: 16,message: '密码最多16位'},\n                    {pattern: /^[a-zA-z0-9_*!]+$/,message: '密码必须由英文、数字或英文字符_*!组成'},\n                ]}>\n                  <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"密码\"/>\n                </Form.Item>\n                <Form.Item>\n                  <Button style={{width:'100%'}} type=\"primary\" htmlType=\"submit\">登录</Button>\n                </Form.Item>\n            </Form>\n        </Modal>\n     );\n  }\n}","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { HomeOutlined, ToolOutlined, QuestionCircleOutlined, UserOutlined, MenuOutlined } from '@ant-design/icons'\nimport { Menu, Row, Col, Button, Modal, Affix } from 'antd';\n\nimport LoginModal from '../loginModal/loginModal'\nimport { userlogout, checkLogin } from '../../utils/userUtils'\nimport './header.less'\n/*\n头部组件\n */\nconst { SubMenu, Item } = Menu\nclass Header extends Component {\n  state = {\n    showLogin: false,\n  }\n\n  onUserClick = () => {\n    if (checkLogin()) {//退出登录\n      Modal.confirm({\n        title: '是否确认注销？',\n        onOk: () => {\n          userlogout()//注销\n          this.forceUpdate()\n        },\n      })\n      return\n    }\n    this.switchLoginShow()\n  }\n\n  switchLoginShow = () => this.setState({ showLogin: !this.state.showLogin, })\n\n  render() {\n    //根据url获取nowKey\n    const url = this.props.history.location.pathname.split('/')\n    const nowKey = url[url.length - 1] === '' ? 'home' : url[url.length - 1]\n    //判断是否已经登录\n    const userIcon = checkLogin() ? <MenuOutlined /> : <UserOutlined />\n    return (\n      <Affix offsetTop={0}>\n        <Row className='header'>\n          <Col>\n            <Menu className='header-menu' mode=\"horizontal\" selectedKeys={[nowKey]}>\n              <Item key=\"home\" icon={<HomeOutlined />}>\n                <Link to={'/'}>首页</Link>\n              </Item>\n              <SubMenu key=\"tools\" title=\"小工具\" icon={<ToolOutlined />}>\n                <Item key=\"favorites\">\n                  <Link to={'/tools/favorites'}>收藏夹</Link>\n                </Item>\n              </SubMenu>\n              <Item key=\"about\" icon={<QuestionCircleOutlined />}>\n                <Link to={'/about'}>关于</Link>\n              </Item>\n            </Menu>\n          </Col>\n          <Col>\n            <Button type=\"primary\" shape='circle' onClick={this.onUserClick}>\n              {userIcon}\n            </Button>\n          </Col>\n          <LoginModal switchShow={this.switchLoginShow} showLogin={this.state.showLogin} />\n        </Row>\n      </Affix>\n    )\n  }\n}\nexport default withRouter(Header)","import {Component} from 'react'\n\nimport './footer.less'\n/*\n首页的路由组件\n*/ \nexport default class Footer extends Component {\n    render() {\n      return (\n        <div className='footer'>\n          <a  href='https://beian.miit.gov.cn'>赣ICP备2021004310号-1</a>\n          &nbsp;&nbsp;&nbsp;\n          ©2021 Horbin\n        </div>\n       );\n    }\n}","import React, {Component} from 'react'\nimport {Spin} from 'antd'\n/*\n加载中组件\n用于在加载页面时显示\n */\nexport default class Loading extends Component{\n    render(){\n        return(\n            <div style={{position: 'absolute',left: '50%',top: '50%',\n            transform: 'translate(-50%, -50%)',}}>\n                <Spin size='large'/>\n            </div>\n        )\n    }\n}","import { Component, lazy, Suspense } from 'react'\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\n\nimport Header from './components/header/header'\nimport Footer from './components/footer/footer'\nimport Loading from './components/loading/loading'\n\nconst Home = lazy(() => import('./pages/home/home'))\nconst Tools = lazy(() => import('./pages/tools/tools'))\nconst About = lazy(() => import('./pages/about/about'))\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Suspense fallback={<Loading />}>\n          <Header />\n          <div style={{minHeight:'calc(100% - 80px)'}}>\n            <Switch>\n              <Route path='/tools' component={Tools}></Route>\n              <Route path='/about' component={About}></Route>\n              <Route path='/' exact component={Home}></Route>\n              <Redirect to='/' />\n            </Switch>\n          </div>\n          <Footer />\n        </Suspense>\n      </BrowserRouter>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ConfigProvider } from 'antd'\nimport zhCN from 'antd/lib/locale/zh_CN'\n\nimport App from './App';\nimport { initUser } from './utils/userUtils'\n\n\ninitUser()//初始化User信息\n\nReactDOM.render(\n  <ConfigProvider locale={zhCN}><App /></ConfigProvider>,\n  document.getElementById('root')\n);","/*\n于内存中保存数据的工具模块\n*/\nvar userdata = {}\n\nconst exportObject = { userdata }\nexport default exportObject","/*\n进行local数据存储管理的工具模块\n*/\nconst USER_KEY = 'user_key'\n\n//保存用户信息\nfunction saveUser(userdata) {\n  localStorage.setItem(USER_KEY, JSON.stringify(userdata))\n}\n//获取用户信息\nfunction getUser() {\n  return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\n}\n//去除用户信息\nfunction removeUser() {\n  localStorage.removeItem(USER_KEY)\n}\nconst exportObject = { saveUser, getUser, removeUser }\nexport default exportObject","import { message } from 'antd';\n\nimport { reqLogin } from '../api'\nimport memoryUtils from './memoryUtils'\nimport storageUtils from './storageUtils'\n/**\n * 用户登录\n */\nexport const userlogin = (username, password) => {\n  return new Promise((resolve) => {\n    reqLogin(username, password).then(data => {\n      if (data && data.status === '0') {//登入成功\n        message.success('登录成功，欢迎回来～')\n        memoryUtils.userdata = { username, password }\n        storageUtils.saveUser({ username, password })\n      } else {//账号或密码错误\n        message.error('登录失败，账号或密码错误！')\n      }\n      resolve(data)\n    })\n  })\n}\n/**\n * 注销登录\n */\nexport const userlogout = () => {\n  storageUtils.removeUser()\n  memoryUtils.userdata = null\n  //TODO 服务器注销\n  message.success('注销成功')\n}\n/**\n * 检查storage,并初始化用户信息\n */\nexport const initUser = () => {\n  const user = storageUtils.getUser()\n  if (user.username) memoryUtils.userdata = user\n  //TODO 建立session\n}\n/**\n * 检查是否的登录\n * @returns true or false\n */\nexport const checkLogin = () => {\n  if (memoryUtils.userdata && memoryUtils.userdata.username) {\n    //TODO 服务器检查\n    return true\n  }\n  return false\n}"],"sourceRoot":""}