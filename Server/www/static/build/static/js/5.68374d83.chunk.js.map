{"version":3,"sources":["pages/others/error.jsx","pages/tools/favourites/components/favInput.jsx","pages/tools/favourites/components/favMenu.jsx","pages/tools/favourites/components/leftNav/leftNav.jsx","pages/tools/favourites/components/favCard/favCard.jsx","pages/tools/favourites/components/cardContent/cardContent.jsx","pages/tools/favourites/favourites.jsx","pages/tools/tools.jsx"],"names":["About","style","position","left","top","transform","textAlign","fontSize","color","Component","FavInput","input","React","createRef","onExit","props","editFavType","current","state","value","setState","this","focus","ref","onBlur","onPressEnter","blur","FavMenu","onEdit","typeName","title","onDoubleClick","display","Sider","confirm","LeftNav","setSelectedMenu","selectedMenu","onFavTypeChange","updateMenuList","reqFavTypeList","then","data","sMenu","listData","menuList","find","item","getRankFromTitle","rank","onDragStart","ev","dragingMenu","target","childNodes","innerHTML","onDropOver","preventDefault","targetMenu","onDrop","reqMoveType","status","getMenuNodes","map","targetStyle","targetRank","borderTop","borderBottom","Item","draggable","onDragOver","onAdd","onAddStatus","onDel","onOk","reqDelType","message","success","onSelect","key","oldTitle","newTitle","error","reqUpdateType","undefined","addFavType","length","push","theme","addUpdateFun","forceUpdate","menuNodes","breakpoint","width","collapsedWidth","className","mode","selectedKeys","disabled","checkLogin","type","onClick","PlusCircleOutlined","DeleteOutlined","Meta","FavouritesCard","url","description","reqDelItem","update","onRankChange","reqUpdateItem","maxWidth","minWidth","headStyle","minHeight","actions","EditOutlined","defaultValue","onChange","hoverable","avatar","size","shape","src","icon","FrownOutlined","window","open","Option","CardContent","getCardNodes","itemList","updateItem","formRef","validateFields","values","oldUrl","afterUpdate","catch","info","showStatus","resetFields","typeOptions","setFieldsValue","cardNodes","gutter","xs","sm","md","lg","PlusOutlined","height","favType","forceRender","visible","onCancel","name","rules","required","placeholder","margin","Content","Favourites","a","reqFavItemList","Tools","path","component","Error"],"mappings":"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","file":"static/js/5.68374d83.chunk.js","sourcesContent":["import {Component} from 'react'\n\nimport {\n  FrownOutlined,\n} from '@ant-design/icons';\n\n/*\n错误页的路由组件\n*/ \nexport default class About extends Component {\n    render() {\n      return ( \n        <div style={{position: 'absolute',left: '50%',top: '50%',\n        transform: 'translate(-50%, -50%)',textAlign:'center'}}>\n          <FrownOutlined style={{fontSize:'50px', color:'red'}}/><br/><br/>\n          没有找到该页面，请检查路径是否有误！\n        </div>\n       );\n    }\n}","import React, {Component} from 'react'\nimport { Input } from 'antd';\n\n/*\n左侧导航的组件\n */\nexport default class FavInput extends Component{\n    input = React.createRef()\n\n    componentDidUpdate(){\n        this.input.current.focus()\n    }\n\n    onExit = ()=>{\n        this.props.editFavType(this.input.current.state.value)\n        this.input.current.setState({value:''})\n    }\n\n    render(){\n        return(\n            <Input ref={this.input} onBlur={this.onExit}\n            onPressEnter={()=>{this.input.current.blur()}}>\n            </Input>\n        )\n    }\n}","import React, {Component} from 'react'\n\nimport FavInput from './favInput'\n\n/*\n左侧导航的组件\n */\nexport default class FavMenu extends Component{\n    state={\n        onEdit:false\n    }\n\n    editFavType = (typeName)=>{\n        this.props.editFavType(this.props.title,typeName)\n        this.setState({onEdit:false})\n    }\n\n    onDoubleClick = ()=>{\n        this.setState({onEdit:true})\n    }\n\n    render(){\n        const {onEdit} = this.state\n        const {title} = this.props\n        return(\n            <div>\n                <div style={{display:onEdit ? 'none' : 'block'}} onDoubleClick={this.onDoubleClick}>\n                    {title}\n                </div>\n                <div style={{display:onEdit ? 'block' : 'none'}}>\n                    <FavInput editFavType={this.editFavType}/>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Layout, Menu, Button, message, Modal } from 'antd'\nimport {\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\n\nimport { reqFavTypeList, reqDelType, reqUpdateType, reqMoveType } from '../../../../../api'\nimport { checkLogin, addUpdateFun } from '../../../../../utils/userUtils'\nimport FavInput from '../favInput'\nimport FavMenu from '../favMenu'\n/*\n左侧导航的组件\n */\nconst { Sider } = Layout;\nconst { confirm } = Modal\n\nexport default class LeftNav extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      theme: 'light',\n      menuList: [],\n      onAddStatus: false,\n      selectedMenu: '',\n      dragingMenu: {},\n      targetMenu: {},\n    }\n    addUpdateFun(() => this.forceUpdate())\n  }\n  //组件加载后更新MenuList\n  componentDidMount() {\n    this.updateMenuList()\n  }\n  //设置被选中菜单\n  setSelectedMenu = (title) => {\n    this.setState({ selectedMenu: title })\n    this.props.onFavTypeChange(title)\n  }\n  //更新菜单列表\n  updateMenuList = () => {\n    reqFavTypeList().then(data => {\n      const sMenu = this.state.selectedMenu\n      const listData = data.data\n      this.setState({ menuList: listData })\n      //更新后，若selectedMenu不在menuList中，重置selectedMenu\n      if ((!sMenu || !listData.find(item => item.title === sMenu)) && listData[0]) {\n        this.setSelectedMenu(listData[0].title)\n      }\n    })\n  }\n  //根据Title获得Rank\n  getRankFromTitle = (title) => {\n    const item = this.state.menuList.find(item => item.title === title)\n    return item.rank\n  }\n  //开始拖动事件\n  onDragStart = (ev) => {\n    //获取并设置dragingMenu于state\n    const dragingMenu = ev.target.childNodes[0].childNodes[0].innerHTML\n    this.setState({ dragingMenu: dragingMenu })\n  }\n  //拖动中，悬浮事件\n  onDropOver = (ev) => {\n    ev.preventDefault()\n    //获取并设置targetMenu于state\n    const { dragingMenu } = this.state\n    const targetMenu = ev.target.innerHTML\n    if (dragingMenu !== targetMenu) this.setState({ targetMenu: targetMenu })\n  }\n  //拖动结束事件\n  onDrop = (ev) => {\n    //进行移动排序操作\n    const { targetMenu, dragingMenu } = this.state\n    reqMoveType(dragingMenu, targetMenu).then(data => {\n      if (data.status === '0') this.updateMenuList()\n    })\n    this.setState({ targetMenu: {}, dragingMenu: {} })//初始化相关state\n  }\n  //由menuList获得用于渲染的menu节点\n  getMenuNodes = (menuList) => {\n    const { targetMenu, dragingMenu } = this.state\n    return menuList.map(item => {\n      let targetStyle = {}\n      //由rank判断并设置targetStyle\n      if (targetMenu === item.title) {\n        const targetRank = this.getRankFromTitle(targetMenu)\n        const dragingRank = this.getRankFromTitle(dragingMenu)\n        if (dragingRank > targetRank) targetStyle = { borderTop: \"2px dashed #1890ff\" }\n        else targetStyle = { borderBottom: \"2px dashed #1890ff\" }\n      }\n      return (\n        <Menu.Item key={item.title} style={targetStyle} draggable={true}\n          onDragStart={this.onDragStart} onDragOver={this.onDropOver}\n          onDrop={this.onDrop}\n        >\n          <FavMenu title={item.title} editFavType={this.editFavType} />\n        </Menu.Item>\n      )\n    })\n  }\n  //添加点击事件\n  onAdd = () => this.setState({ onAddStatus: true })\n  //删除点击事件\n  onDel = () => {\n    confirm({\n      title: '是否确定删除?',\n      onOk: () => {\n        reqDelType(this.state.selectedMenu).then(data => {\n          if (data.status === '0') {\n            message.success('删除成功！')\n            this.updateMenuList()\n          }\n        })\n      },\n    });\n  }\n  //menu选择事件，设置selectedMenu\n  onSelect = (value) => this.setSelectedMenu(value.key)\n  //编辑菜单项Title\n  editFavType = (oldTitle, newTitle) => {\n    //判断是否与已有名称相同\n    if (this.state.menuList.find(item => item.title === newTitle)) {\n      message.error('已有相同类别，请更换一个！')\n      return\n    } else if (newTitle) {\n      reqUpdateType(newTitle, undefined, oldTitle).then(data => {\n        if (data.status === '0') {\n          message.success('修改成功！')\n          this.updateMenuList()\n          if (oldTitle === this.state.selectedMenu) this.setState({ selectedMenu: newTitle })\n        }\n      })\n    }\n  }\n  //添加菜单项\n  addFavType = (typeName) => {\n    let { menuList } = this.state\n    if (menuList.find(item => item.title === typeName)) {\n      message.error('已有相同类别，请更换一个！')\n    } else if (typeName) {\n      const rank = menuList.length\n      reqUpdateType(typeName, rank).then(data => {\n        if (data.status === '0') {\n          message.success('添加成功！')\n          menuList.push({ rank: rank, title: typeName })\n          this.setState({ menuList: menuList })\n        }\n      })\n    }\n    this.setState({ onAddStatus: false })\n  }\n\n  render() {\n    const { menuList, onAddStatus, selectedMenu } = this.state\n    const menuNodes = this.getMenuNodes(menuList)\n    return (\n      <Sider breakpoint=\"sm\" width='150px' collapsedWidth=\"0px\"\n       className=\"favourites-sider\" theme={this.state.theme}>\n        <Menu className=\"favourites-sider-menu\" mode=\"inline\"\n          selectedKeys={[selectedMenu]}\n          onSelect={this.onSelect}>\n          {menuNodes}\n          <Menu.Item key='new-menu' disabled style={{ display: onAddStatus ? 'block' : 'none' }}>\n            <FavInput editFavType={this.addFavType} />\n          </Menu.Item>\n        </Menu>\n        <div style={checkLogin() ? { display: 'block' } : { display: 'none' }}>\n          <Button type='link' style={{ width: \"50%\" }} onClick={this.onAdd}>\n            <PlusCircleOutlined style={{ fontSize: '20px' }} />\n          </Button>\n          <Button type='link' style={{ width: \"50%\" }} onClick={this.onDel}>\n            <DeleteOutlined style={{ fontSize: '20px' }} />\n          </Button>\n        </div>\n      </Sider>\n    )\n  }\n}","import React, {Component} from 'react'\nimport {Card, Avatar, Rate, message, Modal} from 'antd';\nimport {EditOutlined, DeleteOutlined, FrownOutlined} from '@ant-design/icons';\n\nimport {reqUpdateItem, reqDelItem} from '../../../../../api'\nimport {checkLogin} from '../../../../../utils/userUtils'\nimport './favCard.less'\n\n/*\n左侧导航的组件\n */\nconst {Meta} = Card \nconst {confirm} = Modal\nexport default class FavouritesCard extends Component{\n    //编辑点击事件\n    onEdit = ()=>{\n        const {url, title, description, type, rank} = this.props\n        this.props.onEdit(url, title, description, type, rank)\n    }\n    //删除点击事件\n    onDel = ()=>{\n        confirm({\n            title: '是否确定删除?',\n            onOk:() => {\n                reqDelItem(this.props.url).then(data=>{\n                    if(data.status === '0'){\n                        message.success('删除成功！')\n                        this.props.update()\n                    }\n                })\n            },\n        });\n    }\n    //更新Rank事件\n    onRankChange = (value)=>{\n        const {url} = this.props\n        reqUpdateItem(url, undefined, undefined,value)\n    }\n\n    render(){\n        const {url, title, description, rank} = this.props\n        return(\n            <Card style={{maxWidth:'550px', minWidth:'200px'}}\n            headStyle={{minHeight:\"36px\"}} \n            actions={checkLogin() ? [\n                <EditOutlined key=\"edit\" onClick={this.onEdit}/>,\n                <DeleteOutlined key=\"delete\" onClick={this.onDel}/>,\n            ] : []}\n            title={<Rate disabled={!checkLogin()}  defaultValue={rank} onChange={this.onRankChange} \n                    style={{width:'100%', textAlign:\"center\"}}/>}\n            hoverable={true}\n            >\n                <Meta\n                avatar={\n                    <Avatar size={50} shape=\"square\"\n                    src={url+\"favicon.ico\"} icon={<FrownOutlined />}/>\n                }\n                title={title}\n                description={description}\n                onClick={()=>{window.open(url)}}/>\n            </Card>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Row, Col, Button, Modal, Form, Input, Rate, message, Select } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons'\n\nimport FavouritesCard from '../favCard/favCard'\nimport { reqUpdateItem, reqFavTypeList } from '../../../../../api'\nimport { checkLogin,addUpdateFun } from '../../../../../utils/userUtils'\n\n/*\n左侧导航的组件\n */\nconst { Option } = Select;\n\nexport default class CardContent extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      showStatus: 0,\n    }\n    this.formRef = React.createRef()\n    this.oldUrl = ''\n    addUpdateFun(()=>this.forceUpdate())\n  }\n\n  //根据itemList获取card节点\n  getCardNodes = (itemList) => {\n    return itemList.map(item => {\n      return (\n        <Col key={item.url}>\n          <FavouritesCard url={item.url} title={item.title}\n            description={item.description} type={item.type} rank={item.rank}\n            update={this.props.update} onEdit={this.onEdit} />\n        </Col>\n      )\n    })\n  }\n  //更新item\n  updateItem = () => {\n    this.formRef.current.validateFields().then(values => {\n      const { url, title, description, type, rank } = values\n      reqUpdateItem(url, type, title, rank, description, this.oldUrl).then(data => {\n        if (data.status === '0') {\n          this.props.update()\n          this.afterUpdate()\n          message.success('添加成功！')\n        }\n      })\n    }).catch(info => message.error('请正确填写信息！'));\n  }\n  //更新item后的收尾工作\n  afterUpdate = () => {\n    this.setState({ showStatus: 0 })\n    this.formRef.current.resetFields();\n    this.oldUrl = ''\n  }\n  //开始编辑item\n  onEdit = (url, title, description, type, rank) => {\n    this.oldUrl = url\n    reqFavTypeList().then(data => {\n      //获取并设置typeOptions\n      let typeOptions = data.data.map(item => {\n        return <Option key={item.title} value={item.title}>{item.title}</Option>\n      })\n      //初始化其他信息\n      this.formRef.current.setFieldsValue({ url, title, description, type, rank })\n      this.setState({ typeOptions: typeOptions, showStatus: 1 })\n    })\n  }\n\n  render() {\n    const { itemList } = this.props\n    const cardNodes = this.getCardNodes(itemList)\n    return (\n      <div>\n        <Row gutter={[{ xs: 8, sm: 16, md: 16, lg: 24 },{ xs: 8, sm: 16, md: 16, lg: 24 }]} >\n          {cardNodes}\n          <div style={checkLogin() ? { display: 'block' } : { display: 'none' }}>\n            <Button icon={<PlusOutlined style={{ fontSize: '50px', color: '#C0C0C0' }} />}\n              style={{ height: '180px', width: '180px' }}\n              onClick={() => { this.onEdit('', '', '', this.props.favType, 3) }} />\n          </div>\n        </Row>\n        <Modal forceRender title='收藏项信息' visible={this.state.showStatus === 1}\n          onOk={() => { this.updateItem() }} onCancel={this.afterUpdate}>\n          <Form ref={this.formRef}>\n            <Form.Item name=\"url\"\n              rules={[{ required: true, message: '请输入URL' },]}>\n              <Input placeholder=\"请输入URL\" />\n            </Form.Item>\n            <Form.Item name=\"title\"\n              rules={[{ required: true, message: '请输入标题' },]}>\n              <Input placeholder=\"请输入标题\" />\n            </Form.Item>\n            <Form.Item name=\"description\"\n              rules={[{ required: true, message: '请输入相关描述' },]}>\n              <Input placeholder=\"请输入相关描述\" />\n            </Form.Item>\n            <Form.Item name=\"type\">\n              <Select>{this.state.typeOptions}</Select>\n            </Form.Item>\n            <Form.Item name=\"rank\">\n              <Rate style={{ margin: 'auto 0' }} />\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Layout } from 'antd'\n\nimport LeftNav from './components/leftNav/leftNav'\nimport CardContent from './components/cardContent/cardContent'\nimport { reqFavItemList } from '../../../api'\nimport './favourites.less'\n/*\n头部组件\n */\nconst { Content } = Layout;\nexport default class Favourites extends Component {\n  state = {\n    theme: 'light',\n    itemList: [],\n  }\n  //同步并设置itemList和favType\n  onFavTypeChange = async (favType) => {\n    const data = await reqFavItemList(favType)\n    const itemList = data.data\n    this.setState({ itemList: itemList, favType: favType })\n  }\n\n  render() {\n    const { favType } = this.state\n    return (\n      <Layout className=\"favourites\">\n        <LeftNav onFavTypeChange={this.onFavTypeChange} />\n        <Layout>\n          <Content className=\"favourites-content\">\n            <CardContent itemList={this.state.itemList}\n              favType={this.state.favType}\n              update={() => this.onFavTypeChange(favType)} />\n          </Content>\n        </Layout>\n      </Layout>\n    )\n  }\n}","import { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport Favourites from './favourites/favourites'\nimport Error from '../others/error'\n/*\n工具页的路由组件\n*/\nexport default class Tools extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route path='/tools/favorites' component={Favourites}></Route>\n          <Route path='/' component={Error}></Route>\n        </Switch>\n      </div>\n    );\n  }\n}"],"sourceRoot":""}