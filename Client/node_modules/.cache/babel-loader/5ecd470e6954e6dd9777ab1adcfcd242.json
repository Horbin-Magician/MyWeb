{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\n\nvar _jsxFileName = \"/home/horbin/Project/Web/my-web/Client/src/pages/tools/favourites/components/leftNav/leftNav.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useRef } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\nimport FavInput from '../favInput/favInput';\nimport FavMenu from '../favMenu/favMenu';\nimport './leftNav.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DragMenu = ({\n  rank,\n  title\n}) => {\n  _s();\n\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drager] = useDrag({\n    item: {\n      type: 'menu',\n      rank\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0.5 : 1;\n  drager(ref);\n  return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n    ref: ref,\n    style: {\n      opacity\n    },\n    children: /*#__PURE__*/_jsxDEV(FavMenu, {\n      title: title,\n      editFavType: this.editFavType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, rank, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n/*\n左侧导航的组件\n */\n\n\n_s(DragMenu, \"M7jm5jlRFu6Isr1CV9doFd/f6UE=\", false, function () {\n  return [useDrag];\n});\n\n_c = DragMenu;\nconst {\n  Sider\n} = _Layout;\nexport default class LeftNav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateMenuList = () => {};\n\n    this.getMenuNodes = menuList => {\n      return menuList.map(item => {\n        var _s2 = $RefreshSig$();\n\n        const MyMenu = () => {\n          _s2();\n\n          const [, drager] = useDrag({\n            item: {\n              type: 'menu',\n              rank: item.rank\n            }\n          });\n          return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n            ref: drager,\n            children: /*#__PURE__*/_jsxDEV(FavMenu, {\n              title: item.title,\n              editFavType: this.editFavType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, item.rank, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this);\n        };\n\n        _s2(MyMenu, \"DAJwS7wwDMuMqE3j3WOeBOh5ny8=\", false, function () {\n          return [useDrag];\n        });\n\n        return /*#__PURE__*/_jsxDEV(MyMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this);\n      });\n    };\n\n    this.onAdd = () => {\n      this.setState({\n        onAddStatus: true\n      });\n    };\n\n    this.onDel = () => {\n      console.log('Del' + this.state.selectedMenu); //TODO 删除选中项\n    };\n\n    this.onSelect = value => {\n      this.setState({\n        selectedMenu: value.key\n      });\n    };\n\n    this.editFavType = (oldName, newName) => {\n      console.log(oldName, newName); //TODO 编辑收藏类名\n    };\n\n    this.addFavType = typeName => {\n      //TODO 添加收藏类名\n      let {\n        menuList\n      } = this.state;\n\n      if (typeName) {\n        const rank = menuList.length;\n        menuList.push({\n          rank: rank,\n          title: typeName\n        });\n      }\n\n      this.setState({\n        onAddStatus: false,\n        menuList: menuList\n      });\n    };\n\n    const favouritesMenuList = [{\n      rank: 0,\n      title: '常用'\n    }, {\n      rank: 1,\n      title: '文献'\n    }];\n    this.state = {\n      theme: 'light',\n      menuList: favouritesMenuList,\n      onAddStatus: false,\n      selectedMenu: favouritesMenuList[0]\n    };\n  }\n\n  render() {\n    const {\n      menuList,\n      onAddStatus\n    } = this.state;\n    const menuNodes = this.getMenuNodes(menuList);\n    return /*#__PURE__*/_jsxDEV(Sider, {\n      className: \"favourites-sider\",\n      theme: this.state.theme,\n      children: [/*#__PURE__*/_jsxDEV(_Menu, {\n        className: \"favourites-sider-menu\",\n        mode: \"inline\",\n        defaultSelectedKeys: ['0'],\n        onSelect: this.onSelect,\n        children: [menuNodes, /*#__PURE__*/_jsxDEV(_Menu.Item, {\n          style: {\n            display: onAddStatus ? 'block' : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(FavInput, {\n            editFavType: this.addFavType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, 'new-menu', false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          style: {\n            width: \"50%\"\n          },\n          onClick: this.onAdd,\n          children: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n            style: {\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          style: {\n            width: \"50%\"\n          },\n          onClick: this.onDel,\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: {\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DragMenu\");","map":{"version":3,"sources":["/home/horbin/Project/Web/my-web/Client/src/pages/tools/favourites/components/leftNav/leftNav.jsx"],"names":["React","Component","useRef","useDrag","PlusCircleOutlined","DeleteOutlined","FavInput","FavMenu","DragMenu","rank","title","ref","isDragging","drager","item","type","collect","monitor","opacity","editFavType","Sider","LeftNav","constructor","props","updateMenuList","getMenuNodes","menuList","map","MyMenu","onAdd","setState","onAddStatus","onDel","console","log","state","selectedMenu","onSelect","value","key","oldName","newName","addFavType","typeName","length","push","favouritesMenuList","theme","render","menuNodes","display","width","fontSize"],"mappings":"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","sourcesContent":["import React, {Component, useRef} from 'react'\nimport {useDrag} from 'react-dnd'\n\n\nimport {Layout, Menu, Button } from 'antd'\nimport {\n    PlusCircleOutlined,\n    DeleteOutlined,\n  } from '@ant-design/icons';\n\nimport FavInput from '../favInput/favInput'\nimport FavMenu from '../favMenu/favMenu'\nimport './leftNav.less'\n\n\nconst DragMenu = ({rank, title}) => {\n    const ref = useRef(null)\n    const [{isDragging}, drager] = useDrag({\n        item: {type: 'menu', rank},\n        collect: monitor => ({\n            isDragging: monitor.isDragging(),\n        }),\n    })\n    const opacity = isDragging ? 0.5:1\n    drager(ref)\n    return(\n        <Menu.Item ref={ref} style={{opacity}} key={rank}>\n            <FavMenu title={title} editFavType={this.editFavType}/>\n        </Menu.Item>\n    )\n}\n/*\n左侧导航的组件\n */\nconst { Sider } = Layout;\n\nexport default class LeftNav extends Component{\n    constructor(props){\n        super(props)\n        const favouritesMenuList = [{rank:0, title:'常用'},{rank:1, title:'文献'}]\n        this.state={\n            theme:'light',\n            menuList:favouritesMenuList,\n            onAddStatus: false,\n            selectedMenu:favouritesMenuList[0]\n        }\n    }\n\n    updateMenuList = ()=>{\n        \n    }\n\n    getMenuNodes = (menuList)=>{\n        return menuList.map(item => {\n            const MyMenu = ()=>{\n                const [, drager] = useDrag({\n                    item: {type: 'menu', rank: item.rank}\n                })\n                return(\n                    <Menu.Item ref={drager} key={item.rank}>\n                        <FavMenu title={item.title} editFavType={this.editFavType}/>\n                    </Menu.Item>\n                )\n            }\n            return(<MyMenu/>)\n        })\n    }\n\n    onAdd = ()=>{\n        this.setState({onAddStatus:true})\n    }\n\n    onDel = ()=>{\n        console.log('Del' + this.state.selectedMenu)\n        //TODO 删除选中项\n    }\n\n    onSelect = (value)=>{\n        this.setState({selectedMenu:value.key})\n    }\n\n    editFavType = (oldName, newName)=>{\n        console.log(oldName, newName)\n        //TODO 编辑收藏类名\n    }\n\n    addFavType = (typeName)=>{\n        //TODO 添加收藏类名\n        let {menuList} = this.state\n        if(typeName){\n            const rank = menuList.length\n            menuList.push({rank:rank, title:typeName})\n        }\n        this.setState({onAddStatus:false, menuList:menuList})\n    }\n\n    render(){\n        const {menuList, onAddStatus} = this.state\n        const menuNodes = this.getMenuNodes(menuList)\n        return(\n            <Sider className=\"favourites-sider\" theme={this.state.theme}>\n                <Menu className=\"favourites-sider-menu\" mode=\"inline\"\n                defaultSelectedKeys={['0']}\n                onSelect={this.onSelect}>\n                    {menuNodes}\n                    <Menu.Item key='new-menu' style={{display:onAddStatus ? 'block' : 'none'}}>\n                        <FavInput editFavType={this.addFavType}/>\n                    </Menu.Item>\n                </Menu>\n                <div>\n                    <Button type='link' style={{width:\"50%\"}} onClick={this.onAdd}>\n                        <PlusCircleOutlined style={{ fontSize: '20px'}}/>\n                    </Button>\n                    <Button type='link' style={{width:\"50%\"}} onClick={this.onDel}>\n                        <DeleteOutlined style={{ fontSize: '20px'}}/>\n                    </Button>\n                </div>\n            </Sider>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}