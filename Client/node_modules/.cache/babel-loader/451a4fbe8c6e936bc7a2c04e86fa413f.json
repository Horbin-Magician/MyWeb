{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/horbin/Project/Web/my-web/Client/src/pages/admin/manages/userManage/components/addForm.jsx\";\nimport React, { Component } from 'react';\nimport { reqAuthorityList } from '../../api';\n/*\n管理-统计\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nexport default class AddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.formRef = /*#__PURE__*/React.createRef();\n\n    this.addUser = () => {\n      this.formRef.current.validateFields().then(values => {\n        this.formRef.current.resetFields();\n        this.props.addUser(values.username, values.password, values.authority);\n      }).catch(info => _message.error('请正确填写信息！'));\n    };\n\n    this.getOptions = authorityList => {// return authorityList.map(item => {\n      //     if(!item.children){\n      //         return(<TreeNode title={item.title} key={item.key}></TreeNode>)\n      //     }else{\n      //         return(\n      //             <TreeNode key={item.key} title={item.title}>\n      //                 {this.getMenuNodes(item.children)}\n      //             </TreeNode>\n      //         )\n      //     }\n      // })\n    };\n\n    this.state = {};\n    reqAuthorityList().then(data => {\n      this.authorityList = data.data;\n      const authority = this.authorityList.find(item => item.name === memoryUtils.userdata.authority);\n      this.setState({\n        menuNodes: this.getMenuNodes(menuList, authority.menus)\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Modal, {\n      title: \"\\u6DFB\\u52A0\\u7528\\u6237\",\n      visible: this.props.showStatus === 1,\n      onOk: this.addUser,\n      onCancel: () => {\n        this.props.addUser();\n      },\n      children: /*#__PURE__*/_jsxDEV(_Form, {\n        ref: this.formRef,\n        children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: '请输入用户名'\n          }, {\n            min: 4,\n            message: '用户名最少4位'\n          }, {\n            max: 12,\n            message: '用户名最多12位'\n          }, {\n            pattern: /^[a-zA-z0-9_*!]+$/,\n            message: '用户名必须由英文、数字或英文字符_*!组成'\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            placeholder: \"\\u7528\\u6237\\u540D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: '请输入密码！'\n          }, {\n            min: 6,\n            message: '密码最少6位'\n          }, {\n            max: 16,\n            message: '密码最多16位'\n          }, {\n            pattern: /^[a-zA-z0-9_*!]+$/,\n            message: '密码必须由英文、数字或英文字符_*!组成'\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            type: \"password\",\n            placeholder: \"\\u5BC6\\u7801\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"authority\",\n          initialValue: \"root\",\n          children: /*#__PURE__*/_jsxDEV(_Select, {\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"jack\",\n              children: \"Jack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"lucy\",\n              children: \"Lucy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Yiminghe\",\n              children: \"yiminghe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/horbin/Project/Web/my-web/Client/src/pages/admin/manages/userManage/components/addForm.jsx"],"names":["React","Component","reqAuthorityList","Option","AddForm","constructor","props","formRef","createRef","addUser","current","validateFields","then","values","resetFields","username","password","authority","catch","info","error","getOptions","authorityList","state","data","find","item","name","memoryUtils","userdata","setState","menuNodes","getMenuNodes","menuList","menus","render","showStatus","required","message","min","max","pattern"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Modal, Form, Input, Select,message} from 'antd'\n\nimport {reqAuthorityList} from '../../api'\n/*\n管理-统计\n */\nconst { Option } = Select;\n\nexport default class AddForm extends Component{\n    constructor(props){\n        super(props)\n        this.state = {}\n        reqAuthorityList().then(data => {\n            this.authorityList = data.data\n            const authority = this.authorityList.find(item => item.name === memoryUtils.userdata.authority)\n            this.setState({menuNodes : this.getMenuNodes(menuList, authority.menus)})\n        })\n    }\n\n    formRef = React.createRef()\n\n    addUser = ()=>{\n        this.formRef.current.validateFields().then(values => {\n            this.formRef.current.resetFields();\n            this.props.addUser(values.username, values.password, values.authority)\n        })\n        .catch(info => message.error('请正确填写信息！'));\n    }\n\n    getOptions = (authorityList) =>{\n        // return authorityList.map(item => {\n        //     if(!item.children){\n        //         return(<TreeNode title={item.title} key={item.key}></TreeNode>)\n        //     }else{\n        //         return(\n        //             <TreeNode key={item.key} title={item.title}>\n        //                 {this.getMenuNodes(item.children)}\n        //             </TreeNode>\n        //         )\n        //     }\n        // })\n    }\n\n    render(){\n        return(\n            <Modal title='添加用户' visible={this.props.showStatus===1} \n                onOk={this.addUser} onCancel={()=>{this.props.addUser()}}\n            >\n                <Form ref={this.formRef}>\n                    <Form.Item name=\"username\"\n                    rules={[\n                        {required: true,message: '请输入用户名'},\n                        {min: 4,message: '用户名最少4位'},\n                        {max: 12,message: '用户名最多12位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '用户名必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input placeholder=\"用户名\" />\n                    </Form.Item>\n                    <Form.Item name=\"password\"\n                    rules={[\n                        {required: true,message: '请输入密码！'},\n                        {min: 6,message: '密码最少6位'},\n                        {max: 16,message: '密码最多16位'},\n                        {pattern: /^[a-zA-z0-9_*!]+$/,message: '密码必须由英文、数字或英文字符_*!组成'},\n                    ]}\n                    >\n                        <Input type=\"password\" placeholder=\"密码\"/>\n                    </Form.Item>\n                    <Form.Item name=\"authority\" initialValue='root'>\n                        <Select>\n                            <Option value=\"jack\">Jack</Option>\n                            <Option value=\"lucy\">Lucy</Option>\n                            <Option value=\"Yiminghe\">yiminghe</Option>\n                        </Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}