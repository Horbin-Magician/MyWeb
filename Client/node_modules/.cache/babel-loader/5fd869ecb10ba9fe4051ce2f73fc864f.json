{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/tree/style\";\nimport _Tree from \"antd/es/tree\";\nvar _jsxFileName = \"/home/horbin/Project/Web/my-web/Client/src/pages/admin/manages/authorityManage/components/setForm.jsx\";\nimport React, { Component } from 'react';\nimport menuList from '../../../../../config/menuConfig';\n/*\n管理-统计\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TreeNode\n} = _Tree;\nexport default class AddForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRole = () => {\n      let newMenus = '';\n      if (this.state.checkedKeys.length) newMenus = this.state.checkedKeys.reduce((result, item) => {\n        if (this.ignoreKey.indexOf(result) !== -1) return '';\n        if (this.ignoreKey.indexOf(item) !== -1) return result;\n        return result + '/' + item;\n        return result;\n      });\n      this.props.setRole(this.props.role.name, newMenus);\n    };\n\n    this.getMenuNodes = menuList => {\n      return menuList.map(item => {\n        if (!item.children) {\n          return /*#__PURE__*/_jsxDEV(TreeNode, {\n            title: item.title\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }, this);\n        } else {\n          this.ignoreKey.push(item.key);\n          return /*#__PURE__*/_jsxDEV(TreeNode, {\n            title: item.title,\n            children: this.getMenuNodes(item.children)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this);\n        }\n      });\n    };\n\n    this.onCheck = checkedKeys => {\n      this.setState({\n        checkedKeys\n      });\n    };\n\n    this.state = {\n      checkedKeys: {}\n    };\n    this.ignoreKey = ['all'];\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.showStatus === 0) {\n      const nextMenus = nextProps.role.menus ? nextProps.role.menus.split('/') : {};\n      if (nextMenus !== prevState.checkedKeys) return {\n        checkedKeys: nextMenus\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Modal, {\n      title: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\",\n      visible: this.props.showStatus === 2,\n      onOk: this.setRole,\n      onCancel: () => {\n        this.props.setRole();\n      },\n      children: /*#__PURE__*/_jsxDEV(_Tree, {\n        checkable: true,\n        defaultExpandAll: true,\n        checkedKeys: this.state.checkedKeys,\n        onCheck: this.onCheck,\n        children: /*#__PURE__*/_jsxDEV(TreeNode, {\n          title: \"\\u5E73\\u53F0\\u6743\\u9650\",\n          children: this.menuNodes\n        }, 'all', false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/horbin/Project/Web/my-web/Client/src/pages/admin/manages/authorityManage/components/setForm.jsx"],"names":["React","Component","menuList","TreeNode","AddForm","constructor","props","setRole","newMenus","state","checkedKeys","length","reduce","result","item","ignoreKey","indexOf","role","name","getMenuNodes","map","children","title","key","push","onCheck","setState","menuNodes","getDerivedStateFromProps","nextProps","prevState","showStatus","nextMenus","menus","split","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Modal, Tree} from 'antd'\n\nimport menuList from '../../../../../config/menuConfig'\n/*\n管理-统计\n */\nconst {TreeNode} = Tree\n\nexport default class AddForm extends Component{\n    constructor(props){\n        super(props)\n        this.state = {checkedKeys: {}}\n        this.ignoreKey = ['all']\n        this.menuNodes = this.getMenuNodes(menuList)\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if(nextProps.showStatus === 0){\n            const nextMenus = nextProps.role.menus ? nextProps.role.menus.split('/') : {}\n            if(nextMenus !== prevState.checkedKeys)return{checkedKeys:nextMenus}\n        }\n        return null\n    }\n\n    setRole = ()=>{\n        let newMenus = ''\n        if(this.state.checkedKeys.length)newMenus = this.state.checkedKeys.reduce(\n            (result, item)=>{\n                if(this.ignoreKey.indexOf(result) !== -1)return ''\n                if(this.ignoreKey.indexOf(item) !== -1)return result\n                return(result + '/' + item)\n                return result\n        })\n        this.props.setRole(this.props.role.name, newMenus)\n    }\n\n    getMenuNodes = (menuList) =>{\n        return menuList.map(item => {\n            if(!item.children){\n                return(<TreeNode title={item.title} key={item.key}></TreeNode>)\n            }else{\n                this.ignoreKey.push(item.key)\n                return(\n                    <TreeNode key={item.key} title={item.title}>\n                        {this.getMenuNodes(item.children)}\n                    </TreeNode>\n                )\n            }\n        })\n    }\n\n    onCheck = checkedKeys => {\n        this.setState({checkedKeys})\n    }\n\n    render(){\n        return(\n            <Modal title='设置角色权限' visible={this.props.showStatus===2} \n            onOk={this.setRole} onCancel={()=>{this.props.setRole()}}>\n                <Tree checkable defaultExpandAll={true} \n                checkedKeys={this.state.checkedKeys}\n                onCheck={this.onCheck}>\n                    <TreeNode title='平台权限' key='all'>\n                        {this.menuNodes}\n                    </TreeNode>\n                </Tree>\n            </Modal>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}