{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/home/horbin/Project/Web/my-web/Client/src/pages/tools/favourites/components/leftNav/leftNav.jsx\";\nimport React, { Component } from 'react';\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { reqFavTypeList, reqDelType, reqUpdateType, reqMoveType } from '../../../../../api';\nimport FavInput from '../favInput/favInput';\nimport FavMenu from '../favMenu/favMenu';\n/*\n左侧导航的组件\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Sider\n} = _Layout;\nexport default class LeftNav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setSelectedMenu = title => {\n      this.setState({\n        selectedMenu: title\n      });\n      this.props.onFavTypeChange(title);\n    };\n\n    this.updateMenuList = () => {\n      reqFavTypeList().then(data => {\n        this.setState({\n          menuList: data.data\n        });\n\n        if (!this.state.selectedMenu && data.data[0]) {\n          this.setSelectedMenu(data.data[0].title);\n        }\n      });\n    };\n\n    this.getRankFromTitle = title => {\n      const item = this.state.menuList.find(item => item.title === title);\n      return item.rank;\n    };\n\n    this.onDragStart = ev => {\n      const dragingMenu = ev.target.childNodes[0].childNodes[0].innerHTML;\n      this.setState({\n        dragingMenu: dragingMenu\n      });\n    };\n\n    this.onDropOver = ev => {\n      ev.preventDefault();\n      const {\n        dragingMenu\n      } = this.state;\n\n      if (dragingMenu) {\n        const targetMenu = ev.target.innerHTML;\n\n        if (dragingMenu !== targetMenu) {\n          this.setState({\n            targetMenu: targetMenu\n          });\n        }\n      }\n    };\n\n    this.onDrop = ev => {\n      const {\n        targetMenu,\n        dragingMenu\n      } = this.state;\n      reqMoveType(dragingMenu, targetMenu).then(data => {\n        if (data.status === '0') this.updateMenuList();\n      });\n      this.setState({\n        targetMenu: {},\n        dragingMenu: {}\n      }); //初始化\n    };\n\n    this.getMenuNodes = menuList => {\n      const {\n        targetMenu,\n        dragingMenu\n      } = this.state;\n      return menuList.map(item => {\n        let targetStyle = {};\n\n        if (targetMenu === item.title) {\n          const targetRank = this.getRankFromTitle(targetMenu);\n          const dragingRank = this.getRankFromTitle(dragingMenu);\n          if (dragingRank > targetRank) targetStyle = {\n            borderTop: \"2px dashed #1890ff\"\n          };else targetStyle = {\n            borderBottom: \"2px dashed #1890ff\"\n          };\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n          style: targetStyle,\n          draggable: true,\n          onDragStart: this.onDragStart,\n          onDragOver: this.onDropOver,\n          onDrop: this.onDrop,\n          children: /*#__PURE__*/_jsxDEV(FavMenu, {\n            title: item.title,\n            editFavType: this.editFavType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.onAdd = () => {\n      this.setState({\n        onAddStatus: true\n      });\n    };\n\n    this.onDel = () => {\n      reqDelType(this.state.selectedMenu).then(data => {\n        if (data.status === '0') {\n          _message.success('删除成功！');\n\n          this.updateMenuList();\n          this.setSelectedMenu(this.state.menuList[0].title);\n        }\n      });\n    };\n\n    this.onSelect = value => this.setSelectedMenu(value.key);\n\n    this.editFavType = (oldName, newName) => {\n      const result = this.state.menuList.find(item => item.title === newName);\n\n      if (result) {\n        _message.error('已有相同类别，请更换一个！');\n\n        return;\n      }\n\n      reqUpdateType(newName, undefined, oldName).then(data => {\n        if (data.status === '0') {\n          _message.success('修改成功！');\n\n          this.updateMenuList();\n          if (oldName === this.state.selectedMenu) this.setState({\n            selectedMenu: newName\n          });\n        }\n      });\n    };\n\n    this.addFavType = typeName => {\n      let {\n        menuList\n      } = this.state;\n      const result = menuList.find(item => item.title === typeName);\n\n      if (result) {\n        _message.error('已有相同类别，请更换一个！');\n      } else if (typeName) {\n        const rank = menuList.length;\n        reqUpdateType(typeName, rank).then(data => {\n          if (data.status === '0') {\n            _message.success('添加成功！');\n\n            menuList.push({\n              rank: rank,\n              title: typeName\n            });\n            this.setState({\n              menuList: menuList\n            });\n          }\n        });\n      }\n\n      this.setState({\n        onAddStatus: false\n      });\n    };\n\n    this.state = {\n      theme: 'light',\n      menuList: [],\n      onAddStatus: false,\n      selectedMenu: '',\n      dragingMenu: {},\n      targetMenu: {}\n    };\n  }\n\n  componentDidMount() {\n    this.updateMenuList();\n  }\n\n  render() {\n    const {\n      menuList,\n      onAddStatus,\n      selectedMenu\n    } = this.state;\n    const menuNodes = this.getMenuNodes(menuList);\n    return /*#__PURE__*/_jsxDEV(Sider, {\n      width: \"150\",\n      className: \"favourites-sider\",\n      theme: this.state.theme,\n      children: [/*#__PURE__*/_jsxDEV(_Menu, {\n        className: \"favourites-sider-menu\",\n        mode: \"inline\",\n        selectedKeys: [selectedMenu],\n        onSelect: this.onSelect,\n        children: [menuNodes, /*#__PURE__*/_jsxDEV(_Menu.Item, {\n          disabled: true,\n          style: {\n            display: onAddStatus ? 'block' : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(FavInput, {\n            editFavType: this.addFavType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, 'new-menu', false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          style: {\n            width: \"50%\"\n          },\n          onClick: this.onAdd,\n          children: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n            style: {\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          style: {\n            width: \"50%\"\n          },\n          onClick: this.onDel,\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: {\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/horbin/Project/Web/my-web/Client/src/pages/tools/favourites/components/leftNav/leftNav.jsx"],"names":["React","Component","PlusCircleOutlined","DeleteOutlined","reqFavTypeList","reqDelType","reqUpdateType","reqMoveType","FavInput","FavMenu","Sider","LeftNav","constructor","props","setSelectedMenu","title","setState","selectedMenu","onFavTypeChange","updateMenuList","then","data","menuList","state","getRankFromTitle","item","find","rank","onDragStart","ev","dragingMenu","target","childNodes","innerHTML","onDropOver","preventDefault","targetMenu","onDrop","status","getMenuNodes","map","targetStyle","targetRank","dragingRank","borderTop","borderBottom","editFavType","onAdd","onAddStatus","onDel","success","onSelect","value","key","oldName","newName","result","error","undefined","addFavType","typeName","length","push","theme","componentDidMount","render","menuNodes","display","width","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Layout, Menu, Button, message } from 'antd'\nimport {\n    PlusCircleOutlined,\n    DeleteOutlined,\n  } from '@ant-design/icons';\n\nimport {reqFavTypeList, reqDelType, reqUpdateType, reqMoveType} from '../../../../../api'\nimport FavInput from '../favInput/favInput'\nimport FavMenu from '../favMenu/favMenu'\n/*\n左侧导航的组件\n */\nconst { Sider } = Layout;\n\nexport default class LeftNav extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            theme:'light',\n            menuList:[],\n            onAddStatus: false,\n            selectedMenu:'',\n            dragingMenu:{},\n            targetMenu:{},\n        }\n    }\n\n    componentDidMount(){\n        this.updateMenuList()\n    }\n\n    setSelectedMenu = (title)=>{\n        this.setState({selectedMenu:title})\n        this.props.onFavTypeChange(title)\n    }\n\n    updateMenuList = ()=>{\n        reqFavTypeList().then(data=>{\n            this.setState({menuList:data.data})\n            if(!this.state.selectedMenu && data.data[0]){\n                this.setSelectedMenu(data.data[0].title)\n            }\n        })\n    }\n\n    getRankFromTitle = (title)=>{\n        const item = this.state.menuList.find(item=>item.title===title)\n        return item.rank\n    }\n\n    onDragStart = (ev)=>{\n        const dragingMenu = ev.target.childNodes[0].childNodes[0].innerHTML\n        this.setState({dragingMenu:dragingMenu})\n    }\n\n    onDropOver = (ev)=>{\n        ev.preventDefault()\n        const {dragingMenu} = this.state\n        if(dragingMenu){\n            const targetMenu = ev.target.innerHTML\n            if(dragingMenu !== targetMenu){\n                this.setState({targetMenu:targetMenu})\n            }\n        }\n    }\n\n    onDrop = (ev)=>{\n        const {targetMenu, dragingMenu} = this.state\n        reqMoveType(dragingMenu, targetMenu).then(data=>{\n            if(data.status === '0')this.updateMenuList()\n        })\n        this.setState({targetMenu:{}, dragingMenu:{}})//初始化\n    }\n\n    getMenuNodes = (menuList)=>{\n        const {targetMenu, dragingMenu} = this.state\n        return menuList.map(item => {\n            let targetStyle = {}\n            if(targetMenu===item.title){\n                const targetRank = this.getRankFromTitle(targetMenu)\n                const dragingRank = this.getRankFromTitle(dragingMenu)\n                if(dragingRank>targetRank)targetStyle = {borderTop:\"2px dashed #1890ff\"}\n                else targetStyle = {borderBottom:\"2px dashed #1890ff\"}\n            }\n            return(\n                <Menu.Item key={item.title} style={targetStyle} draggable={true} \n                onDragStart={this.onDragStart} onDragOver={this.onDropOver}\n                onDrop={this.onDrop}\n                >\n                    <FavMenu title={item.title} editFavType={this.editFavType}/>\n                </Menu.Item>\n            )\n        })\n    }\n\n    onAdd = ()=>{\n        this.setState({onAddStatus:true})\n    }\n\n    onDel = ()=>{\n        reqDelType(this.state.selectedMenu).then(data=>{\n            if(data.status === '0'){\n                message.success('删除成功！')\n                this.updateMenuList()\n                this.setSelectedMenu(this.state.menuList[0].title)\n            }\n        })\n    }\n\n    onSelect = (value)=>this.setSelectedMenu(value.key)\n\n    editFavType = (oldName, newName)=>{\n        const result = this.state.menuList.find(item=>item.title===newName)\n        if(result){\n            message.error('已有相同类别，请更换一个！')\n            return\n        }\n        reqUpdateType(newName,undefined,oldName).then(data=>{\n            if(data.status === '0'){\n                message.success('修改成功！')\n                this.updateMenuList()\n                if(oldName === this.state.selectedMenu)this.setState({selectedMenu:newName})\n            }\n        })\n    }\n\n    addFavType = (typeName)=>{\n        let {menuList} = this.state\n        const result = menuList.find(item=>item.title===typeName)\n        if(result){\n            message.error('已有相同类别，请更换一个！')\n        }else if(typeName){\n            const rank = menuList.length\n            reqUpdateType(typeName, rank).then(data=>{\n                if(data.status === '0'){\n                    message.success('添加成功！')\n                    menuList.push({rank:rank, title:typeName})\n                    this.setState({menuList:menuList})\n                }\n            })\n        }\n        this.setState({onAddStatus:false})\n    }\n\n    render(){\n        const {menuList, onAddStatus, selectedMenu} = this.state\n        const menuNodes = this.getMenuNodes(menuList)\n        return(\n            <Sider width='150' className=\"favourites-sider\" theme={this.state.theme}>\n                <Menu className=\"favourites-sider-menu\" mode=\"inline\"\n                selectedKeys={[selectedMenu]}\n                onSelect={this.onSelect}>\n                    {menuNodes}\n                    <Menu.Item  key='new-menu' disabled style={{display:onAddStatus ? 'block' : 'none'}}>\n                        <FavInput editFavType={this.addFavType}/>\n                    </Menu.Item>\n                </Menu>\n                <div>\n                    <Button type='link' style={{width:\"50%\"}} onClick={this.onAdd}>\n                        <PlusCircleOutlined style={{ fontSize: '20px'}}/>\n                    </Button>\n                    <Button type='link' style={{width:\"50%\"}} onClick={this.onDel}>\n                        <DeleteOutlined style={{ fontSize: '20px'}}/>\n                    </Button>\n                </div>\n            </Sider>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}