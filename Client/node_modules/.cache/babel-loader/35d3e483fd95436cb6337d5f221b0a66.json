{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/home/horbin/Project/Web/my-web/Client/src/pages/tools/favourites/components/leftNav/leftNav.jsx\";\nimport React, { Component } from 'react';\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { reqFavTypeList, reqDelType, reqUpdateType } from '../../../../../api';\nimport FavInput from '../favInput/favInput';\nimport FavMenu from '../favMenu/favMenu';\nimport './leftNav.less';\n/*\n左侧导航的组件\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Sider\n} = _Layout;\nexport default class LeftNav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateMenuList = () => {\n      reqFavTypeList().then(data => {\n        this.setState({\n          menuList: data.data\n        });\n        console.log(data.data);\n\n        if (!this.state.selectedMenu) {\n          this.setState({\n            selectedMenu: data.data[0].title\n          });\n        }\n      });\n    };\n\n    this.getRankFromTitle = title => {\n      const item = this.state.menuList.find(item => item.titl === title);\n      console.log(item);\n      return item.rank;\n    };\n\n    this.onDragStart = ev => {\n      const dragingMenu = ev.target.childNodes[0].childNodes[0].innerHTML;\n      this.setState({\n        dragingMenu: dragingMenu\n      });\n    };\n\n    this.onDropOver = ev => {\n      ev.preventDefault();\n      const {\n        dragingMenu\n      } = this.state;\n\n      if (dragingMenu) {\n        const targetMenu = ev.target.innerHTML;\n\n        if (dragingMenu !== targetMenu) {\n          this.setState({\n            targetMenu: targetMenu\n          });\n        }\n      }\n    };\n\n    this.onDrop = ev => {\n      const {\n        targetMenu,\n        dragingMenu\n      } = this.state;\n      console.log(targetMenu, dragingMenu); //TODO 再次定义排序\n      //初始化\n\n      this.setState({\n        targetMenu: {},\n        dragingMenu: {}\n      });\n    };\n\n    this.getMenuNodes = menuList => {\n      const {\n        targetMenu,\n        dragingMenu\n      } = this.state;\n      return menuList.map(item => {\n        let targetStyle = {};\n\n        if (targetMenu === item.title) {\n          const targetRank = this.getRankFromTitle(targetMenu);\n          const dragingRank = this.getRankFromTitle(dragingMenu);\n          if (dragingRank > targetRank) targetStyle = {\n            borderTop: \"2px dashed #1890ff\"\n          };else targetStyle = {\n            borderBottom: \"2px dashed #1890ff\"\n          };\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n          style: targetStyle,\n          draggable: true,\n          onDragStart: this.onDragStart,\n          onDragOver: this.onDropOver,\n          onDrop: this.onDrop,\n          children: /*#__PURE__*/_jsxDEV(FavMenu, {\n            title: item.title,\n            editFavType: this.editFavType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.onAdd = () => {\n      this.setState({\n        onAddStatus: true\n      });\n    };\n\n    this.onDel = () => {\n      reqDelType(this.state.selectedMenu).then(data => {\n        if (data.status === '0') {\n          _message.success('删除成功！');\n\n          this.updateMenuList();\n        }\n      });\n    };\n\n    this.onSelect = value => {\n      this.setState({\n        selectedMenu: value.key\n      });\n    };\n\n    this.editFavType = (oldName, newName) => {\n      console.log(oldName, newName);\n      reqUpdateType(newName, undefined, oldName).then(data => {\n        if (data.status === '0') {\n          _message.success('修改成功！');\n\n          this.updateMenuList();\n        }\n      });\n    };\n\n    this.addFavType = typeName => {\n      let {\n        menuList\n      } = this.state;\n\n      if (typeName) {\n        const rank = menuList.length;\n        reqUpdateType(typeName, rank).then(data => {\n          if (data.status === '0') {\n            _message.success('添加成功！');\n\n            menuList.push({\n              rank: rank,\n              title: typeName\n            });\n            this.setState({\n              menuList: menuList\n            });\n          }\n        });\n      }\n\n      this.setState({\n        onAddStatus: false\n      });\n    };\n\n    this.state = {\n      theme: 'light',\n      menuList: [],\n      onAddStatus: false,\n      selectedMenu: '',\n      dragingMenu: {},\n      targetMenu: {}\n    };\n  }\n\n  componentDidMount() {\n    this.updateMenuList();\n  }\n\n  render() {\n    const {\n      menuList,\n      onAddStatus,\n      selectedMenu\n    } = this.state;\n    const menuNodes = this.getMenuNodes(menuList);\n    return /*#__PURE__*/_jsxDEV(Sider, {\n      className: \"favourites-sider\",\n      theme: this.state.theme,\n      children: [/*#__PURE__*/_jsxDEV(_Menu, {\n        className: \"favourites-sider-menu\",\n        mode: \"inline\",\n        selectedKeys: [selectedMenu],\n        onSelect: this.onSelect,\n        children: [menuNodes, /*#__PURE__*/_jsxDEV(_Menu.Item, {\n          style: {\n            display: onAddStatus ? 'block' : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(FavInput, {\n            editFavType: this.addFavType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, 'new-menu', false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          style: {\n            width: \"50%\"\n          },\n          onClick: this.onAdd,\n          children: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n            style: {\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          style: {\n            width: \"50%\"\n          },\n          onClick: this.onDel,\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: {\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/horbin/Project/Web/my-web/Client/src/pages/tools/favourites/components/leftNav/leftNav.jsx"],"names":["React","Component","PlusCircleOutlined","DeleteOutlined","reqFavTypeList","reqDelType","reqUpdateType","FavInput","FavMenu","Sider","LeftNav","constructor","props","updateMenuList","then","data","setState","menuList","console","log","state","selectedMenu","title","getRankFromTitle","item","find","titl","rank","onDragStart","ev","dragingMenu","target","childNodes","innerHTML","onDropOver","preventDefault","targetMenu","onDrop","getMenuNodes","map","targetStyle","targetRank","dragingRank","borderTop","borderBottom","editFavType","onAdd","onAddStatus","onDel","status","success","onSelect","value","key","oldName","newName","undefined","addFavType","typeName","length","push","theme","componentDidMount","render","menuNodes","display","width","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Layout, Menu, Button, message } from 'antd'\nimport {\n    PlusCircleOutlined,\n    DeleteOutlined,\n  } from '@ant-design/icons';\n\nimport {reqFavTypeList, reqDelType, reqUpdateType} from '../../../../../api'\nimport FavInput from '../favInput/favInput'\nimport FavMenu from '../favMenu/favMenu'\nimport './leftNav.less'\n/*\n左侧导航的组件\n */\nconst { Sider } = Layout;\n\nexport default class LeftNav extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            theme:'light',\n            menuList:[],\n            onAddStatus: false,\n            selectedMenu:'',\n            dragingMenu:{},\n            targetMenu:{},\n        }\n    }\n\n    componentDidMount(){\n        this.updateMenuList()\n    }\n\n    updateMenuList = ()=>{\n        reqFavTypeList().then(data=>{\n            this.setState({menuList:data.data})\n            console.log(data.data)\n            if(!this.state.selectedMenu){\n                this.setState({selectedMenu:data.data[0].title})\n            }\n        })\n    }\n\n    getRankFromTitle = (title)=>{\n        const item = this.state.menuList.find(item=>item.titl===title)\n        console.log(item)\n        return item.rank\n    }\n\n    onDragStart = (ev)=>{\n        const dragingMenu = ev.target.childNodes[0].childNodes[0].innerHTML\n        this.setState({dragingMenu:dragingMenu})\n    }\n\n    onDropOver = (ev)=>{\n        ev.preventDefault()\n        const {dragingMenu} = this.state\n        if(dragingMenu){\n            const targetMenu = ev.target.innerHTML\n            if(dragingMenu !== targetMenu){\n                this.setState({targetMenu:targetMenu})\n            }\n        }\n    }\n\n    onDrop = (ev)=>{\n        const {targetMenu, dragingMenu} = this.state\n        console.log(targetMenu, dragingMenu)\n        //TODO 再次定义排序\n        //初始化\n        this.setState({targetMenu:{}, dragingMenu:{}})\n    }\n\n    getMenuNodes = (menuList)=>{\n        const {targetMenu, dragingMenu} = this.state\n        return menuList.map(item => {\n            let targetStyle = {}\n            if(targetMenu===item.title){\n                const targetRank = this.getRankFromTitle(targetMenu)\n                const dragingRank = this.getRankFromTitle(dragingMenu)\n                if(dragingRank>targetRank)targetStyle = {borderTop:\"2px dashed #1890ff\"}\n                else targetStyle = {borderBottom:\"2px dashed #1890ff\"}\n            }\n            return(\n                <Menu.Item key={item.title} style={targetStyle} draggable={true} \n                onDragStart={this.onDragStart} onDragOver={this.onDropOver}\n                onDrop={this.onDrop}\n                >\n                    <FavMenu title={item.title} editFavType={this.editFavType}/>\n                </Menu.Item>\n            )\n        })\n    }\n\n    onAdd = ()=>{\n        this.setState({onAddStatus:true})\n    }\n\n    onDel = ()=>{\n        reqDelType(this.state.selectedMenu).then(data=>{\n            if(data.status === '0'){\n                message.success('删除成功！')\n                this.updateMenuList()\n            }\n        })\n    }\n\n    onSelect = (value)=>{\n        this.setState({selectedMenu:value.key})\n    }\n\n    editFavType = (oldName, newName)=>{\n        console.log(oldName, newName)\n        reqUpdateType(newName,undefined,oldName).then(data=>{\n            if(data.status === '0'){\n                message.success('修改成功！')\n                this.updateMenuList()\n            }\n        })\n    }\n\n    addFavType = (typeName)=>{\n        let {menuList} = this.state\n        if(typeName){\n            const rank = menuList.length\n            reqUpdateType(typeName, rank).then(data=>{\n                if(data.status === '0'){\n                    message.success('添加成功！')\n                    menuList.push({rank:rank, title:typeName})\n                    this.setState({menuList:menuList})\n                }\n            })\n        }\n        this.setState({onAddStatus:false})\n    }\n\n    render(){\n        const {menuList, onAddStatus, selectedMenu} = this.state\n        const menuNodes = this.getMenuNodes(menuList)\n        return(\n            <Sider className=\"favourites-sider\" theme={this.state.theme}>\n                <Menu className=\"favourites-sider-menu\" mode=\"inline\"\n                selectedKeys={[selectedMenu]}\n                onSelect={this.onSelect}>\n                    {menuNodes}\n                    <Menu.Item  key='new-menu' style={{display:onAddStatus ? 'block' : 'none'}}>\n                        <FavInput editFavType={this.addFavType}/>\n                    </Menu.Item>\n                </Menu>\n                <div>\n                    <Button type='link' style={{width:\"50%\"}} onClick={this.onAdd}>\n                        <PlusCircleOutlined style={{ fontSize: '20px'}}/>\n                    </Button>\n                    <Button type='link' style={{width:\"50%\"}} onClick={this.onDel}>\n                        <DeleteOutlined style={{ fontSize: '20px'}}/>\n                    </Button>\n                </div>\n            </Sider>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}